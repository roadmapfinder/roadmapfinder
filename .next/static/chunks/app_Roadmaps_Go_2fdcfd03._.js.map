{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Go/roadmapData.js"],"sourcesContent":["export const phases = [\n  {\n    id: 1,\n    title: \"Foundations — Beginner\",\n    subtitle: \"0–1 month\",\n    description: \"Understand syntax, compile/run code, basic data structures and control flow\",\n    color: \"bg-green-500\",\n    sections: [\n      {\n        title: \"Core Topics\",\n        items: [\n          \"Install Go, use go command, workspace basics (GOPATH history vs modules)\",\n          \"package main, func main(), building and running (go run, go build)\",\n          \"Basic types: int, float, string, bool\",\n          \"Composite types: arrays, slices, maps, structs\",\n          \"Flow control: if, switch, for (Go's only loop)\",\n          \"Functions, multiple return values, named returns\",\n          \"Error handling idiom (error type, returning errors)\",\n          \"Basic I/O and formatting (fmt, bufio)\"\n        ]\n      },\n      {\n        title: \"Practice Projects\",\n        items: [\n          \"Build CLI 'todo' app using file storage\",\n          \"Reverse slice exercise\",\n          \"Implement map[string]int frequency counter\",\n          \"Write small unit tests with testing package\"\n        ]\n      },\n      {\n        title: \"Resources\",\n        items: [\n          \"Go 'Getting Started' tutorial and official docs\",\n          \"Current stable: Go 1.25 (released August 2025)\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 2,\n    title: \"Language Deep Dive — Early Intermediate\",\n    subtitle: \"1–3 months\",\n    description: \"Write idiomatic Go, memory model basics, testing\",\n    color: \"bg-yellow-500\",\n    sections: [\n      {\n        title: \"Core Topics\",\n        items: [\n          \"Slices internals (len, cap, backing array)\",\n          \"Pointers and when you need them in Go\",\n          \"Interfaces (implicit implementation), empty interface interface{}\",\n          \"Methods vs functions, value vs pointer receivers\",\n          \"Concurrency primitives: goroutines, channels, select (Start here; master later)\",\n          \"Packages and modules: go mod init, go get, semantic import versioning\",\n          \"Testing: testing package, table tests, subtests, benchmarks (testing.B), test coverage\",\n          \"Formatting & style: gofmt, go vet, golint (style linters)\"\n        ]\n      },\n      {\n        title: \"Practice Projects\",\n        items: [\n          \"Write a small HTTP server serving JSON (use net/http)\",\n          \"Add unit tests + table tests + benchmarks\",\n          \"Use go mod in the project\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 3,\n    title: \"Tooling, Dev Workflow & Code Quality\",\n    subtitle: \"3–6 months\",\n    description: \"Professional dev environment and CI hygiene\",\n    color: \"bg-orange-500\",\n    sections: [\n      {\n        title: \"Core Tooling\",\n        items: [\n          \"gofmt / goimports — automated formatting\",\n          \"golangci-lint — multi-linter runner (lint rules, static analysis)\",\n          \"delve — debugger for Go\",\n          \"Dependency management: understand go.sum and module versioning\",\n          \"Profiling and tracing tools: pprof, net/trace, runtime/pprof\",\n          \"Code generation tools: go generate, stringer, mockgen (for interfaces)\",\n          \"Build tags and cross-compilation basics\"\n        ]\n      },\n      {\n        title: \"CI / CD\",\n        items: [\n          \"Run go test ./... + linting + go vet in CI (GitHub Actions, GitLab CI, CircleCI)\",\n          \"Build reproducible artifacts (static builds, container images)\"\n        ]\n      },\n      {\n        title: \"Practice Projects\",\n        items: [\n          \"Create GitHub Actions that run tests, lint, and build multi-arch Docker images\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 4,\n    title: \"Web & Services — Intermediate to Advanced\",\n    subtitle: \"4–9 months\",\n    description: \"Build robust backend services with common patterns\",\n    color: \"bg-blue-500\",\n    sections: [\n      {\n        title: \"Core Topics\",\n        items: [\n          \"HTTP server internals: net/http, middleware patterns, context (context.Context) propagation\",\n          \"Routing & frameworks: Gin, Fiber, Echo, Chi — pick one to learn deeply\",\n          \"JSON & serialization (encoding/json), streaming large payloads\",\n          \"Request validation and graceful shutdown\",\n          \"Authentication & Authorization: JWT, OAuth flows, session handling\",\n          \"gRPC & protobuf: define proto files, use protoc + Go plugins\",\n          \"REST vs gRPC decision factors\"\n        ]\n      },\n      {\n        title: \"Practice Projects\",\n        items: [\n          \"Build a REST API (CRUD) with one chosen framework + an admin UI\",\n          \"Implement gRPC service that communicates with REST service (interop example)\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 5,\n    title: \"Databases & Persistence\",\n    subtitle: \"4–9 months\",\n    description: \"Best practices for relational and NoSQL DB access\",\n    color: \"bg-purple-500\",\n    sections: [\n      {\n        title: \"Core Topics\",\n        items: [\n          \"database/sql basics (connections, prepared statements, transactions)\",\n          \"Choice: raw SQL (database/sql + sqlx), codegen SQL (sqlc), ORM (GORM, Ent, Bun)\",\n          \"Learn tradeoffs: control vs convenience (many teams prefer sqlc or lightweight libs)\",\n          \"Migrations (e.g., golang-migrate)\",\n          \"Connection pooling, retries, transaction strategies\",\n          \"Caching strategies (Redis), CQRS basics when needed\"\n        ]\n      },\n      {\n        title: \"Practice Projects\",\n        items: [\n          \"Build service using PostgreSQL\",\n          \"Implement schema migrations and sqlc-generated queries\",\n          \"Add Redis caching layer\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 6,\n    title: \"Concurrency & Performance — Advanced\",\n    subtitle: \"6–9 months\",\n    description: \"Build safe, performant concurrent systems\",\n    color: \"bg-red-500\",\n    sections: [\n      {\n        title: \"Core Topics\",\n        items: [\n          \"Deep mastery of goroutines, channels, select, worker pools, fan-in/fan-out patterns\",\n          \"Concurrency patterns (pipeline, worker pool, rate limiting, context cancellation)\",\n          \"Avoid common pitfalls: goroutine leaks, data races (use -race flag)\",\n          \"Synchronization primitives (sync.Mutex, sync.WaitGroup, atomic)\",\n          \"Profiling and performance optimization (pprof, CPU/mem profiles)\",\n          \"Memory management, escape analysis, GC tuning (where relevant)\",\n          \"Benchmarking correctly, identifying hotspots\"\n        ]\n      },\n      {\n        title: \"Practice Projects\",\n        items: [\n          \"Build a concurrent web crawler or ETL pipeline with graceful shutdown and profiling\",\n          \"Use go test -bench and pprof to optimize\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 7,\n    title: \"Architecture, Microservices & Distributed Systems\",\n    subtitle: \"9–12 months\",\n    description: \"Design systems for reliability, observability and scale\",\n    color: \"bg-indigo-500\",\n    sections: [\n      {\n        title: \"Core Topics\",\n        items: [\n          \"Microservices patterns: API gateway, service discovery, retries/backoff, circuit breaker\",\n          \"Synchronous vs asynchronous communication (gRPC, HTTP vs NATS, Kafka)\",\n          \"Distributed tracing (OpenTelemetry), structured logging (zap, zerolog)\",\n          \"Metrics (Prometheus client)\",\n          \"Observability: traces, metrics, logs, and alerting\",\n          \"Scalability: stateless services, horizontal scaling, database sharding strategies\",\n          \"Security practices: input validation, secrets management (Vault), TLS, dependency scanning\",\n          \"Service testing: contract testing, integration tests with testcontainers, chaos experiments\"\n        ]\n      },\n      {\n        title: \"Practice Projects\",\n        items: [\n          \"Build a microservice system: API gateway, auth service, data service, message producer/consumer\",\n          \"Add tracing (OpenTelemetry), metrics (Prometheus), and logging\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 8,\n    title: \"Cloud, Deployment & Infrastructure\",\n    subtitle: \"9–12 months\",\n    description: \"Ship and operate Go services\",\n    color: \"bg-pink-500\",\n    sections: [\n      {\n        title: \"Core Topics\",\n        items: [\n          \"Containerization: Docker, multi-stage builds for small binaries (scratch or distroless)\",\n          \"Kubernetes basics: Deployments, Services, ConfigMaps, Secrets, probes (liveness/readiness)\",\n          \"CI/CD pipelines (GitHub Actions, GitLab CI); automated image builds and deployments\",\n          \"Serverless options: Cloud Run, AWS Lambda (Go support)\",\n          \"Observability stacks: Prometheus + Grafana, ELK/EFK stacks, managed tracing\",\n          \"Cost, autoscaling, multi-region concerns\"\n        ]\n      },\n      {\n        title: \"Practice Projects\",\n        items: [\n          \"Dockerize service, deploy to Kubernetes (minikube/k3s)\",\n          \"Deploy to cloud provider (GKE/EKS/AKS or Cloud Run)\",\n          \"Add CI that deploys to staging\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 9,\n    title: \"Testing, Reliability & Maintenance\",\n    subtitle: \"12+ months\",\n    description: \"Production comfort: tests, code health, reliability\",\n    color: \"bg-teal-500\",\n    sections: [\n      {\n        title: \"Core Topics\",\n        items: [\n          \"Unit tests, integration tests, end-to-end tests; use Docker for integration dependencies\",\n          \"Mocks and test doubles (mockgen, testify)\",\n          \"Fuzz testing (go test -fuzz)\",\n          \"Chaos testing, canary releases, blue/green deploys\",\n          \"SLOs and SLIs, incident post-mortems\"\n        ]\n      },\n      {\n        title: \"Practice Projects\",\n        items: [\n          \"Add fuzz tests\",\n          \"Integration tests that run in CI against ephemeral DB\",\n          \"Create runbook for incident response\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 10,\n    title: \"Soft/Team Skills & Career Growth\",\n    subtitle: \"Industry Ready\",\n    description: \"Move from solo contributor to team-level impact\",\n    color: \"bg-cyan-500\",\n    sections: [\n      {\n        title: \"Skills\",\n        items: [\n          \"Code reviews and mentorship\",\n          \"API design and backwards compatibility\",\n          \"Writing clear docs, README, and design RFCs\",\n          \"Open-source contributions to Go ecosystem\",\n          \"Interview prep: system design, concurrency questions, advanced Go problems\"\n        ]\n      },\n      {\n        title: \"Interview Prep\",\n        items: [\n          \"Design a URL shortener (scale discussion)\",\n          \"Implement concurrent cache\",\n          \"Debug a race using -race flag\",\n          \"Explain escape analysis\",\n          \"Explain how go scheduler and runtime interact at a high level\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 11,\n    title: \"Recommended Hands-On Projects\",\n    subtitle: \"Progressive Complexity\",\n    description: \"Build these projects to solidify your skills\",\n    color: \"bg-lime-500\",\n    sections: [\n      {\n        title: \"Beginner to Advanced Projects\",\n        items: [\n          \"CLI todo app with local file storage + tests\",\n          \"REST CRUD API (Postgres) with sqlc + migrations + unit tests\",\n          \"Concurrent web crawler with worker pool + pprof optimization\",\n          \"gRPC microservice with protobuf and client library\",\n          \"Full microservice system: API gateway, auth service, data service, event-driven pipeline (Kafka/NATS), deployed on k8s with monitoring and tracing\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 12,\n    title: \"Libraries, Frameworks & Ecosystem\",\n    subtitle: \"Essential Tools\",\n    description: \"What to learn and why\",\n    color: \"bg-amber-500\",\n    sections: [\n      {\n        title: \"Web Frameworks / Routers\",\n        items: [\n          \"Gin, Echo, Chi, Fiber — learn one (Chi/Gin are common choices)\"\n        ]\n      },\n      {\n        title: \"DB/ORM\",\n        items: [\n          \"database/sql + sqlc (codegen) for strong SQL control\",\n          \"GORM for quick development\",\n          \"Ent for typed schema+code generation\",\n          \"Evaluate tradeoffs for your team\"\n        ]\n      },\n      {\n        title: \"Logging & Metrics\",\n        items: [\n          \"zap (structured logging)\",\n          \"Prometheus client\",\n          \"OpenTelemetry for tracing\"\n        ]\n      },\n      {\n        title: \"Testing\",\n        items: [\n          \"testify\",\n          \"mockgen\"\n        ]\n      },\n      {\n        title: \"Linting & Vet\",\n        items: [\n          \"golangci-lint\",\n          \"go vet\",\n          \"staticcheck\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 13,\n    title: \"Learning Plan Checklist\",\n    subtitle: \"Track Your Progress\",\n    description: \"Compact checklist of key milestones\",\n    color: \"bg-emerald-500\",\n    sections: [\n      {\n        title: \"Essential Milestones\",\n        items: [\n          \"✓ Learn language basics + go run/go build\",\n          \"✓ Master slices, maps, structs, pointers\",\n          \"✓ Understand interfaces and idiomatic error handling\",\n          \"✓ Learn go mod, dependency management\",\n          \"✓ Concurrency patterns — goroutines & channels\",\n          \"✓ Build and test web APIs (net/http, Gin/Chi)\",\n          \"✓ Database access (sqlc/GORM/Ent) + migrations\",\n          \"✓ Observability, profiling, and production deployment (Docker + k8s)\",\n          \"✓ Join community (r/golang, Go forums, OSS)\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 14,\n    title: \"Best Resources\",\n    subtitle: \"Official & Practical\",\n    description: \"Curated learning materials\",\n    color: \"bg-violet-500\",\n    sections: [\n      {\n        title: \"Resources\",\n        items: [\n          \"Official Go site & tutorials (go.dev)\",\n          \"Roadmap / career guide: Roadmap.sh Golang page\",\n          \"Articles comparing ORMs and frameworks\",\n          \"Advanced concurrency pattern writeups and guides\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 15,\n    title: \"Typical Interview Topics\",\n    subtitle: \"What Employers Expect\",\n    description: \"Prepare for Go interviews\",\n    color: \"bg-fuchsia-500\",\n    sections: [\n      {\n        title: \"Interview Topics\",\n        items: [\n          \"Concurrency & synchronization (goroutines, channels, data races)\",\n          \"Designing scalable systems (APIs, DB design, caching)\",\n          \"Performance profiling + diagnosing memory/CPU issues\",\n          \"Go internals (escape analysis, scheduler basics) — helpful for senior roles\",\n          \"Practical code exercise: implement a worker-pool, rate limiter, or small REST API\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 16,\n    title: \"Final Tips\",\n    subtitle: \"Practical & Opinionated\",\n    description: \"Wisdom from experienced Go developers\",\n    color: \"bg-rose-500\",\n    sections: [\n      {\n        title: \"Best Practices\",\n        items: [\n          \"Prefer small binaries and clarity over clever one-liners. Go is about readability and predictable performance\",\n          \"Learn plain database/sql (or sqlc) before relying fully on an ORM — it pays back when debugging complex queries\",\n          \"Invest time in testing and observability early — production debugging is where most time is spent\",\n          \"Keep up with official release notes and project layout guidance from the Go team\"\n        ]\n      }\n    ]\n  }\n];"],"names":[],"mappings":";;;AAAO,MAAM,SAAS;IACpB;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;CACD","debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Go/docs.jsx"],"sourcesContent":["// components/Docs.jsx\nimport React from \"react\";\nimport { ExternalLink } from \"lucide-react\";\n\nconst docsList = [\n  {\n    title: \"Go — Official Documentation\",\n    description:\n      \"The official starting point for all Go resources. Includes installation, tutorials, standard library, and the language specification.\",\n    url: \"https://go.dev/doc/\",\n    citation: \"go.dev\",\n  },\n  {\n    title: \"Effective Go — Writing Idiomatic Go Code\",\n    description:\n      \"A must-read guide on writing clear, idiomatic, and efficient Go programs. Covers naming, interfaces, error handling, and best practices.\",\n    url: \"https://go.dev/doc/effective_go\",\n    citation: \"go.dev\",\n  },\n  {\n    title: \"Go Packages (pkg.go.dev)\",\n    description:\n      \"The official reference site for the Go standard library and third-party packages. View documentation for any module directly from its import path.\",\n    url: \"https://pkg.go.dev/\",\n    citation: \"pkg.go.dev\",\n  },\n  {\n    title: \"Go by Example\",\n    description:\n      \"Practical, annotated code snippets that demonstrate Go concepts such as goroutines, channels, structs, maps, and more.\",\n    url: \"https://gobyexample.com/\",\n    citation: \"gobyexample.com\",\n  },\n  {\n    title: \"Tour of Go\",\n    description:\n      \"An interactive browser-based tutorial from the Go team covering syntax, functions, methods, interfaces, and concurrency.\",\n    url: \"https://go.dev/tour/\",\n    citation: \"go.dev\",\n  },\n  {\n    title: \"Go Blog\",\n    description:\n      \"Official Go blog with in-depth articles on new features, best practices, performance improvements, and design decisions.\",\n    url: \"https://go.dev/blog/\",\n    citation: \"go.dev\",\n  },\n  {\n    title: \"Go Language Specification\",\n    description:\n      \"The formal language specification defining syntax, semantics, and the Go type system. Essential for deep understanding.\",\n    url: \"https://go.dev/ref/spec\",\n    citation: \"go.dev\",\n  },\n  {\n    title: \"Go Command Documentation\",\n    description:\n      \"Reference for the `go` tool — build, test, mod, run, vet, install, and more. The CLI every Go developer must master.\",\n    url: \"https://pkg.go.dev/cmd/go\",\n    citation: \"pkg.go.dev\",\n  },\n  {\n    title: \"Go Modules Reference\",\n    description:\n      \"Detailed explanation of dependency management using Go Modules — replacing GOPATH-based workflows. Includes versioning and vendoring guides.\",\n    url: \"https://go.dev/ref/mod\",\n    citation: \"go.dev\",\n  },\n  {\n    title: \"Gin Web Framework — Official Documentation\",\n    description:\n      \"Fast, minimalistic web framework for Go. Includes routing, middleware, JSON rendering, and example APIs.\",\n    url: \"https://gin-gonic.com/docs/\",\n    citation: \"Gin Web Framework\",\n  },\n  {\n    title: \"GORM — Go ORM Library Documentation\",\n    description:\n      \"Comprehensive ORM for Go supporting MySQL, PostgreSQL, SQLite, and SQL Server. Includes migrations, hooks, and associations.\",\n    url: \"https://gorm.io/docs/\",\n    citation: \"gorm.io\",\n  },\n  {\n    title: \"sqlc — Generate Type-Safe Go Code from SQL\",\n    description:\n      \"Official docs for sqlc, a code generator that turns SQL queries into type-safe Go code. Widely used in production for DB access.\",\n    url: \"https://docs.sqlc.dev/\",\n    citation: \"sqlc.dev\",\n  },\n  {\n    title: \"Go Testing Package\",\n    description:\n      \"Official documentation for the Go testing framework. Learn about unit tests, benchmarks, fuzz tests, and table-driven testing.\",\n    url: \"https://pkg.go.dev/testing\",\n    citation: \"pkg.go.dev\",\n  },\n  {\n    title: \"OpenTelemetry Go — Observability\",\n    description:\n      \"Documentation for integrating metrics, traces, and logs in Go applications using OpenTelemetry.\",\n    url: \"https://opentelemetry.io/docs/instrumentation/go/\",\n    citation: \"opentelemetry.io\",\n  },\n  {\n    title: \"Go Modules Proxy & Checksum Database\",\n    description:\n      \"Explains Go’s module proxy and checksum database system for secure, reproducible builds.\",\n    url: \"https://proxy.golang.org/\",\n    citation: \"golang.org\",\n  },\n  {\n    title: \"Docker Official Docs (for Go Deployment)\",\n    description:\n      \"How to containerize Go applications using multi-stage builds, environment variables, and distroless images.\",\n    url: \"https://docs.docker.com/language/golang/\",\n    citation: \"docs.docker.com\",\n  },\n  {\n    title: \"Kubernetes — Go Client (client-go)\",\n    description:\n      \"Documentation for the official Go client used to interact with Kubernetes clusters. Commonly used in operators and controllers.\",\n    url: \"https://pkg.go.dev/k8s.io/client-go\",\n    citation: \"k8s.io/client-go\",\n  },\n  {\n    title: \"Go Concurrency Patterns — Blog & Talks\",\n    description:\n      \"Official Go blog and GopherCon talks exploring concurrency patterns, pipelines, and goroutines best practices.\",\n    url: \"https://go.dev/blog/pipelines\",\n    citation: \"go.dev/blog\",\n  },\n  {\n    title: \"Go DevDocs — Offline API Reference\",\n    description:\n      \"Fast, searchable, and offline-friendly reference for Go standard library and commands.\",\n    url: \"https://devdocs.io/go/\",\n    citation: \"devdocs.io\",\n  },\n];\n\nexport default function Docs() {\n  return (\n    <section className=\"px-6 py-12 bg-gray-50 min-h-screen\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">\n          📘 Documentation & Resources — Go Language & Ecosystem\n        </h1>\n        <p className=\"text-gray-600 mb-10\">\n          Essential official documentation, API references, and trusted guides for learning Go and its ecosystem — from core language features to production deployment.\n        </p>\n\n        {/* Cards */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {docsList.map((doc) => (\n            <a\n              key={doc.title}\n              href={doc.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"group bg-white border border-gray-200 rounded-2xl p-6 shadow-sm hover:shadow-lg transition transform hover:-translate-y-1\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900 group-hover:text-blue-600\">\n                  {doc.title}\n                </h3>\n                <ExternalLink\n                  size={18}\n                  className=\"text-gray-400 group-hover:text-blue-600\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n              <p className=\"mt-3 text-sm text-gray-600\">{doc.description}</p>\n              <p className=\"mt-4 text-xs text-indigo-600 font-medium\">\n                {doc.citation}\n              </p>\n            </a>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;AACA;;;;AAEA,MAAM,WAAW;IACf;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;CACD;AAEc,SAAS;IACtB,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAG,WAAU;8BAAwC;;;;;;8BAGtD,6LAAC;oBAAE,WAAU;8BAAsB;;;;;;8BAKnC,6LAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,oBACb,6LAAC;4BAEC,MAAM,IAAI,GAAG;4BACb,QAAO;4BACP,KAAI;4BACJ,WAAU;;8CAEV,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDACX,IAAI,KAAK;;;;;;sDAEZ,6LAAC,yNAAA,CAAA,eAAY;4CACX,MAAM;4CACN,WAAU;4CACV,eAAY;;;;;;;;;;;;8CAGhB,6LAAC;oCAAE,WAAU;8CAA8B,IAAI,WAAW;;;;;;8CAC1D,6LAAC;oCAAE,WAAU;8CACV,IAAI,QAAQ;;;;;;;2BAlBV,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;AA0B5B;KA1CwB","debugId":null}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Go/projects.jsx"],"sourcesContent":["// components/Projects.jsx\nimport React from \"react\";\n\nconst projects = [\n  // ---------- BEGINNER PROJECTS ----------\n  {\n    id: \"go-cli-todo\",\n    level: \"Go — Beginner\",\n    title: \"CLI Todo App\",\n    description:\n      \"Build a command-line todo manager to add, list, mark done, and delete tasks. Store tasks in a JSON file. Learn basic Go syntax, structs, slices, and file I/O.\",\n    url: \"https://youtu.be/g16Zf0KQEWI?si=0QkdwfqR7UobDye8\"\n  },\n  {\n    id: \"go-url-shortener\",\n    level: \"Go — Beginner\",\n    title: \"URL Shortener Service\",\n    description:\n      \"Create a simple URL shortening service with REST API endpoints and in-memory storage. Learn maps, JSON, and basic routing with net/http.\",\n    url: \"https://youtu.be/3ExDEeSnyvE?si=DsKzh3qSqty9rkwq\"\n  },\n  {\n    id: \"go-number-guess\",\n    level: \"Go — Beginner\",\n    title: \"Number Guessing / Quiz Game\",\n    description:\n      \"CLI-based number guessing or quiz game to practice loops, conditionals, and user input. Learn math/rand and error handling.\",\n    url: \"https://youtu.be/RZuWWQOACUc?si=U4feZFHOV5VM1kg_\"\n  },\n\n  // ---------- INTERMEDIATE PROJECTS ----------\n  {\n    id: \"go-rest-crud-api\",\n    level: \"Go — Intermediate\",\n    title: \"RESTful CRUD API with PostgreSQL\",\n    description:\n      \"Develop a REST API for users/products/tasks using PostgreSQL and sqlc or GORM. Learn database queries, migrations, JSON handling, and context usage.\",\n    url: \"https://youtu.be/R5KiqmsMysM?si=tiY_MnN-ir0w0OF3\"\n  },\n  {\n    id: \"go-concurrent-crawler\",\n    level: \"Go — Intermediate\",\n    title: \"Concurrent Web Crawler\",\n    description:\n      \"Build a crawler that fetches website data concurrently using goroutines and channels. Learn worker pools, rate limiting, and logging.\",\n    url: \"https://youtu.be/B9uR2gLM80E?si=c-XjWSFwyJ3ynhcO\"\n  },\n  {\n    id: \"go-markdown-blog\",\n    level: \"Go — Intermediate\",\n    title: \"Markdown Blog API\",\n    description:\n      \"Serve markdown files as HTML via a REST API. Learn file system operations, template rendering, API design, and caching strategies.\",\n    url: \"https://youtu.be/DmWqRBBenIg?si=CiZ9srOsYJym_XxQ\"\n  },\n\n  // ---------- ADVANCED PROJECTS ----------\n  {\n    id: \"go-grpc-service\",\n    level: \"Go — Advanced\",\n    title: \"gRPC Microservice\",\n    description:\n      \"Implement a gRPC service for managing inventory, tasks, or messages with a separate Go client. Learn Protocol Buffers, streaming, and error handling.\",\n    url: \"https://youtu.be/hHzjDfCbTq4?si=FafDiHn5J41IS8hb\"\n  },\n  {\n    id: \"go-chat-websocket\",\n    level: \"Go — Advanced\",\n    title: \"Chat Server with WebSocket\",\n    description:\n      \"Build a real-time chat server using gorilla/websocket. Learn concurrent connection handling, broadcasting messages, and graceful shutdown.\",\n    url: \"https://youtu.be/JuUAEYLkGbM?si=z82kO0VSnZpLJ3TQ\"\n  },\n  {\n    id: \"go-event-processor\",\n    level: \"Go — Advanced\",\n    title: \"Event-Driven Task Processor\",\n    description:\n      \"Create a system that listens to a message queue (Kafka/NATS) and processes jobs concurrently. Learn worker pools, retries/backoff, and observability.\",\n    url: \"https://youtu.be/9F2NBTtUr-U?si=LjctzrzLqr_cgYA1\"\n  },\n  {\n    id: \"go-microservices-ecommerce\",\n    level: \"Go — Industry Ready\",\n    title: \"Movie streaming app\",\n    description:\n      \"Build a multi-service e-commerce system with REST/gRPC APIs, databases, caching, Docker/K8s deployment, monitoring, and authentication. Learn full-stack Go patterns.\",\n    url: \"https://youtu.be/jBf7of9JTV8?si=SqT1VeMwz0h_DLEx\"\n  }\n];\n\nexport default function Projects() {\n  return (\n    <section className=\"bg-gray-50 py-12 min-h-screen\">\n      <div className=\"max-w-6xl mx-auto px-6\">\n        <header className=\"mb-8 text-center\">\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">\n            🧰 Go Project Roadmap\n          </h2>\n          <p className=\"mt-2 text-gray-600\">\n            From CLI apps to full microservices — real-world Go projects to master the language, concurrency, databases, and production deployment.\n          </p>\n        </header>\n\n        <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n          {projects.map((p) => (\n            <article\n              key={p.id}\n              className=\"group bg-white border border-gray-200 rounded-2xl p-6 shadow-sm hover:shadow-lg hover:-translate-y-1 transition-transform\"\n              aria-labelledby={`${p.id}-title`}\n            >\n              <span className=\"inline-block text-xs font-medium bg-indigo-100 text-indigo-800 px-2 py-1 rounded-full\">\n                {p.level}\n              </span>\n              <h3\n                id={`${p.id}-title`}\n                className=\"mt-4 text-lg font-semibold text-gray-900 group-hover:text-indigo-600\"\n              >\n                {p.title}\n              </h3>\n              <p className=\"mt-2 text-gray-600 text-sm\">{p.description}</p>\n              <a\n                href={p.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mt-4 inline-block text-indigo-600 font-medium hover:underline\"\n              >\n                Learn More ▶\n              </a>\n            </article>\n          ))}\n        </div>\n\n        <footer className=\"mt-10 text-sm text-gray-500 text-center\">\n          Master Go. Build, scale, and deploy production-ready applications 🚀\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;;;AAEA,MAAM,WAAW;IACf,0CAA0C;IAC1C;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IAEA,8CAA8C;IAC9C;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IAEA,0CAA0C;IAC1C;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;CACD;AAEc,SAAS;IACtB,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAO,WAAU;;sCAChB,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;sCAGtD,6LAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;;8BAKpC,6LAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,kBACb,6LAAC;4BAEC,WAAU;4BACV,mBAAiB,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;;8CAEhC,6LAAC;oCAAK,WAAU;8CACb,EAAE,KAAK;;;;;;8CAEV,6LAAC;oCACC,IAAI,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;oCACnB,WAAU;8CAET,EAAE,KAAK;;;;;;8CAEV,6LAAC;oCAAE,WAAU;8CAA8B,EAAE,WAAW;;;;;;8CACxD,6LAAC;oCACC,MAAM,EAAE,GAAG;oCACX,QAAO;oCACP,KAAI;oCACJ,WAAU;8CACX;;;;;;;2BAnBI,EAAE,EAAE;;;;;;;;;;8BA0Bf,6LAAC;oBAAO,WAAU;8BAA0C;;;;;;;;;;;;;;;;;AAMpE;KAhDwB","debugId":null}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Go/faq.jsx"],"sourcesContent":["// components/FAQ.jsx\nimport React from \"react\";\n\nconst faqs = [\n  {\n    question: \"What is Go and why should I learn it?\",\n    answer:\n      \"Go, also known as Golang, is an open-source programming language designed for simplicity, concurrency, and performance. It’s widely used for backend services, cloud infrastructure, and distributed systems.\"\n  },\n  {\n    question: \"How do I install Go and set up my workspace?\",\n    answer:\n      \"Download Go from the official site (https://go.dev/dl/). Set up the PATH environment variable, and use modules (`go mod init`) for dependency management. The GOPATH workspace is mostly replaced by modules.\"\n  },\n  {\n    question: \"What are goroutines and channels?\",\n    answer:\n      \"Goroutines are lightweight threads managed by the Go runtime for concurrent execution. Channels are used to safely communicate between goroutines and synchronize execution.\"\n  },\n  {\n    question: \"How is error handling done in Go?\",\n    answer:\n      \"Go uses explicit error handling. Functions often return an `error` value that must be checked. There are no exceptions like in Java or Python, which encourages clear and predictable error handling.\"\n  },\n  {\n    question: \"What is the difference between slices and arrays?\",\n    answer:\n      \"Arrays have a fixed size defined at compile time, while slices are dynamic, flexible views over arrays. Slices provide length, capacity, and allow easy append operations.\"\n  },\n  {\n    question: \"What is an interface in Go?\",\n    answer:\n      \"An interface defines a set of method signatures. Any type that implements those methods satisfies the interface implicitly. Interfaces enable polymorphism without inheritance.\"\n  },\n  {\n    question: \"How do I test Go code?\",\n    answer:\n      \"Go provides the `testing` package. Create `_test.go` files with functions starting with `Test` for unit tests. You can also write benchmarks and fuzz tests using `testing.B` and fuzzing support.\"\n  },\n  {\n    question: \"How do Go modules work?\",\n    answer:\n      \"Modules (`go.mod`) are the official way to manage dependencies. They specify project requirements and versions. Use `go get` to fetch dependencies and `go mod tidy` to clean unused ones.\"\n  },\n  {\n    question: \"When should I use gRPC vs REST in Go?\",\n    answer:\n      \"Use REST for simplicity and browser-based clients; use gRPC for high-performance, strongly-typed communication between microservices, streaming data, or low-latency requirements.\"\n  },\n  {\n    question: \"How do I deploy Go applications to production?\",\n    answer:\n      \"Compile your Go app into a static binary. Use Docker for containerization, deploy to Kubernetes or cloud platforms, set up CI/CD pipelines, monitoring, logging, and observability with Prometheus/OpenTelemetry.\"\n  }\n];\n\nexport default function FAQ() {\n  return (\n    <section className=\"px-6 py-12 bg-gray-50 min-h-screen\">\n      <div className=\"max-w-4xl mx-auto\">\n        <header className=\"mb-10 text-center\">\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">\n            ❓ Go FAQs — Frequently Asked Questions\n          </h2>\n          <p className=\"mt-2 text-gray-600\">\n            Answers to common questions that every Go learner should know.\n          </p>\n        </header>\n\n        <div className=\"space-y-6\">\n          {faqs.map((faq, index) => (\n            <div\n              key={index}\n              className=\"bg-white border border-gray-200 rounded-2xl p-6 shadow-sm\"\n            >\n              <h3 className=\"text-lg font-semibold text-gray-900\">{faq.question}</h3>\n              <p className=\"mt-2 text-gray-600 text-sm\">{faq.answer}</p>\n            </div>\n          ))}\n        </div>\n\n        <footer className=\"mt-10 text-sm text-gray-500 text-center\">\n          Master Go by understanding concepts, practicing projects, and reading official documentation 🚀\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACrB;;;AAEA,MAAM,OAAO;IACX;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;CACD;AAEc,SAAS;IACtB,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAO,WAAU;;sCAChB,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;sCAGtD,6LAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;;8BAKpC,6LAAC;oBAAI,WAAU;8BACZ,KAAK,GAAG,CAAC,CAAC,KAAK,sBACd,6LAAC;4BAEC,WAAU;;8CAEV,6LAAC;oCAAG,WAAU;8CAAuC,IAAI,QAAQ;;;;;;8CACjE,6LAAC;oCAAE,WAAU;8CAA8B,IAAI,MAAM;;;;;;;2BAJhD;;;;;;;;;;8BASX,6LAAC;oBAAO,WAAU;8BAA0C;;;;;;;;;;;;;;;;;AAMpE;KA/BwB","debugId":null}},
    {"offset": {"line": 1041, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Go/downloadPdf.jsx"],"sourcesContent":["import React from 'react';\nimport { Document, Page, Text, View, StyleSheet, PDFDownloadLink, pdf } from '@react-pdf/renderer';\nimport { saveAs } from 'file-saver';\n\n// Define styles for the PDF\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#f8fafc',\n    padding: 30,\n    fontFamily: 'Helvetica',\n  },\n  header: {\n    marginBottom: 30,\n    textAlign: 'center',\n    paddingBottom: 20,\n    borderBottomWidth: 2,\n    borderBottomColor: '#3b82f6',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6b7280',\n    fontWeight: 'normal',\n  },\n  phaseContainer: {\n    marginBottom: 25,\n    backgroundColor: '#ffffff',\n    borderRadius: 8,\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#e5e7eb',\n  },\n  phaseHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  phaseNumber: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: '#3b82f6',\n    color: '#ffffff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    lineHeight: 40,\n    marginRight: 15,\n  },\n  phaseTitleContainer: {\n    flex: 1,\n  },\n  phaseTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 2,\n  },\n  phaseSubtitle: {\n    fontSize: 12,\n    color: '#6b7280',\n    marginBottom: 2,\n  },\n  phaseDescription: {\n    fontSize: 14,\n    color: '#374151',\n    fontWeight: 'normal',\n  },\n  sectionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 15,\n  },\n  section: {\n    flex: '1 1 45%',\n    backgroundColor: '#f8fafc',\n    borderRadius: 6,\n    padding: 15,\n    borderLeftWidth: 4,\n    borderLeftColor: '#3b82f6',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#3b82f6',\n    marginBottom: 10,\n  },\n  itemsList: {\n    gap: 6,\n  },\n  item: {\n    fontSize: 11,\n    color: '#374151',\n    lineHeight: 1.4,\n    paddingLeft: 12,\n    marginBottom: 4,\n  },\n  itemNumber: {\n    fontWeight: 'bold',\n    color: '#1f2937',\n  },\n  phaseConnector: {\n    alignSelf: 'center',\n    marginVertical: 15,\n    paddingVertical: 8,\n    paddingHorizontal: 20,\n    backgroundColor: '#f3f4f6',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n  },\n  connectorText: {\n    fontSize: 12,\n    color: '#6b7280',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  footer: {\n    marginTop: 30,\n    padding: 20,\n    backgroundColor: '#ecfdf5',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#10b981',\n    textAlign: 'center',\n  },\n  footerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#065f46',\n    marginBottom: 8,\n  },\n  footerText: {\n    fontSize: 14,\n    color: '#047857',\n    lineHeight: 1.5,\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 10,\n    bottom: 20,\n    right: 30,\n    color: '#6b7280',\n  },\n  watermark: {\n    position: 'absolute',\n    top: 50,\n    right: 30,\n    fontSize: 8,\n    color: '#d1d5db',\n    opacity: 0.5,\n  }\n});\n\n// PDF Document Component\nconst RoadmapPDFDocument = ({ phases }) => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {/* Header */}\n      <View style={styles.header}>\n        <Text style={styles.title}>GO lang Roadmap</Text>\n        <Text style={styles.subtitle}>Your Complete Journey from Beginner to Professional</Text>\n      </View>\n\n\n\n      {/* Phases */}\n      {phases.map((phase, index) => (\n        <View key={phase.id} wrap={false}>\n          <View style={styles.phaseContainer}>\n            {/* Phase Header */}\n            <View style={styles.phaseHeader}>\n              <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                {phase.id}\n              </Text>\n              <View style={styles.phaseTitleContainer}>\n                <Text style={styles.phaseTitle}>{phase.title}</Text>\n                <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                <Text style={styles.phaseDescription}>{phase.description}</Text>\n              </View>\n            </View>\n\n            {/* Sections */}\n            <View style={styles.sectionsContainer}>\n              {phase.sections.map((section, sectionIndex) => (\n                <View key={sectionIndex} style={styles.section}>\n                  <Text style={styles.sectionTitle}>{section.title}</Text>\n                  <View style={styles.itemsList}>\n                    {section.items.map((item, itemIndex) => (\n                      <Text key={itemIndex} style={styles.item}>\n                        <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                      </Text>\n                    ))}\n                  </View>\n                </View>\n              ))}\n            </View>\n          </View>\n\n          {/* Phase Connector */}\n          {index < phases.length - 1 && (\n            <View style={styles.phaseConnector}>\n              <Text style={styles.connectorText}>\n                ↓ Next: Phase {phase.id + 1}\n              </Text>\n            </View>\n          )}\n        </View>\n      ))}\n\n\n      {/* Page Number */}\n      <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n        `${pageNumber} / ${totalPages}`\n      )} fixed />\n    </Page>\n  </Document>\n);\n\n// Helper function to convert Tailwind colors to hex\nconst getPhaseColor = (tailwindColor) => {\n  const colorMap = {\n    'bg-blue-500': '#3b82f6',\n    'bg-purple-500': '#8b5cf6',\n    'bg-green-500': '#10b981',\n    'bg-orange-500': '#f59e0b',\n    'bg-red-500': '#ef4444',\n  };\n  return colorMap[tailwindColor] || '#3b82f6';\n};\n\n// Main download function\nexport const downloadRoadmapPDF = async (phases) => {\n  try {\n    // Create the PDF blob\n    const blob = await pdf(<RoadmapPDFDocument phases={phases} />).toBlob();\n\n    // Generate filename with current date\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `Go Lang-roadmap-${currentDate}.pdf`;\n\n    // Save the file\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating PDF:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// React Component for PDF Download Link (alternative approach)\nexport const PDFDownloadButton = ({ phases, className = \"\", children = \"Download PDF\" }) => (\n  <PDFDownloadLink\n    document={<RoadmapPDFDocument phases={phases} />}\n    fileName={`Go lang-roadmap-${new Date().toISOString().split('T')[0]}.pdf`}\n    className={className}\n  >\n    {({ blob, url, loading, error }) => {\n      if (loading) return 'Generating PDF...';\n      if (error) return 'Error generating PDF';\n      return children;\n    }}\n  </PDFDownloadLink>\n  );\n\n// Advanced PDF generation with custom options\nexport const downloadAdvancedRoadmapPDF = async (phases, options = {}) => {\n  const {\n    includeWatermark = true,\n    customTitle = \"Go Lang Roadmap\",\n    customSubtitle = \"Your Complete Journey from Beginner to Professional\",\n    pageSize = \"A4\",\n    orientation = \"portrait\"\n  } = options;\n\n  try {\n    const AdvancedPDFDocument = () => (\n      <Document>\n        <Page size={pageSize} orientation={orientation} style={styles.page}>\n          {/* Custom Header */}\n          <View style={styles.header}>\n            <Text style={styles.title}>{customTitle}</Text>\n            <Text style={styles.subtitle}>{customSubtitle}</Text>\n          </View>\n\n\n\n          {/* Content remains the same */}\n          {phases.map((phase, index) => (\n            <View key={phase.id} wrap={false}>\n              <View style={styles.phaseContainer}>\n                <View style={styles.phaseHeader}>\n                  <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                    {phase.id}\n                  </Text>\n                  <View style={styles.phaseTitleContainer}>\n                    <Text style={styles.phaseTitle}>{phase.title}</Text>\n                    <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                    <Text style={styles.phaseDescription}>{phase.description}</Text>\n                  </View>\n                </View>\n\n                <View style={styles.sectionsContainer}>\n                  {phase.sections.map((section, sectionIndex) => (\n                    <View key={sectionIndex} style={styles.section}>\n                      <Text style={styles.sectionTitle}>{section.title}</Text>\n                      <View style={styles.itemsList}>\n                        {section.items.map((item, itemIndex) => (\n                          <Text key={itemIndex} style={styles.item}>\n                            <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                          </Text>\n                        ))}\n                      </View>\n                    </View>\n                  ))}\n                </View>\n              </View>\n\n              {index < phases.length - 1 && (\n                <View style={styles.phaseConnector}>\n                  <Text style={styles.connectorText}>\n                    ↓ Next: Phase {phase.id + 1}\n                  </Text>\n                </View>\n              )}\n            </View>\n          ))}\n\n          <View style={styles.footer}>\n            <Text style={styles.footerTitle}>🎉 Congratulations!</Text>\n            <Text style={styles.footerText}>\n              You've completed Go Lang Roadmap and are now ready to take on professional  challenges.\n            </Text>\n          </View>\n\n          <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n            `${pageNumber} / ${totalPages}`\n          )} fixed />\n        </Page>\n      </Document>\n    );\n\n    const blob = await pdf(<AdvancedPDFDocument />).toBlob();\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `${customTitle.toLowerCase().replace(/\\s+/g, '-')}-${currentDate}.pdf`;\n\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating advanced PDF:', error);\n    return { success: false, error: error.message };\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1722, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Go/page.jsx"],"sourcesContent":["\"use client\"\nimport React, { useState } from 'react';\nimport { ChevronDown, Download, FileText, FolderOpen, Map, Menu, X, Loader2, HelpCircle } from 'lucide-react';\nimport { phases } from './roadmapData';\nimport Docs from './docs';\nimport Projects from './projects';\nimport FAQ from './faq';\nimport { downloadRoadmapPDF } from './downloadPdf';\n\nconst GenerativeAIRoadmap = () => {\n  const [activeTab, setActiveTab] = useState('roadmap');\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  // Handle PDF download with loading state\n  const handlePDFDownload = async () => {\n    setIsDownloading(true);\n    try {\n      const result = await downloadRoadmapPDF(phases);\n      if (result.success) {\n        console.log(`PDF downloaded successfully: ${result.filename}`);\n      } else {\n        console.error('PDF download failed:', result.error);\n      }\n    } catch (error) {\n      console.error('PDF download error:', error);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'documentation':\n        return <Docs />;\n      case 'projects':\n        return <Projects />;\n      case 'faq':\n        return <FAQ />;\n      default:\n        return (\n          <div className=\"relative\">\n            {/* Timeline */}\n            <div className=\"flex flex-col space-y-8 md:space-y-12\">\n              {phases.map((phase, index) => (\n                <div key={phase.id} className=\"relative\">\n                  {/* Connection Line */}\n                  {index < phases.length - 1 && (\n                    <div className=\"absolute left-1/2 transform -translate-x-1/2 top-full h-8 md:h-12 w-0.5 md:w-1 bg-gray-300 z-10\"></div>\n                  )}\n\n                  {/* Phase Card */}\n                  <div className=\"flex flex-col items-center\">\n                    {/* Phase Header */}\n                    <div className=\"text-center mb-4 md:mb-6 px-4\">\n                      <div className={`inline-block ${phase.color} text-white px-4 md:px-6 py-2 md:py-3 rounded-lg font-semibold text-base md:text-lg mb-2`}>\n                        Phase {phase.id}: {phase.title}\n                      </div>\n                      <p className=\"text-gray-600 text-xs md:text-sm\">{phase.subtitle}</p>\n                      <p className=\"text-gray-800 font-medium mt-1 text-sm md:text-base\">{phase.description}</p>\n                    </div>\n\n                    {/* Phase Content */}\n                    <div className=\"w-full max-w-5xl px-4\">\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 md:gap-6\">\n                        {phase.sections.map((section, sectionIndex) => (\n                          <div\n                            key={sectionIndex}\n                            className=\"bg-white rounded-lg border-2 border-blue-200 p-4 md:p-6 shadow-sm hover:shadow-md transition-shadow\"\n                          >\n                            <h3 className=\"text-blue-600 font-semibold text-base md:text-lg mb-3 md:mb-4\">\n                              {section.title}\n                            </h3>\n                            <ol className=\"space-y-2\">\n                              {section.items.map((item, itemIndex) => (\n                                <li key={itemIndex} className=\"text-gray-700 text-xs md:text-sm leading-relaxed\">\n                                  <span className=\"font-medium text-gray-900\">{itemIndex + 1}.</span> {item}\n                                </li>\n                              ))}\n                            </ol>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Step Indicators */}\n                    {index < phases.length - 1 && (\n                      <div className=\"mt-6 md:mt-8 flex items-center space-x-2 md:space-x-4\">\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform -rotate-12\">\n                          Phase {phase.id}\n                        </div>\n                        <ChevronDown className=\"text-gray-400\" size={20} />\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform rotate-12\">\n                          Phase {phase.id + 1}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Final Message */}\n            <div className=\"text-center mt-8 md:mt-12 mx-4 p-6 md:p-8 bg-gradient-to-r from-green-50 to-purple-50 rounded-lg border border-green-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                🎉 Congratulations! You're a Go Lang Developer\n              </h2>\n              <p className=\"text-gray-700 text-base md:text-lg\">\n                You've mastered the complete Go Lang Roadmap and are now ready to build scalable, high-performance applications.\n              </p>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 md:px-6 py-4 md:py-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6 md:mb-8\">\n          <div className=\"flex items-center space-x-2 md:space-x-4\">\n            <h1 className=\"text-xl md:text-3xl font-bold text-gray-900\">\n              Go lang <span className=\"text-blue-600\">Mastery Roadmap 2025</span>\n            </h1>\n          </div>\n\n          {/* Desktop Download Button */}\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"hidden md:flex bg-red-500 hover:bg-red-600 disabled:bg-red-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg items-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n\n          {/* Mobile Menu Button */}\n          <button \n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            className=\"md:hidden bg-blue-500 hover:bg-blue-600 text-white p-2 rounded-lg transition-colors\"\n          >\n            {mobileMenuOpen ? <X size={20} /> : <Menu size={20} />}\n          </button>\n        </div>\n\n        {/* Mobile Download Button */}\n        <div className=\"md:hidden mb-4\">\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"w-full bg-red-500 hover:bg-red-600 disabled:bg-red-400 disabled:cursor-not-allowed text-white px-4 py-3 rounded-lg flex items-center justify-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className={`${mobileMenuOpen ? 'block' : 'hidden'} md:block mb-6 md:mb-8`}>\n          <div className=\"flex flex-col md:flex-row space-y-1 md:space-y-0 md:space-x-1 bg-white p-1 rounded-lg shadow-sm w-full md:w-fit\">\n            <button\n              onClick={() => {\n                setActiveTab('roadmap');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'roadmap'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <Map size={18} className=\"mr-2\" />\n              Roadmap\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('documentation');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'documentation'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FileText size={18} className=\"mr-2\" />\n              Documentation\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('projects');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'projects'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FolderOpen size={18} className=\"mr-2\" />\n              Projects\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('faq');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'faq'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <HelpCircle size={18} className=\"mr-2\" />\n              FAQ\n            </button>\n          </div>\n        </div>\n\n        {/* Content */}\n        {renderContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default GenerativeAIRoadmap;"],"names":[],"mappings":"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","debugId":null}}]
}