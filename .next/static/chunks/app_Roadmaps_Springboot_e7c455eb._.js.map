{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Springboot/docs.jsx"],"sourcesContent":["import React from \"react\";\n\nconst docs = [\n  {\n    id: \"spring-boot-ref\",\n    level: \"Official\",\n    title: \"Spring Boot Reference Documentation\",\n    description:\n      \"Comprehensive guide covering Spring Boot setup, configuration, and advanced features.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.spring.io/spring-boot/docs/current/reference/html/\"\n  },\n  {\n    id: \"spring-boot-project\",\n    level: \"Official\",\n    title: \"Spring Boot Project Page\",\n    description:\n      \"Official Spring Boot project page with features, guides, and support information.\",\n    cta: \"Open Docs\",\n    url: \"https://spring.io/projects/spring-boot\"\n  },\n  {\n    id: \"spring-framework\",\n    level: \"Official\",\n    title: \"Spring Framework Documentation\",\n    description:\n      \"Detailed documentation on core Spring Framework concepts like IoC, AOP, and data access.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.spring.io/spring-framework/reference/index.html\"\n  },\n  {\n    id: \"spring-data\",\n    level: \"Official\",\n    title: \"Spring Data Documentation\",\n    description:\n      \"Documentation on Spring Data JPA, MongoDB, and other data access technologies.\",\n    cta: \"Open Docs\",\n    url: \"https://spring.io/projects/spring-data\"\n  },\n  {\n    id: \"spring-security\",\n    level: \"Official\",\n    title: \"Spring Security\",\n    description:\n      \"Comprehensive guide on securing applications with Spring Security.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.spring.io/spring-security/reference/index.html\"\n  },\n  {\n    id: \"spring-cloud\",\n    level: \"Official\",\n    title: \"Spring Cloud Documentation\",\n    description:\n      \"Documentation for building cloud-native applications with Spring Cloud.\",\n    cta: \"Open Docs\",\n    url: \"https://spring.io/projects/spring-cloud\"\n  },\n  {\n    id: \"spring-webflux\",\n    level: \"Official\",\n    title: \"Spring WebFlux\",\n    description:\n      \"Guide on building reactive web applications with Spring WebFlux.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.spring.io/spring-framework/reference/web-reactive.html\"\n  },\n  {\n    id: \"spring-boot-testing\",\n    level: \"Official\",\n    title: \"Spring Boot Testing\",\n    description:\n      \"Official documentation on testing Spring Boot applications.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.testing\"\n  },\n  {\n    id: \"spring-boot-devtools\",\n    level: \"Official\",\n    title: \"Spring Boot DevTools\",\n    description:\n      \"Documentation on development-time tools to enhance the developer experience.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.devtools\"\n  },\n  {\n    id: \"spring-boot-actuator\",\n    level: \"Official\",\n    title: \"Spring Boot Actuator\",\n    description:\n      \"Provides production-ready features like health checks, metrics, and monitoring endpoints.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html\"\n  },\n  {\n    id: \"spring-boot-deployment\",\n    level: \"Official\",\n    title: \"Spring Boot Deployment\",\n    description:\n      \"Guidelines on deploying Spring Boot applications in various environments.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.deploying\"\n  },\n  {\n    id: \"spring-guides\",\n    level: \"Official\",\n    title: \"Spring Guides\",\n    description:\n      \"Step-by-step tutorials on various Spring projects and features.\",\n    cta: \"Open Docs\",\n    url: \"https://spring.io/guides\"\n  },\n  {\n    id: \"spring-initializr\",\n    level: \"Official\",\n    title: \"Spring Initializr\",\n    description: \"Web-based tool to generate Spring Boot projects quickly.\",\n    cta: \"Open Docs\",\n    url: \"https://start.spring.io\"\n  },\n  {\n    id: \"spring-academy\",\n    level: \"Official\",\n    title: \"Spring Academy\",\n    description:\n      \"Courses and certifications to deepen your Spring knowledge.\",\n    cta: \"Open Docs\",\n    url: \"https://academy.spring.io\"\n  }\n];\n\nexport default function DocsCards() {\n  return (\n    <section className=\"min-h-screen bg-slate-50 py-12\">\n      <div className=\"max-w-6xl mx-auto px-6\">\n        <header className=\"mb-8\">\n          <h2 className=\"text-3xl sm:text-4xl font-extrabold text-slate-900\">\n            üèó Essential Spring Boot Documentation\n          </h2>\n          <p className=\"mt-2 text-slate-600 max-w-2xl\">\n            Explore official Spring Boot resources that every learner must know.\n            These cover Spring Boot core, security, data access, cloud, reactive programming,\n            deployment, and development tools.\n          </p>\n        </header>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {docs.map((d) => (\n            <article\n              key={d.id}\n              className=\"group bg-white border border-slate-200 rounded-2xl p-6 shadow-sm hover:shadow-lg transition-transform transform hover:-translate-y-1\"\n              aria-labelledby={`${d.id}-title`}\n            >\n              <div className=\"flex items-start justify-between\">\n                <span className=\"inline-block text-xs font-medium bg-blue-50 text-indigo-700 px-2 py-1 rounded-full\">\n                  {d.level}\n                </span>\n                <a\n                  href={d.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-xs text-slate-400 hover:text-blue-600 transition\"\n                  aria-label={`Open documentation for ${d.title}`}\n                >\n                  üîó Docs\n                </a>\n              </div>\n\n              <h3\n                id={`${d.id}-title`}\n                className=\"mt-4 text-lg font-semibold text-slate-900 group-hover:text-blue-600\"\n              >\n                {d.title}\n              </h3>\n\n              <p className=\"mt-3 text-sm text-slate-600\">{d.description}</p>\n\n              <div className=\"mt-5 flex items-center justify-between\">\n                <a\n                  href={d.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center gap-2 rounded-md bg-blue-600 text-white px-4 py-2 text-sm font-medium hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-300\"\n                >\n                  {d.cta}\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-4 w-4\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    aria-hidden=\"true\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      d=\"M14 5l7 7m0 0l-7 7m7-7H3\"\n                    />\n                  </svg>\n                </a>\n                <span className=\"text-xs text-slate-400\">Reference</span>\n              </div>\n            </article>\n          ))}\n        </div>\n\n        <footer className=\"mt-10 text-sm text-slate-500\">\n          Tip: Bookmark these resources and revisit them often. Mastering Spring Boot means keeping up with\n          evolving features, tools, and best practices.\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,OAAO;IACX;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aAAa;QACb,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;CACD;AAEc,SAAS;IACtB,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAO,WAAU;;sCAChB,6LAAC;4BAAG,WAAU;sCAAqD;;;;;;sCAGnE,6LAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;;8BAO/C,6LAAC;oBAAI,WAAU;8BACZ,KAAK,GAAG,CAAC,CAAC,kBACT,6LAAC;4BAEC,WAAU;4BACV,mBAAiB,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;;8CAEhC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDACb,EAAE,KAAK;;;;;;sDAEV,6LAAC;4CACC,MAAM,EAAE,GAAG;4CACX,QAAO;4CACP,KAAI;4CACJ,WAAU;4CACV,cAAY,CAAC,uBAAuB,EAAE,EAAE,KAAK,EAAE;sDAChD;;;;;;;;;;;;8CAKH,6LAAC;oCACC,IAAI,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;oCACnB,WAAU;8CAET,EAAE,KAAK;;;;;;8CAGV,6LAAC;oCAAE,WAAU;8CAA+B,EAAE,WAAW;;;;;;8CAEzD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,MAAM,EAAE,GAAG;4CACX,QAAO;4CACP,KAAI;4CACJ,WAAU;;gDAET,EAAE,GAAG;8DACN,6LAAC;oDACC,OAAM;oDACN,WAAU;oDACV,MAAK;oDACL,SAAQ;oDACR,QAAO;oDACP,aAAa;oDACb,eAAY;8DAEZ,cAAA,6LAAC;wDACC,eAAc;wDACd,gBAAe;wDACf,GAAE;;;;;;;;;;;;;;;;;sDAIR,6LAAC;4CAAK,WAAU;sDAAyB;;;;;;;;;;;;;2BApDtC,EAAE,EAAE;;;;;;;;;;8BA0Df,6LAAC;oBAAO,WAAU;8BAA+B;;;;;;;;;;;;;;;;;AAOzD;KAnFwB","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Springboot/projects.jsx"],"sourcesContent":["import React from \"react\";\n\nconst projects = [\n  // Phase 1: Beginner\n  {\n    id: \"library-management\",\n    phase: \"üå± Phase 1 ‚Äî Beginner\",\n    title: \"Library Management System\",\n    description: \"CRUD for books and authors, track borrowed books.\",\n    skills: [\n      \"Spring Boot basics\",\n      \"REST controllers\",\n      \"H2 database\",\n      \"JPA entities\"\n    ],\n    techStack: [\"Spring Boot\", \"Spring Data JPA\", \"H2\", \"Thymeleaf\"]\n  },\n  {\n    id: \"todo-list\",\n    phase: \"üå± Phase 1 ‚Äî Beginner\",\n    title: \"Todo List Application\",\n    description: \"Manage tasks with basic authentication and web interface.\",\n    skills: [\n      \"REST API\",\n      \"Basic Spring Security\",\n      \"Template rendering with Thymeleaf\"\n    ],\n    techStack: [\"Spring Boot\", \"Spring Security\", \"Thymeleaf\", \"H2/MySQL\"]\n  },\n  {\n    id: \"simple-blog-api\",\n    phase: \"üå± Phase 1 ‚Äî Beginner\",\n    title: \"Simple Blog API\",\n    description:\n      \"Create posts, read posts, update, delete, and list all posts.\",\n    skills: [\"REST API design\", \"Request validation\", \"DTOs\", \"Exception handling\"],\n    techStack: [\"Spring Boot\", \"Spring Data JPA\", \"H2/PostgreSQL\"]\n  },\n\n  // Phase 2: Intermediate\n  {\n    id: \"ecommerce-backend\",\n    phase: \"üõ† Phase 2 ‚Äî Intermediate\",\n    title: \"E-commerce Backend API\",\n    description: \"Users, products, orders, and JWT-based authentication.\",\n    skills: [\n      \"Spring Security JWT\",\n      \"Relational database modeling\",\n      \"DTOs\",\n      \"Service layer\"\n    ],\n    techStack: [\"Spring Boot\", \"Spring Security\", \"JWT\", \"PostgreSQL/MySQL\", \"Spring Data JPA\"]\n  },\n  {\n    id: \"blog-comments-tags\",\n    phase: \"üõ† Phase 2 ‚Äî Intermediate\",\n    title: \"Blog Application with Comments & Tags\",\n    description:\n      \"Multi-user blog with CRUD for posts and comments, tag filtering.\",\n    skills: [\n      \"Relationships in JPA\",\n      \"Pagination & sorting\",\n      \"REST API versioning\"\n    ],\n    techStack: [\"Spring Boot\", \"Spring Data JPA\", \"Redis cache\", \"PostgreSQL\"]\n  },\n  {\n    id: \"employee-management\",\n    phase: \"üõ† Phase 2 ‚Äî Intermediate\",\n    title: \"Employee Management System\",\n    description: \"CRUD for employees, departments, role-based access.\",\n    skills: [\"Spring Security\", \"Exception handling\", \"Validation\", \"Logging\"],\n    techStack: [\"Spring Boot\", \"Spring Data JPA\", \"MySQL\", \"Spring Security\"]\n  },\n\n  // Phase 3: Advanced\n  {\n    id: \"ecommerce-microservices\",\n    phase: \"üöÄ Phase 3 ‚Äî Advanced\",\n    title: \"E-commerce Microservices\",\n    description:\n      \"Split into user, product, order, and payment services.\",\n    skills: [\n      \"Spring Cloud\",\n      \"Eureka service discovery\",\n      \"API Gateway\",\n      \"Messaging with RabbitMQ/Kafka\",\n      \"Distributed transactions\"\n    ],\n    techStack: [\"Spring Boot\", \"Spring Cloud\", \"RabbitMQ/Kafka\", \"Redis\", \"PostgreSQL\"]\n  },\n  {\n    id: \"real-time-chat\",\n    phase: \"üöÄ Phase 3 ‚Äî Advanced\",\n    title: \"Real-Time Chat Application\",\n    description:\n      \"WebSocket-based chat with JWT authentication and persistent chat history.\",\n    skills: [\"WebSocket\", \"JWT\", \"MongoDB\", \"Reactive programming basics\"],\n    techStack: [\"Spring Boot\", \"WebSocket\", \"JWT\", \"MongoDB\", \"Redis\", \"React (optional)\"]\n  },\n  {\n    id: \"banking-transaction\",\n    phase: \"üöÄ Phase 3 ‚Äî Advanced\",\n    title: \"Banking Transaction API\",\n    description:\n      \"High-security system with ACID transactions, audit logs, and role-based access.\",\n    skills: [\"Transaction management\", \"Security\", \"Logging\", \"Exception handling\"],\n    techStack: [\"Spring Boot\", \"Spring Security\", \"PostgreSQL\", \"Kafka\", \"Docker\"]\n  }\n];\n\nexport default function ProjectCards() {\n  return (\n    <section className=\"min-h-screen bg-slate-50 py-12\">\n      <div className=\"max-w-6xl mx-auto px-6\">\n        <header className=\"mb-8\">\n          <h2 className=\"text-3xl sm:text-4xl font-extrabold text-slate-900\">\n            üíª Spring Boot Project Roadmap\n          </h2>\n          <p className=\"mt-2 text-slate-600 max-w-2xl\">\n            Build these projects progressively to become an industry-ready Spring Boot developer. Each phase covers key skills and technologies.\n          </p>\n        </header>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {projects.map((p) => (\n            <article\n              key={p.id}\n              className=\"group bg-white border border-slate-200 rounded-2xl p-6 shadow-sm hover:shadow-lg transition-transform transform hover:-translate-y-1\"\n            >\n              <span className=\"inline-block text-xs font-medium bg-green-50 text-green-700 px-2 py-1 rounded-full\">\n                {p.phase}\n              </span>\n\n              <h3 className=\"mt-4 text-lg font-semibold text-slate-900 group-hover:text-blue-600\">\n                {p.title}\n              </h3>\n\n              <p className=\"mt-2 text-sm text-slate-600\">{p.description}</p>\n\n              <div className=\"mt-3\">\n                <strong className=\"text-sm font-medium text-slate-800\">Skills:</strong>\n                <ul className=\"text-sm text-slate-600 list-disc list-inside\">\n                  {p.skills.map((s, i) => (\n                    <li key={i}>{s}</li>\n                  ))}\n                </ul>\n              </div>\n\n              <div className=\"mt-3\">\n                <strong className=\"text-sm font-medium text-slate-800\">Tech Stack:</strong>\n                <ul className=\"text-sm text-slate-600 list-disc list-inside\">\n                  {p.techStack.map((t, i) => (\n                    <li key={i}>{t}</li>\n                  ))}\n                </ul>\n              </div>\n            </article>\n          ))}\n        </div>\n\n        <footer className=\"mt-10 text-sm text-slate-500\">\n          Tip: Start with Phase 1 projects and gradually move to Phase 3. Each project teaches essential Spring Boot skills.\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,WAAW;IACf,oBAAoB;IACpB;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aAAa;QACb,QAAQ;YACN;YACA;YACA;YACA;SACD;QACD,WAAW;YAAC;YAAe;YAAmB;YAAM;SAAY;IAClE;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aAAa;QACb,QAAQ;YACN;YACA;YACA;SACD;QACD,WAAW;YAAC;YAAe;YAAmB;YAAa;SAAW;IACxE;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,QAAQ;YAAC;YAAmB;YAAsB;YAAQ;SAAqB;QAC/E,WAAW;YAAC;YAAe;YAAmB;SAAgB;IAChE;IAEA,wBAAwB;IACxB;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aAAa;QACb,QAAQ;YACN;YACA;YACA;YACA;SACD;QACD,WAAW;YAAC;YAAe;YAAmB;YAAO;YAAoB;SAAkB;IAC7F;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,QAAQ;YACN;YACA;YACA;SACD;QACD,WAAW;YAAC;YAAe;YAAmB;YAAe;SAAa;IAC5E;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aAAa;QACb,QAAQ;YAAC;YAAmB;YAAsB;YAAc;SAAU;QAC1E,WAAW;YAAC;YAAe;YAAmB;YAAS;SAAkB;IAC3E;IAEA,oBAAoB;IACpB;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,QAAQ;YACN;YACA;YACA;YACA;YACA;SACD;QACD,WAAW;YAAC;YAAe;YAAgB;YAAkB;YAAS;SAAa;IACrF;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,QAAQ;YAAC;YAAa;YAAO;YAAW;SAA8B;QACtE,WAAW;YAAC;YAAe;YAAa;YAAO;YAAW;YAAS;SAAmB;IACxF;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,QAAQ;YAAC;YAA0B;YAAY;YAAW;SAAqB;QAC/E,WAAW;YAAC;YAAe;YAAmB;YAAc;YAAS;SAAS;IAChF;CACD;AAEc,SAAS;IACtB,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAO,WAAU;;sCAChB,6LAAC;4BAAG,WAAU;sCAAqD;;;;;;sCAGnE,6LAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;;8BAK/C,6LAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,kBACb,6LAAC;4BAEC,WAAU;;8CAEV,6LAAC;oCAAK,WAAU;8CACb,EAAE,KAAK;;;;;;8CAGV,6LAAC;oCAAG,WAAU;8CACX,EAAE,KAAK;;;;;;8CAGV,6LAAC;oCAAE,WAAU;8CAA+B,EAAE,WAAW;;;;;;8CAEzD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAO,WAAU;sDAAqC;;;;;;sDACvD,6LAAC;4CAAG,WAAU;sDACX,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,kBAChB,6LAAC;8DAAY;mDAAJ;;;;;;;;;;;;;;;;8CAKf,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAO,WAAU;sDAAqC;;;;;;sDACvD,6LAAC;4CAAG,WAAU;sDACX,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,kBACnB,6LAAC;8DAAY;mDAAJ;;;;;;;;;;;;;;;;;2BA1BV,EAAE,EAAE;;;;;;;;;;8BAkCf,6LAAC;oBAAO,WAAU;8BAA+B;;;;;;;;;;;;;;;;;AAMzD;KAxDwB","debugId":null}},
    {"offset": {"line": 648, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Springboot/faq.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ChevronDown, ChevronUp } from \"lucide-react\";\n\nconst faqData = [\n  {\n    question: \"What is Spring Boot and why should I learn it?\",\n    answer:\n      \"Spring Boot is a framework that simplifies the development of production-ready Spring applications. Learning it allows you to build scalable REST APIs, microservices, and enterprise applications efficiently.\"\n  },\n  {\n    question: \"Which Java version is recommended for learning Spring Boot?\",\n    answer:\n      \"It is recommended to use Java 17 or higher since Spring Boot 3.x fully supports it and includes modern features like records, sealed classes, and pattern matching.\"\n  },\n  {\n    question: \"Do I need to know the core Spring Framework before Spring Boot?\",\n    answer:\n      \"Basic knowledge of Spring concepts like IoC, Dependency Injection, and annotations is helpful, but Spring Boot abstracts much of the configuration, so you can start with it directly.\"\n  },\n  {\n    question: \"How do I choose the database for my Spring Boot projects?\",\n    answer:\n      \"For beginners, H2 or SQLite are easy to start with. As you progress, PostgreSQL or MySQL is preferred for real-world projects. MongoDB can be used for NoSQL learning.\"\n  },\n  {\n    question: \"What is the difference between Spring Boot and Spring Cloud?\",\n    answer:\n      \"Spring Boot focuses on simplifying the development of individual applications, while Spring Cloud helps you build distributed, cloud-native microservices with features like service discovery, config management, and API gateways.\"\n  },\n  {\n    question: \"How important is Spring Security for beginners?\",\n    answer:\n      \"Basic understanding is essential because authentication and authorization are key in almost all applications. Start with simple JWT or role-based security and gradually explore OAuth2 and advanced configurations.\"\n  },\n  {\n    question: \"Can I build microservices without Spring Cloud?\",\n    answer:\n      \"Yes, you can build microservices using Spring Boot alone, but Spring Cloud simplifies service discovery, centralized configuration, and resiliency patterns like circuit breakers.\"\n  },\n  {\n    question: \"How do I deploy my Spring Boot application to the cloud?\",\n    answer:\n      \"You can deploy Spring Boot apps to cloud platforms like AWS, GCP, or Azure using Docker containers, or directly as JAR/WAR files. Learning Docker and Kubernetes is highly recommended for scalable deployments.\"\n  },\n  {\n    question: \"Which testing frameworks should I use?\",\n    answer:\n      \"JUnit 5 and Mockito are standard for unit and integration testing. Spring Boot provides @SpringBootTest, @WebMvcTest, and test slices to simplify testing of different layers.\"\n  },\n  {\n    question: \"How can I make my Spring Boot application production-ready?\",\n    answer:\n      \"Use Spring Boot Actuator for monitoring, configure externalized properties for different environments, enable caching, handle security properly, and use logging and metrics tools for observability.\"\n  }\n];\n\nexport default function FAQ() {\n  const [openIndex, setOpenIndex] = useState(null);\n\n  const toggle = (index) => {\n    setOpenIndex(openIndex === index ? null : index);\n  };\n\n  return (\n    <section className=\"min-h-screen bg-slate-50 py-12\">\n      <div className=\"max-w-4xl mx-auto px-6\">\n        <header className=\"mb-8\">\n          <h2 className=\"text-3xl sm:text-4xl font-extrabold text-slate-900\">\n            ‚ùì Spring Boot Roadmap FAQ\n          </h2>\n          <p className=\"mt-2 text-slate-600\">\n            Common questions learners have while progressing through the Spring Boot roadmap.\n          </p>\n        </header>\n\n        <div className=\"space-y-4\">\n          {faqData.map((item, index) => (\n            <div\n              key={index}\n              className=\"bg-white border border-slate-200 rounded-2xl shadow-sm\"\n            >\n              <button\n                onClick={() => toggle(index)}\n                className=\"w-full flex justify-between items-center p-4 text-left\"\n              >\n                <span className=\"font-medium text-slate-900\">{item.question}</span>\n                {openIndex === index ? (\n                  <ChevronUp className=\"h-5 w-5 text-slate-500\" />\n                ) : (\n                  <ChevronDown className=\"h-5 w-5 text-slate-500\" />\n                )}\n              </button>\n              {openIndex === index && (\n                <div className=\"px-4 pb-4 text-slate-600\">\n                  {item.answer}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <footer className=\"mt-10 text-sm text-slate-500\">\n          Tip: Keep revisiting these questions as you build projects to strengthen your understanding of Spring Boot.\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;;;AAEA,MAAM,UAAU;IACd;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;CACD;AAEc,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,SAAS,CAAC;QACd,aAAa,cAAc,QAAQ,OAAO;IAC5C;IAEA,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAO,WAAU;;sCAChB,6LAAC;4BAAG,WAAU;sCAAqD;;;;;;sCAGnE,6LAAC;4BAAE,WAAU;sCAAsB;;;;;;;;;;;;8BAKrC,6LAAC;oBAAI,WAAU;8BACZ,QAAQ,GAAG,CAAC,CAAC,MAAM,sBAClB,6LAAC;4BAEC,WAAU;;8CAEV,6LAAC;oCACC,SAAS,IAAM,OAAO;oCACtB,WAAU;;sDAEV,6LAAC;4CAAK,WAAU;sDAA8B,KAAK,QAAQ;;;;;;wCAC1D,cAAc,sBACb,6LAAC,mNAAA,CAAA,YAAS;4CAAC,WAAU;;;;;iEAErB,6LAAC,uNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;;;;;;;gCAG1B,cAAc,uBACb,6LAAC;oCAAI,WAAU;8CACZ,KAAK,MAAM;;;;;;;2BAhBX;;;;;;;;;;8BAuBX,6LAAC;oBAAO,WAAU;8BAA+B;;;;;;;;;;;;;;;;;AAMzD;GAnDwB;KAAA","debugId":null}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Springboot/downloadPdf.jsx"],"sourcesContent":["import React from 'react';\nimport { Document, Page, Text, View, StyleSheet, PDFDownloadLink, pdf } from '@react-pdf/renderer';\nimport { saveAs } from 'file-saver';\n\n// Define styles for the PDF\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#f8fafc',\n    padding: 30,\n    fontFamily: 'Helvetica',\n  },\n  header: {\n    marginBottom: 30,\n    textAlign: 'center',\n    paddingBottom: 20,\n    borderBottomWidth: 2,\n    borderBottomColor: '#3b82f6',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6b7280',\n    fontWeight: 'normal',\n  },\n  phaseContainer: {\n    marginBottom: 25,\n    backgroundColor: '#ffffff',\n    borderRadius: 8,\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#e5e7eb',\n  },\n  phaseHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  phaseNumber: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: '#3b82f6',\n    color: '#ffffff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    lineHeight: 40,\n    marginRight: 15,\n  },\n  phaseTitleContainer: {\n    flex: 1,\n  },\n  phaseTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 2,\n  },\n  phaseSubtitle: {\n    fontSize: 12,\n    color: '#6b7280',\n    marginBottom: 2,\n  },\n  phaseDescription: {\n    fontSize: 14,\n    color: '#374151',\n    fontWeight: 'normal',\n  },\n  sectionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 15,\n  },\n  section: {\n    flex: '1 1 45%',\n    backgroundColor: '#f8fafc',\n    borderRadius: 6,\n    padding: 15,\n    borderLeftWidth: 4,\n    borderLeftColor: '#3b82f6',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#3b82f6',\n    marginBottom: 10,\n  },\n  itemsList: {\n    gap: 6,\n  },\n  item: {\n    fontSize: 11,\n    color: '#374151',\n    lineHeight: 1.4,\n    paddingLeft: 12,\n    marginBottom: 4,\n  },\n  itemNumber: {\n    fontWeight: 'bold',\n    color: '#1f2937',\n  },\n  phaseConnector: {\n    alignSelf: 'center',\n    marginVertical: 15,\n    paddingVertical: 8,\n    paddingHorizontal: 20,\n    backgroundColor: '#f3f4f6',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n  },\n  connectorText: {\n    fontSize: 12,\n    color: '#6b7280',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  footer: {\n    marginTop: 30,\n    padding: 20,\n    backgroundColor: '#ecfdf5',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#10b981',\n    textAlign: 'center',\n  },\n  footerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#065f46',\n    marginBottom: 8,\n  },\n  footerText: {\n    fontSize: 14,\n    color: '#047857',\n    lineHeight: 1.5,\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 10,\n    bottom: 20,\n    right: 30,\n    color: '#6b7280',\n  },\n  watermark: {\n    position: 'absolute',\n    top: 50,\n    right: 30,\n    fontSize: 8,\n    color: '#d1d5db',\n    opacity: 0.5,\n  }\n});\n\n// PDF Document Component\nconst RoadmapPDFDocument = ({ phases }) => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {/* Header */}\n      <View style={styles.header}>\n        <Text style={styles.title}>Springboot Engineer Roadmap</Text>\n        <Text style={styles.subtitle}>Your Complete Journey from Beginner to Professional</Text>\n      </View>\n\n    \n\n      {/* Phases */}\n      {phases.map((phase, index) => (\n        <View key={phase.id} wrap={false}>\n          <View style={styles.phaseContainer}>\n            {/* Phase Header */}\n            <View style={styles.phaseHeader}>\n              <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                {phase.id}\n              </Text>\n              <View style={styles.phaseTitleContainer}>\n                <Text style={styles.phaseTitle}>{phase.title}</Text>\n                <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                <Text style={styles.phaseDescription}>{phase.description}</Text>\n              </View>\n            </View>\n\n            {/* Sections */}\n            <View style={styles.sectionsContainer}>\n              {phase.sections.map((section, sectionIndex) => (\n                <View key={sectionIndex} style={styles.section}>\n                  <Text style={styles.sectionTitle}>{section.title}</Text>\n                  <View style={styles.itemsList}>\n                    {section.items.map((item, itemIndex) => (\n                      <Text key={itemIndex} style={styles.item}>\n                        <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                      </Text>\n                    ))}\n                  </View>\n                </View>\n              ))}\n            </View>\n          </View>\n\n          {/* Phase Connector */}\n          {index < phases.length - 1 && (\n            <View style={styles.phaseConnector}>\n              <Text style={styles.connectorText}>\n                ‚Üì Next: Phase {phase.id + 1}\n              </Text>\n            </View>\n          )}\n        </View>\n      ))}\n\n\n\n      {/* Page Number */}\n      <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n        `${pageNumber} / ${totalPages}`\n      )} fixed />\n    </Page>\n  </Document>\n);\n\n// Helper function to convert Tailwind colors to hex\nconst getPhaseColor = (tailwindColor) => {\n  const colorMap = {\n    'bg-blue-500': '#3b82f6',\n    'bg-purple-500': '#8b5cf6',\n    'bg-green-500': '#10b981',\n    'bg-orange-500': '#f59e0b',\n    'bg-red-500': '#ef4444',\n  };\n  return colorMap[tailwindColor] || '#3b82f6';\n};\n\n// Main download function\nexport const downloadRoadmapPDF = async (phases) => {\n  try {\n    // Create the PDF blob\n    const blob = await pdf(<RoadmapPDFDocument phases={phases} />).toBlob();\n\n    // Generate filename with current date\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `Springboot-Engineer-roadmap-${currentDate}.pdf`;\n\n    // Save the file\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating PDF:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// React Component for PDF Download Link (alternative approach)\nexport const PDFDownloadButton = ({ phases, className = \"\", children = \"Download PDF\" }) => (\n  <PDFDownloadLink\n    document={<RoadmapPDFDocument phases={phases} />}\n    fileName={`Springboot-Engineer-roadmap-${new Date().toISOString().split('T')[0]}.pdf`}\n    className={className}\n  >\n    {({ blob, url, loading, error }) => {\n      if (loading) return 'Generating PDF...';\n      if (error) return 'Error generating PDF';\n      return children;\n    }}\n  </PDFDownloadLink>\n  );\n\n// Advanced PDF generation with custom options\nexport const downloadAdvancedRoadmapPDF = async (phases, options = {}) => {\n  const {\n    includeWatermark = true,\n    customTitle = \"Springboot Engineer Roadmap\",\n    customSubtitle = \"Your Complete Journey from Beginner to Professional\",\n    pageSize = \"A4\",\n    orientation = \"portrait\"\n  } = options;\n\n  try {\n    const AdvancedPDFDocument = () => (\n      <Document>\n        <Page size={pageSize} orientation={orientation} style={styles.page}>\n          {/* Custom Header */}\n          <View style={styles.header}>\n            <Text style={styles.title}>{customTitle}</Text>\n            <Text style={styles.subtitle}>{customSubtitle}</Text>\n          </View>\n\n\n          {/* Content remains the same */}\n          {phases.map((phase, index) => (\n            <View key={phase.id} wrap={false}>\n              <View style={styles.phaseContainer}>\n                <View style={styles.phaseHeader}>\n                  <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                    {phase.id}\n                  </Text>\n                  <View style={styles.phaseTitleContainer}>\n                    <Text style={styles.phaseTitle}>{phase.title}</Text>\n                    <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                    <Text style={styles.phaseDescription}>{phase.description}</Text>\n                  </View>\n                </View>\n\n                <View style={styles.sectionsContainer}>\n                  {phase.sections.map((section, sectionIndex) => (\n                    <View key={sectionIndex} style={styles.section}>\n                      <Text style={styles.sectionTitle}>{section.title}</Text>\n                      <View style={styles.itemsList}>\n                        {section.items.map((item, itemIndex) => (\n                          <Text key={itemIndex} style={styles.item}>\n                            <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                          </Text>\n                        ))}\n                      </View>\n                    </View>\n                  ))}\n                </View>\n              </View>\n\n              {index < phases.length - 1 && (\n                <View style={styles.phaseConnector}>\n                  <Text style={styles.connectorText}>\n                    ‚Üì Next: Phase {phase.id + 1}\n                  </Text>\n                </View>\n              )}\n            </View>\n          ))}\n\n          <View style={styles.footer}>\n            <Text style={styles.footerTitle}>üéâ Congratulations!</Text>\n            <Text style={styles.footerText}>\n              You've completed the Springboot Engineer Roadmap and are now ready to take on professional  challenges.\n            </Text>\n          </View>\n\n          <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n            `${pageNumber} / ${totalPages}`\n          )} fixed />\n        </Page>\n      </Document>\n    );\n\n    const blob = await pdf(<AdvancedPDFDocument />).toBlob();\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `${customTitle.toLowerCase().replace(/\\s+/g, '-')}-${currentDate}.pdf`;\n\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating advanced PDF:', error);\n    return { success: false, error: error.message };\n  }\n};"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;AAAA;AACA;;;;;AAEA,4BAA4B;AAC5B,MAAM,SAAS,+LAAA,CAAA,aAAU,CAAC,MAAM,CAAC;IAC/B,MAAM;QACJ,eAAe;QACf,iBAAiB;QACjB,SAAS;QACT,YAAY;IACd;IACA,QAAQ;QACN,cAAc;QACd,WAAW;QACX,eAAe;QACf,mBAAmB;QACnB,mBAAmB;IACrB;IACA,OAAO;QACL,UAAU;QACV,YAAY;QACZ,OAAO;QACP,cAAc;IAChB;IACA,UAAU;QACR,UAAU;QACV,OAAO;QACP,YAAY;IACd;IACA,gBAAgB;QACd,cAAc;QACd,iBAAiB;QACjB,cAAc;QACd,SAAS;QACT,aAAa;QACb,aAAa;IACf;IACA,aAAa;QACX,eAAe;QACf,YAAY;QACZ,cAAc;IAChB;IACA,aAAa;QACX,OAAO;QACP,QAAQ;QACR,cAAc;QACd,iBAAiB;QACjB,OAAO;QACP,UAAU;QACV,YAAY;QACZ,WAAW;QACX,YAAY;QACZ,aAAa;IACf;IACA,qBAAqB;QACnB,MAAM;IACR;IACA,YAAY;QACV,UAAU;QACV,YAAY;QACZ,OAAO;QACP,cAAc;IAChB;IACA,eAAe;QACb,UAAU;QACV,OAAO;QACP,cAAc;IAChB;IACA,kBAAkB;QAChB,UAAU;QACV,OAAO;QACP,YAAY;IACd;IACA,mBAAmB;QACjB,eAAe;QACf,UAAU;QACV,KAAK;IACP;IACA,SAAS;QACP,MAAM;QACN,iBAAiB;QACjB,cAAc;QACd,SAAS;QACT,iBAAiB;QACjB,iBAAiB;QACjB,cAAc;IAChB;IACA,cAAc;QACZ,UAAU;QACV,YAAY;QACZ,OAAO;QACP,cAAc;IAChB;IACA,WAAW;QACT,KAAK;IACP;IACA,MAAM;QACJ,UAAU;QACV,OAAO;QACP,YAAY;QACZ,aAAa;QACb,cAAc;IAChB;IACA,YAAY;QACV,YAAY;QACZ,OAAO;IACT;IACA,gBAAgB;QACd,WAAW;QACX,gBAAgB;QAChB,iBAAiB;QACjB,mBAAmB;QACnB,iBAAiB;QACjB,cAAc;QACd,aAAa;QACb,aAAa;IACf;IACA,eAAe;QACb,UAAU;QACV,OAAO;QACP,WAAW;QACX,YAAY;IACd;IACA,QAAQ;QACN,WAAW;QACX,SAAS;QACT,iBAAiB;QACjB,cAAc;QACd,aAAa;QACb,aAAa;QACb,WAAW;IACb;IACA,aAAa;QACX,UAAU;QACV,YAAY;QACZ,OAAO;QACP,cAAc;IAChB;IACA,YAAY;QACV,UAAU;QACV,OAAO;QACP,YAAY;IACd;IACA,YAAY;QACV,UAAU;QACV,UAAU;QACV,QAAQ;QACR,OAAO;QACP,OAAO;IACT;IACA,WAAW;QACT,UAAU;QACV,KAAK;QACL,OAAO;QACP,UAAU;QACV,OAAO;QACP,SAAS;IACX;AACF;AAEA,yBAAyB;AACzB,MAAM,qBAAqB,CAAC,EAAE,MAAM,EAAE,iBACpC,6LAAC,+JAAA,CAAA,WAAQ;kBACP,cAAA,6LAAC,+JAAA,CAAA,OAAI;YAAC,MAAK;YAAK,OAAO,OAAO,IAAI;;8BAEhC,6LAAC,+JAAA,CAAA,OAAI;oBAAC,OAAO,OAAO,MAAM;;sCACxB,6LAAC,+JAAA,CAAA,OAAI;4BAAC,OAAO,OAAO,KAAK;sCAAE;;;;;;sCAC3B,6LAAC,+JAAA,CAAA,OAAI;4BAAC,OAAO,OAAO,QAAQ;sCAAE;;;;;;;;;;;;gBAM/B,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,6LAAC,+JAAA,CAAA,OAAI;wBAAgB,MAAM;;0CACzB,6LAAC,+JAAA,CAAA,OAAI;gCAAC,OAAO,OAAO,cAAc;;kDAEhC,6LAAC,+JAAA,CAAA,OAAI;wCAAC,OAAO,OAAO,WAAW;;0DAC7B,6LAAC,+JAAA,CAAA,OAAI;gDAAC,OAAO;oDAAC,OAAO,WAAW;oDAAE;wDAAE,iBAAiB,cAAc,MAAM,KAAK;oDAAE;iDAAE;0DAC/E,MAAM,EAAE;;;;;;0DAEX,6LAAC,+JAAA,CAAA,OAAI;gDAAC,OAAO,OAAO,mBAAmB;;kEACrC,6LAAC,+JAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,UAAU;kEAAG,MAAM,KAAK;;;;;;kEAC5C,6LAAC,+JAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,aAAa;kEAAG,MAAM,QAAQ;;;;;;kEAClD,6LAAC,+JAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,gBAAgB;kEAAG,MAAM,WAAW;;;;;;;;;;;;;;;;;;kDAK5D,6LAAC,+JAAA,CAAA,OAAI;wCAAC,OAAO,OAAO,iBAAiB;kDAClC,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,6BAC5B,6LAAC,+JAAA,CAAA,OAAI;gDAAoB,OAAO,OAAO,OAAO;;kEAC5C,6LAAC,+JAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,YAAY;kEAAG,QAAQ,KAAK;;;;;;kEAChD,6LAAC,+JAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,SAAS;kEAC1B,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,0BACxB,6LAAC,+JAAA,CAAA,OAAI;gEAAiB,OAAO,OAAO,IAAI;;kFACtC,6LAAC,+JAAA,CAAA,OAAI;wEAAC,OAAO,OAAO,UAAU;;4EAAG,YAAY;4EAAE;;;;;;;oEAAQ;oEAAE;;+DADhD;;;;;;;;;;;+CAJN;;;;;;;;;;;;;;;;4BAehB,QAAQ,OAAO,MAAM,GAAG,mBACvB,6LAAC,+JAAA,CAAA,OAAI;gCAAC,OAAO,OAAO,cAAc;0CAChC,cAAA,6LAAC,+JAAA,CAAA,OAAI;oCAAC,OAAO,OAAO,aAAa;;wCAAE;wCAClB,MAAM,EAAE,GAAG;;;;;;;;;;;;;uBAnCvB,MAAM,EAAE;;;;;8BA6CrB,6LAAC,+JAAA,CAAA,OAAI;oBAAC,OAAO,OAAO,UAAU;oBAAE,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,GACjE,GAAG,WAAW,GAAG,EAAE,YAAY;oBAC9B,KAAK;;;;;;;;;;;;;;;;;KA5DR;AAiEN,oDAAoD;AACpD,MAAM,gBAAgB,CAAC;IACrB,MAAM,WAAW;QACf,eAAe;QACf,iBAAiB;QACjB,gBAAgB;QAChB,iBAAiB;QACjB,cAAc;IAChB;IACA,OAAO,QAAQ,CAAC,cAAc,IAAI;AACpC;AAGO,MAAM,qBAAqB,OAAO;IACvC,IAAI;QACF,sBAAsB;QACtB,MAAM,OAAO,MAAM,CAAA,GAAA,+LAAA,CAAA,MAAG,AAAD,gBAAE,6LAAC;YAAmB,QAAQ;;;;;kBAAY,MAAM;QAErE,sCAAsC;QACtC,MAAM,cAAc,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QAC1D,MAAM,WAAW,CAAC,4BAA4B,EAAE,YAAY,IAAI,CAAC;QAEjE,gBAAgB;QAChB,CAAA,GAAA,4JAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QAEb,OAAO;YAAE,SAAS;YAAM;QAAS;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IAChD;AACF;AAGO,MAAM,oBAAoB,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,WAAW,cAAc,EAAE,iBACrF,6LAAC,+LAAA,CAAA,kBAAe;QACd,wBAAU,6LAAC;YAAmB,QAAQ;;;;;;QACtC,UAAU,CAAC,4BAA4B,EAAE,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;QACrF,WAAW;kBAEV,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE;YAC7B,IAAI,SAAS,OAAO;YACpB,IAAI,OAAO,OAAO;YAClB,OAAO;QACT;;;;;;MAVS;AAeN,MAAM,6BAA6B,OAAO,QAAQ,UAAU,CAAC,CAAC;IACnE,MAAM,EACJ,mBAAmB,IAAI,EACvB,cAAc,6BAA6B,EAC3C,iBAAiB,qDAAqD,EACtE,WAAW,IAAI,EACf,cAAc,UAAU,EACzB,GAAG;IAEJ,IAAI;QACF,MAAM,sBAAsB,kBAC1B,6LAAC,+JAAA,CAAA,WAAQ;0BACP,cAAA,6LAAC,+JAAA,CAAA,OAAI;oBAAC,MAAM;oBAAU,aAAa;oBAAa,OAAO,OAAO,IAAI;;sCAEhE,6LAAC,+JAAA,CAAA,OAAI;4BAAC,OAAO,OAAO,MAAM;;8CACxB,6LAAC,+JAAA,CAAA,OAAI;oCAAC,OAAO,OAAO,KAAK;8CAAG;;;;;;8CAC5B,6LAAC,+JAAA,CAAA,OAAI;oCAAC,OAAO,OAAO,QAAQ;8CAAG;;;;;;;;;;;;wBAKhC,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,6LAAC,+JAAA,CAAA,OAAI;gCAAgB,MAAM;;kDACzB,6LAAC,+JAAA,CAAA,OAAI;wCAAC,OAAO,OAAO,cAAc;;0DAChC,6LAAC,+JAAA,CAAA,OAAI;gDAAC,OAAO,OAAO,WAAW;;kEAC7B,6LAAC,+JAAA,CAAA,OAAI;wDAAC,OAAO;4DAAC,OAAO,WAAW;4DAAE;gEAAE,iBAAiB,cAAc,MAAM,KAAK;4DAAE;yDAAE;kEAC/E,MAAM,EAAE;;;;;;kEAEX,6LAAC,+JAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,mBAAmB;;0EACrC,6LAAC,+JAAA,CAAA,OAAI;gEAAC,OAAO,OAAO,UAAU;0EAAG,MAAM,KAAK;;;;;;0EAC5C,6LAAC,+JAAA,CAAA,OAAI;gEAAC,OAAO,OAAO,aAAa;0EAAG,MAAM,QAAQ;;;;;;0EAClD,6LAAC,+JAAA,CAAA,OAAI;gEAAC,OAAO,OAAO,gBAAgB;0EAAG,MAAM,WAAW;;;;;;;;;;;;;;;;;;0DAI5D,6LAAC,+JAAA,CAAA,OAAI;gDAAC,OAAO,OAAO,iBAAiB;0DAClC,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,6BAC5B,6LAAC,+JAAA,CAAA,OAAI;wDAAoB,OAAO,OAAO,OAAO;;0EAC5C,6LAAC,+JAAA,CAAA,OAAI;gEAAC,OAAO,OAAO,YAAY;0EAAG,QAAQ,KAAK;;;;;;0EAChD,6LAAC,+JAAA,CAAA,OAAI;gEAAC,OAAO,OAAO,SAAS;0EAC1B,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,0BACxB,6LAAC,+JAAA,CAAA,OAAI;wEAAiB,OAAO,OAAO,IAAI;;0FACtC,6LAAC,+JAAA,CAAA,OAAI;gFAAC,OAAO,OAAO,UAAU;;oFAAG,YAAY;oFAAE;;;;;;;4EAAQ;4EAAE;;uEADhD;;;;;;;;;;;uDAJN;;;;;;;;;;;;;;;;oCAchB,QAAQ,OAAO,MAAM,GAAG,mBACvB,6LAAC,+JAAA,CAAA,OAAI;wCAAC,OAAO,OAAO,cAAc;kDAChC,cAAA,6LAAC,+JAAA,CAAA,OAAI;4CAAC,OAAO,OAAO,aAAa;;gDAAE;gDAClB,MAAM,EAAE,GAAG;;;;;;;;;;;;;+BAhCvB,MAAM,EAAE;;;;;sCAuCrB,6LAAC,+JAAA,CAAA,OAAI;4BAAC,OAAO,OAAO,MAAM;;8CACxB,6LAAC,+JAAA,CAAA,OAAI;oCAAC,OAAO,OAAO,WAAW;8CAAE;;;;;;8CACjC,6LAAC,+JAAA,CAAA,OAAI;oCAAC,OAAO,OAAO,UAAU;8CAAE;;;;;;;;;;;;sCAKlC,6LAAC,+JAAA,CAAA,OAAI;4BAAC,OAAO,OAAO,UAAU;4BAAE,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,GACjE,GAAG,WAAW,GAAG,EAAE,YAAY;4BAC9B,KAAK;;;;;;;;;;;;;;;;;QAKd,MAAM,OAAO,MAAM,CAAA,GAAA,+LAAA,CAAA,MAAG,AAAD,gBAAE,6LAAC;;;;kBAAwB,MAAM;QACtD,MAAM,cAAc,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QAC1D,MAAM,WAAW,GAAG,YAAY,WAAW,GAAG,OAAO,CAAC,QAAQ,KAAK,CAAC,EAAE,YAAY,IAAI,CAAC;QAEvF,CAAA,GAAA,4JAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QAEb,OAAO;YAAE,SAAS;YAAM;QAAS;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IAChD;AACF","debugId":null}},
    {"offset": {"line": 1506, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Springboot/roadmapData.js"],"sourcesContent":["// roadmapData.js - Spring Boot Development Roadmap Data\n\nexport const phases = [\n  {\n    id: 1,\n    title: \"Beginner (Foundations)\",\n    subtitle: \"Foundational Level\",\n    description: \"Understand Java fundamentals and Spring ecosystem basics\",\n    color: \"bg-green-500\",\n    sections: [\n      {\n        title: \"Core Java Fundamentals\",\n        items: [\n          \"OOP Concepts ‚Üí Classes, Objects, Inheritance, Polymorphism, Abstraction, Encapsulation\",\n          \"Exception Handling ‚Üí Try-catch blocks, custom exceptions, best practices\",\n          \"Collections Framework ‚Üí List, Set, Map, ArrayList, HashMap, LinkedList usage\",\n          \"Java 8+ Features ‚Üí Streams, Lambdas, Optional, Method References\"\n        ]\n      },\n      {\n        title: \"Modern Java Features\",\n        items: [\n          \"Java 17+ Features ‚Üí Records, Sealed Classes, Pattern Matching, Switch Expressions\",\n          \"Functional Programming ‚Üí Stream API, Collectors, Functional Interfaces\",\n          \"Concurrency Basics ‚Üí Threads, ExecutorService, CompletableFuture\",\n          \"Memory Management ‚Üí Garbage Collection, JVM tuning basics\"\n        ]\n      },\n      {\n        title: \"Build Tools & Spring Basics\",\n        items: [\n          \"Maven ‚Üí Project structure, dependencies, lifecycle, plugins\",\n          \"Gradle ‚Üí Build scripts, dependency management, multi-module projects\",\n          \"Spring Core ‚Üí IoC Container, Dependency Injection, Bean Lifecycle\",\n          \"Annotations ‚Üí @Component, @Service, @Repository, @Autowired, @Configuration\"\n        ]\n      },\n      {\n        title: \"First Projects\",\n        items: [\n          \"Simple REST API ‚Üí Library/Books CRUD system with H2 database\",\n          \"Spring Boot Basics ‚Üí @RestController, @RequestMapping, @PathVariable, @RequestParam\",\n          \"Todo List Application ‚Üí Thymeleaf frontend + Spring Boot backend\",\n          \"Configuration ‚Üí application.properties, Spring Boot starter templates\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 2,\n    title: \"Intermediate (Backend Development)\",\n    subtitle: \"Intermediate Level\",\n    description: \"Build real-world REST APIs and understand data handling\",\n    color: \"bg-blue-500\",\n    sections: [\n      {\n        title: \"Advanced Spring Boot\",\n        items: [\n          \"Auto-configuration ‚Üí How Spring Boot magic works, custom auto-config\",\n          \"Configuration Management ‚Üí application.yml, @ConfigurationProperties, profiles\",\n          \"Environment Profiles ‚Üí dev, test, prod configurations, conditional beans\",\n          \"Actuator ‚Üí Health checks, metrics, application monitoring endpoints\"\n        ]\n      },\n      {\n        title: \"Data Persistence & JPA\",\n        items: [\n          \"Spring Data JPA ‚Üí @Entity, @Id, @GeneratedValue, repository patterns\",\n          \"Database Relationships ‚Üí @OneToOne, @OneToMany, @ManyToMany, fetch strategies\",\n          \"Custom Queries ‚Üí @Query, JPQL, native queries, pagination and sorting\",\n          \"Repository Interfaces ‚Üí CrudRepository, JpaRepository, custom implementations\"\n        ]\n      },\n      {\n        title: \"Validation & Error Handling\",\n        items: [\n          \"Bean Validation ‚Üí @Valid, @NotNull, @NotBlank, @Size, custom validators\",\n          \"Global Exception Handling ‚Üí @ControllerAdvice, @ExceptionHandler patterns\",\n          \"Response Entities ‚Üí Proper HTTP status codes, error response structures\",\n          \"API Documentation ‚Üí Swagger/OpenAPI 3, request/response examples\"\n        ]\n      },\n      {\n        title: \"Security & Testing\",\n        items: [\n          \"Spring Security Basics ‚Üí Authentication, authorization, password encoding\",\n          \"Role-based Security ‚Üí User roles, method-level security, security expressions\",\n          \"Testing Framework ‚Üí JUnit 5, Mockito, @SpringBootTest, @WebMvcTest\",\n          \"Integration Testing ‚Üí @TestPropertySource, embedded databases, test containers\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 3,\n    title: \"Advanced (Production-Ready)\",\n    subtitle: \"Advanced Level\",\n    description: \"Handle real-world challenges like security, microservices, and cloud deployment\",\n    color: \"bg-purple-500\",\n    sections: [\n      {\n        title: \"Advanced Configuration & Logging\",\n        items: [\n          \"Externalized Configuration ‚Üí Environment variables, config servers, secrets management\",\n          \"Logging Framework ‚Üí SLF4J, Logback, structured logging, log aggregation\",\n          \"Application Events ‚Üí Custom events, @EventListener, async event processing\",\n          \"Caching ‚Üí @Cacheable, Redis integration, cache eviction strategies\"\n        ]\n      },\n      {\n        title: \"Advanced Security\",\n        items: [\n          \"JWT Authentication ‚Üí Token generation, validation, refresh tokens\",\n          \"OAuth2 Integration ‚Üí Social login, resource servers, authorization servers\",\n          \"Method Security ‚Üí @PreAuthorize, @PostAuthorize, custom security expressions\",\n          \"CSRF & CORS ‚Üí Cross-site protection, CORS configuration, security headers\"\n        ]\n      },\n      {\n        title: \"Microservices Architecture\",\n        items: [\n          \"Service Discovery ‚Üí Eureka, Consul, service registration and discovery\",\n          \"API Gateway ‚Üí Spring Cloud Gateway, routing, filters, rate limiting\",\n          \"Circuit Breaker ‚Üí Resilience4J, Hystrix, fault tolerance patterns\",\n          \"Configuration Management ‚Üí Spring Cloud Config, centralized configuration\"\n        ]\n      },\n      {\n        title: \"Messaging & Performance\",\n        items: [\n          \"Message Queues ‚Üí RabbitMQ, Apache Kafka, message-driven architecture\",\n          \"Async Processing ‚Üí @Async, CompletableFuture, thread pool configuration\",\n          \"Database Optimization ‚Üí Connection pooling, query optimization, indexing strategies\",\n          \"Scheduled Tasks ‚Üí @Scheduled, Quartz integration, distributed scheduling\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 4,\n    title: \"Expert Level (Industry Ready)\",\n    subtitle: \"Expert Level\",\n    description: \"Build enterprise-grade applications with best practices and scalable systems\",\n    color: \"bg-red-500\",\n    sections: [\n      {\n        title: \"Production Readiness\",\n        items: [\n          \"Health Checks ‚Üí Custom health indicators, readiness and liveness probes\",\n          \"Monitoring ‚Üí Prometheus metrics, Grafana dashboards, custom metrics\",\n          \"Distributed Tracing ‚Üí Spring Sleuth, Zipkin, request correlation\",\n          \"Application Security ‚Üí Security scanning, dependency checks, OWASP compliance\"\n        ]\n      },\n      {\n        title: \"Cloud & DevOps\",\n        items: [\n          \"Containerization ‚Üí Docker best practices, multi-stage builds, image optimization\",\n          \"Kubernetes ‚Üí Deployments, services, config maps, secrets, ingress\",\n          \"Cloud Platforms ‚Üí AWS (RDS, ECS, Lambda), GCP, Azure deployment strategies\",\n          \"Infrastructure as Code ‚Üí Terraform, CloudFormation, Helm charts\"\n        ]\n      },\n      {\n        title: \"Performance & Scalability\",\n        items: [\n          \"JVM Tuning ‚Üí Garbage collection, memory optimization, profiling tools\",\n          \"Caching Strategies ‚Üí Redis clustering, distributed caching, cache patterns\",\n          \"Database Scaling ‚Üí Read replicas, sharding, connection pooling optimization\",\n          \"Load Testing ‚Üí JMeter, Gatling, performance benchmarking\"\n        ]\n      },\n      {\n        title: \"Advanced Architecture Patterns\",\n        items: [\n          \"Event-Driven Architecture ‚Üí Event sourcing, CQRS, saga patterns\",\n          \"Clean Architecture ‚Üí Hexagonal architecture, ports and adapters pattern\",\n          \"Domain-Driven Design ‚Üí Bounded contexts, aggregates, domain events\",\n          \"API Versioning ‚Üí Backward compatibility, deprecation strategies\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 5,\n    title: \"Continuous Learning & Mastery\",\n    subtitle: \"Mastery Level\",\n    description: \"Stay current with ecosystem and contribute to open source\",\n    color: \"bg-gray-800\",\n    sections: [\n      {\n        title: \"Advanced Spring Ecosystem\",\n        items: [\n          \"Spring Boot 3.x+ ‚Üí Latest features, GraalVM native images, virtual threads\",\n          \"Spring WebFlux ‚Üí Reactive programming, non-blocking I/O, backpressure handling\",\n          \"Spring Data ‚Üí Advanced querying, custom repositories, reactive data access\",\n          \"Spring Integration ‚Üí Enterprise integration patterns, message routing\"\n        ]\n      },\n      {\n        title: \"Emerging Technologies\",\n        items: [\n          \"GraphQL Integration ‚Üí Spring GraphQL, schema design, subscription handling\",\n          \"GraalVM Native ‚Üí Ahead-of-time compilation, startup optimization, memory usage\",\n          \"Project Loom ‚Üí Virtual threads, structured concurrency, scalability improvements\",\n          \"Serverless ‚Üí AWS Lambda with Spring Boot, cold start optimization\"\n        ]\n      },\n      {\n        title: \"Documentation & Standards\",\n        items: [\n          \"API Documentation ‚Üí OpenAPI 3.0, automated documentation generation\",\n          \"Code Quality ‚Üí SonarQube, code coverage, static analysis tools\",\n          \"Testing Strategies ‚Üí Contract testing, mutation testing, property-based testing\",\n          \"Dependency Management ‚Üí Security scanning, version management, update strategies\"\n        ]\n      },\n      {\n        title: \"Community & Contribution\",\n        items: [\n          \"Open Source ‚Üí Contributing to Spring projects, bug reports, feature requests\",\n          \"Knowledge Sharing ‚Üí Technical blogging, conference speaking, mentoring\",\n          \"Best Practices ‚Üí Code reviews, architecture decisions, team leadership\",\n          \"Industry Trends ‚Üí Following Spring roadmap, community discussions, new patterns\"\n        ]\n      }\n    ]\n  }\n];\n\n"],"names":[],"mappings":"AAAA,wDAAwD;;;;AAEjD,MAAM,SAAS;IACpB;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;CACD","debugId":null}},
    {"offset": {"line": 1746, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Springboot/page.jsx"],"sourcesContent":["\"use client\"\nimport React, { useState } from 'react';\nimport { Building2, Download, Map, FileText, FolderOpen, HelpCircle, ChevronDown, Menu, X, Loader2,capstoneProjects} from 'lucide-react';\nimport Docs from './docs';\nimport Projects from './projects';\nimport Faq from './faq';\nimport { downloadRoadmapPDF } from './downloadPdf';\nimport { phases } from './roadmapData';\n\nconst Springboot = () => {\n  const [activeTab, setActiveTab] = useState('roadmap');\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  // Handle PDF download with loading state\n  const handlePDFDownload = async () => {\n    setIsDownloading(true);\n    try {\n      const result = await downloadRoadmapPDF(phases);\n      if (result.success) {\n        console.log(`PDF downloaded successfully: ${result.filename}`);\n      } else {\n        console.error('PDF download failed:', result.error);\n      }\n    } catch (error) {\n      console.error('PDF download error:', error);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'documentation':\n        return <Docs />;\n      case 'projects':\n        return <Projects />;\n      case 'faq':\n        return <Faq />;\n      default:\n        return (\n          <div className=\"relative\">\n            {/* Timeline */}\n            <div className=\"flex flex-col space-y-8 md:space-y-12\">\n              {phases.map((phase, index) => (\n                <div key={phase.id} className=\"relative\">\n                  {/* Connection Line */}\n                  {index < phases.length - 1 && (\n                    <div className=\"absolute left-1/2 transform -translate-x-1/2 top-full h-8 md:h-12 w-0.5 md:w-1 bg-gray-300 z-10\"></div>\n                  )}\n\n                  {/* Phase Card */}\n                  <div className=\"flex flex-col items-center\">\n                    {/* Phase Header */}\n                    <div className=\"text-center mb-4 md:mb-6 px-4\">\n                      <div className={`inline-block ${phase.color} text-white px-4 md:px-6 py-2 md:py-3 rounded-lg font-semibold text-base md:text-lg mb-2`}>\n                        Phase {phase.id}: {phase.title}\n                      </div>\n                      <p className=\"text-gray-600 text-xs md:text-sm\">{phase.subtitle}</p>\n                      <p className=\"text-gray-800 font-medium mt-1 text-sm md:text-base\">{phase.description}</p>\n                    </div>\n\n                    {/* Phase Content */}\n                    <div className=\"w-full max-w-6xl px-4\">\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4 md:gap-6\">\n                        {phase.sections.map((section, sectionIndex) => (\n                          <div\n                            key={sectionIndex}\n                            className=\"bg-white rounded-lg border-2 border-blue-200 p-4 md:p-6 shadow-sm hover:shadow-md transition-shadow\"\n                          >\n                            <h3 className=\"text-blue-600 font-semibold text-base md:text-lg mb-3 md:mb-4\">\n                              {section.title}\n                            </h3>\n                            <ol className=\"space-y-2\">\n                              {section.items.map((item, itemIndex) => (\n                                <li key={itemIndex} className=\"text-gray-700 text-xs md:text-sm leading-relaxed\">\n                                  <span className=\"font-medium text-gray-900\">{itemIndex + 1}.</span> {item}\n                                </li>\n                              ))}\n                            </ol>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Step Indicators */}\n                    {index < phases.length - 1 && (\n                      <div className=\"mt-6 md:mt-8 flex items-center space-x-2 md:space-x-4\">\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform -rotate-12\">\n                          Phase {phase.id}\n                        </div>\n                        <ChevronDown className=\"text-gray-400\" size={20} />\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform rotate-12\">\n                          Phase {phase.id + 1}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Capstone Projects Section */}\n            <div className=\"text-center mt-8 md:mt-12 mx-4 p-6 md:p-8 bg-gradient-to-r from-green-50 to-blue-50 rounded-lg border border-green-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                üöÄ Capstone Projects (Industry-Ready Architecture Portfolio)\n              </h2>\n              <p className=\"text-gray-700 mb-6\">Build 3‚Äì4 production-grade architectural projects to showcase your expertise:</p>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-left\">\n                {capstoneProjects.map((project, index) => (\n                  <div key={index} className={`bg-white p-4 rounded-lg border ${project.color}`}>\n                    <h3 className={`font-semibold ${project.bgColor} mb-2`}>{project.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{project.description}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Resources Section */}\n            <div className=\"text-center mt-8 md:mt-12 mx-4 p-6 md:p-8 bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg border border-purple-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                üìö Key Resources & Tools by Phase\n              </h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {resources.map((resource, index) => (\n                  <div key={index} className={`bg-white p-4 rounded-lg border ${resource.color}`}>\n                    <h3 className={`font-semibold ${resource.bgColor} mb-2`}>{resource.title}</h3>\n                    <ul className=\"text-sm text-gray-600 space-y-1\">\n                      {resource.items.map((item, itemIndex) => (\n                        <li key={itemIndex}>{item}</li>\n                      ))}\n                    </ul>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Timeline Section */}\n            <div className=\"text-center mt-8 md:mt-12 mx-4 p-6 md:p-8 bg-gradient-to-r from-indigo-50 to-blue-50 rounded-lg border border-indigo-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                ‚è≥ Suggested Timeline (15-20 hrs/week)\n              </h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n                {timeline.map((item, index) => (\n                  <div key={index} className={`bg-white p-4 rounded-lg border ${item.color}`}>\n                    <h3 className={`font-semibold ${item.bgColor} mb-2`}>{item.phase}</h3>\n                    <p className={`text-2xl font-bold ${item.bgColor}`}>{item.duration}</p>\n                    <p className=\"text-sm text-gray-600\">{item.description}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Final Message */}\n            <div className=\"text-center mt-8 md:mt-12 mx-4 p-6 md:p-8 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                üèÜ Final Tips to Become Industry-Ready Springboot Engineer\n              </h2>\n              <p className=\"text-gray-700 text-base md:text-lg mb-4\">\n                Congratulations! You've completed the Springboot Engineer Mastery Roadmap and are ready to design scalable, robust systems.\n              </p>\n              <div className=\"bg-white p-4 rounded-lg border border-blue-300 mt-4\">\n                <h3 className=\"font-semibold text-blue-600 mb-2\">üéØ Next Steps for Architectural Excellence</h3>\n                <ul className=\"text-sm text-gray-600 space-y-1\">\n                  {finalTips.map((tip, index) => (\n                    <li key={index}>{tip}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 md:px-6 py-4 md:py-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6 md:mb-8\">\n          <div className=\"flex items-center space-x-2 md:space-x-4\">\n            <Building2 className=\"text-blue-600\" size={32} />\n            <h1 className=\"text-xl md:text-3xl font-bold text-gray-900\">\n              Springboot<span className=\"text-blue-600\">Mastery Roadmap</span>\n              <span className=\"text-sm md:text-base font-normal text-gray-600 ml-2\">(2025 Edition)</span>\n            </h1>\n          </div>\n\n          {/* Desktop Download Button */}\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"hidden md:flex bg-red-500 hover:bg-red-600 disabled:bg-red-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg items-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n\n          {/* Mobile Menu Button */}\n          <button \n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            className=\"md:hidden bg-blue-500 hover:bg-blue-600 text-white p-2 rounded-lg transition-colors\"\n          >\n            {mobileMenuOpen ? <X size={20} /> : <Menu size={20} />}\n          </button>\n        </div>\n\n        {/* Mobile Download Button */}\n        <div className=\"md:hidden mb-4\">\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"w-full bg-red-500 hover:bg-red-600 disabled:bg-red-400 disabled:cursor-not-allowed text-white px-4 py-3 rounded-lg flex items-center justify-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className={`${mobileMenuOpen ? 'block' : 'hidden'} md:block mb-6 md:mb-8`}>\n          <div className=\"flex flex-col md:flex-row space-y-1 md:space-y-0 md:space-x-1 bg-white p-1 rounded-lg shadow-sm w-full md:w-fit\">\n            <button\n              onClick={() => {\n                setActiveTab('roadmap');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'roadmap'\n                  ? 'bg-blue-600 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <Map size={18} className=\"mr-2\" />\n              Roadmap\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('documentation');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'documentation'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FileText size={18} className=\"mr-2\" />\n              Documentation\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('projects');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'projects'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FolderOpen size={18} className=\"mr-2\" />\n              Projects\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('faq');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'faq'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <HelpCircle size={18} className=\"mr-2\" />\n              FAQ\n            </button>\n          </div>\n        </div>\n\n        {/* Content */}\n        {renderContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default Springboot;"],"names":[],"mappings":"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","debugId":null}}]
}