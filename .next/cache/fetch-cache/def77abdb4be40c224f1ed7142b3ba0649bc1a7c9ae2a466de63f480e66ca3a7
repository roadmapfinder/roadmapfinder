{"kind":"FETCH","data":{"headers":{"content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Thu, 23 Oct 2025 11:03:12 GMT","server":"scaffolding on HTTPServer2","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "youtube#videoListResponse",
  "etag": "loShyPv2FCk5L13dlxKz3sTaJSo",
  "items": [
    {
      "kind": "youtube#video",
      "etag": "4_LcZVNtWd3m1xZJHvrM1CSS-zQ",
      "id": "xnOwOBYaA3w",
      "snippet": {
        "publishedAt": "2025-05-06T13:01:48Z",
        "channelId": "UC8S4rDRZn6Z_StJ-hh7ph8g",
        "title": "Learn NextJS in 7 Minutes",
        "description": "If you know react, but don't know what NextJS is, this is the video for you. NextJS offers a variety of benefits to using plain and pure React, and in this video I will go over everything you need to know about NextJS in 7 minutes.\n\nWant to MASTER NextJS? 🍀\nCheck out my Course: https://www.webdevultra.com/nextjs\n\n🌟 Support My Work: https://buymeacoffee.com/pedrow\n📰 Join My Newsletter: https://www.pedrotech.co/newsletter\n\n📖 Video Resources:\nCode Repo: https://github.com/machadop1407/social-media-vite-supabase\n\n🚀 Courses & Tutorials:\nLearn ReactJS By Building 6 Projects: https://codedamn.com/learn/reactjs-projects\nGraphQL Course for Beginners: https://codedamn.com/learn/graphql-for-beginners\n\n💻 Check out my Blog: https://www.pedrotech.co\n🐤 Follow me on Twitter: (https://twitter.com/pedrotech_)\n📸 Follow me on Instagram: (https://www.instagram.com/pedro.fmachado_/)\n🧳 Follow me on Linkedin: (https://www.linkedin.com/in/pedrotech/)\n👨\u200d💻 GitHub: https://github.com/machadop1407\n\n📋 Business Email: pedro@pedrotech.co\n\nMusic from #Uppbeat (free for Creators!):\nhttps://uppbeat.io/t/soundroll/all-the-things-you-love\nLicense code: ZEHAQ5ZVNX3OZUPD\n\nMusic from #Uppbeat (free for Creators!):\nhttps://uppbeat.io/t/kem/reborn\nLicense code: UWEZRN1WV52JXKPM\n\nTimestamps:\n00:00 - Intro & Why Next.js\n00:54 - Setting Up a Next.js Project\n01:44 - Pages Router vs App Router\n03:24 - Server vs Client Components\n04:14 - Data Fetching in Next.js\n05:02 - API Routes & Image Optimization\n06:08 - SEO in Next.js & Final Thoughts",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/xnOwOBYaA3w/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/xnOwOBYaA3w/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/xnOwOBYaA3w/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/xnOwOBYaA3w/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/xnOwOBYaA3w/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "PedroTech",
        "tags": [
          "javascript",
          "learn reactjs",
          "react tutorial",
          "reactjs",
          "reactjs beginner",
          "reactjs tutorial",
          "typescript",
          "react js crash course",
          "react js",
          "node js",
          "express js",
          "pedrotech",
          "traversy media",
          "traversymedia",
          "freecodecamp",
          "deved",
          "pedro tech",
          "learn nextjs",
          "nextjs for beginners",
          "learn nextjs in 7 minutes",
          "nextjs tutorial",
          "nextjs vs react",
          "what is nextjs",
          "nextjs beginner",
          "nextjs beginner tutorial",
          "how to code a website in nextjs",
          "how to use nextjs",
          "next.js 15",
          "nextjs 15 tutorial"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Learn NextJS in 7 Minutes",
          "description": "If you know react, but don't know what NextJS is, this is the video for you. NextJS offers a variety of benefits to using plain and pure React, and in this video I will go over everything you need to know about NextJS in 7 minutes.\n\nWant to MASTER NextJS? 🍀\nCheck out my Course: https://www.webdevultra.com/nextjs\n\n🌟 Support My Work: https://buymeacoffee.com/pedrow\n📰 Join My Newsletter: https://www.pedrotech.co/newsletter\n\n📖 Video Resources:\nCode Repo: https://github.com/machadop1407/social-media-vite-supabase\n\n🚀 Courses & Tutorials:\nLearn ReactJS By Building 6 Projects: https://codedamn.com/learn/reactjs-projects\nGraphQL Course for Beginners: https://codedamn.com/learn/graphql-for-beginners\n\n💻 Check out my Blog: https://www.pedrotech.co\n🐤 Follow me on Twitter: (https://twitter.com/pedrotech_)\n📸 Follow me on Instagram: (https://www.instagram.com/pedro.fmachado_/)\n🧳 Follow me on Linkedin: (https://www.linkedin.com/in/pedrotech/)\n👨\u200d💻 GitHub: https://github.com/machadop1407\n\n📋 Business Email: pedro@pedrotech.co\n\nMusic from #Uppbeat (free for Creators!):\nhttps://uppbeat.io/t/soundroll/all-the-things-you-love\nLicense code: ZEHAQ5ZVNX3OZUPD\n\nMusic from #Uppbeat (free for Creators!):\nhttps://uppbeat.io/t/kem/reborn\nLicense code: UWEZRN1WV52JXKPM\n\nTimestamps:\n00:00 - Intro & Why Next.js\n00:54 - Setting Up a Next.js Project\n01:44 - Pages Router vs App Router\n03:24 - Server vs Client Components\n04:14 - Data Fetching in Next.js\n05:02 - API Routes & Image Optimization\n06:08 - SEO in Next.js & Final Thoughts"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT7M35S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "42304",
        "likeCount": "1150",
        "favoriteCount": "0",
        "commentCount": "66"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "i8kPYcPK9ljiSX_PLH8nSbuON-Y",
      "id": "b4ba60j_4o8",
      "snippet": {
        "publishedAt": "2025-01-01T06:00:32Z",
        "channelId": "UC80PWRj_ZU8Zu0HSMNVwKWw",
        "title": "Next.js 15 Tutorial - 1 - Introduction",
        "description": "Next.js Tutorial for Beginners | Introduction to Next.js\n\nJoin me in this comprehensive Next.js 15 tutorial course starting with an introduction to Next.js. Learn what Next.js is, its key features, and why it's worth learning for building production-ready web applications. This videos covers the basics of Next.js, including routing, API routes, rendering flexibility, data fetching, styling options, and built-in optimizations. We'll also discuss the prerequisites needed to follow along with this course. Get ready to dive into Next.js and build your first 'Hello World' application.\n\n📔 GitHub Repo - https://github.com/gopinav/Next.js-15-Tutorials\n📘 Frontend Interview Course - https://learn.codevolution.dev/\n💖 Support UPI - https://support.codevolution.dev/\n💖 Support Paypal - https://www.paypal.me/Codevolution\n💾 Github - https://github.com/gopinav\n\n📱 Follow Codevolution\n+ Twitter - https://twitter.com/CodevolutionWeb\n+ Facebook - https://www.facebook.com/codevolutionweb\n\n📫 Business - codevolution.business@gmail.com\n\n00:00 Introduction to the Course\n00:22 What is Next.js?\n01:34 Why Learn Next.js?\n01:44 Key Features of Next.js\n03:25 Prerequisites for the Course\n04:03 Getting Started with Hello World\n04:08 Support the Channel",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/b4ba60j_4o8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/b4ba60j_4o8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/b4ba60j_4o8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/b4ba60j_4o8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/b4ba60j_4o8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Codevolution",
        "tags": [
          "Codevolution",
          "Next.js",
          "Next.js 15",
          "Next.js 15 Tutorial",
          "Next.js 15 Tutorial for Beginners",
          "Next.js advanced",
          "Next.js 15 Advanced",
          "Codevolution Next.js"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Next.js 15 Tutorial - 1 - Introduction",
          "description": "Next.js Tutorial for Beginners | Introduction to Next.js\n\nJoin me in this comprehensive Next.js 15 tutorial course starting with an introduction to Next.js. Learn what Next.js is, its key features, and why it's worth learning for building production-ready web applications. This videos covers the basics of Next.js, including routing, API routes, rendering flexibility, data fetching, styling options, and built-in optimizations. We'll also discuss the prerequisites needed to follow along with this course. Get ready to dive into Next.js and build your first 'Hello World' application.\n\n📔 GitHub Repo - https://github.com/gopinav/Next.js-15-Tutorials\n📘 Frontend Interview Course - https://learn.codevolution.dev/\n💖 Support UPI - https://support.codevolution.dev/\n💖 Support Paypal - https://www.paypal.me/Codevolution\n💾 Github - https://github.com/gopinav\n\n📱 Follow Codevolution\n+ Twitter - https://twitter.com/CodevolutionWeb\n+ Facebook - https://www.facebook.com/codevolutionweb\n\n📫 Business - codevolution.business@gmail.com\n\n00:00 Introduction to the Course\n00:22 What is Next.js?\n01:34 Why Learn Next.js?\n01:44 Key Features of Next.js\n03:25 Prerequisites for the Course\n04:03 Getting Started with Hello World\n04:08 Support the Channel"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT4M16S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "223359",
        "likeCount": "3833",
        "favoriteCount": "0",
        "commentCount": "122"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "BwkqloEI-FebbTPiskP5aosqO1k",
      "id": "2JnEq3ZmLH0",
      "snippet": {
        "publishedAt": "2024-03-03T13:45:50Z",
        "channelId": "UCeVMnSShP_Iviwkknt83cww",
        "title": "Auth.js - Authentication in Next.js | Sigma Web Development Course - Tutorial #127",
        "description": "Latest Udemy Web dev Course With Certificate: https://goharry.in/webdev\nAccess the Sigma web development course playlist: https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w\n➡️ Source Code: https://github.com/CodeWithHarry/Sigma-Web-Dev-Course\n➡️ Notes and CheatSheets: https://www.codewithharry.com/notes/\n➡️ English Subtitles are now up for all the videos!\n\n►Checkout my English channel here: https://www.youtube.com/channel/UC7btqG2Ww0_2LwuQxpvo2HQ\n►Instagram: https://www.instagram.com/codewithharry\n\npython, C, C++, Java, JavaScript and Other Cheatsheets [++]:\nPlaylist: https://www.youtube.com/playlist?list=PLu0W_9lII9agrsRZjFECeFuWY5ev2pQlk\n\n►Learn in One Video[++]:\nPython Course with 5 Projects: https://www.youtube.com/watch?v=fqF9M92jzUo\nPython[15 Hr]: https://www.youtube.com/watch?v=gfDE2a7MKjA&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython Advance[3.5 Hr]: https://www.youtube.com/watch?v=61a7UkDO50s&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[1 Hr]: https://www.youtube.com/watch?v=qHJjMvHLJdg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[2 Hr]: https://www.youtube.com/watch?v=ihk_Xglr164&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[15 Min]:https://www.youtube.com/watch?v=fr1f84rg4Nw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJavaScript[1 Hr]: https://www.youtube.com/watch?v=onbBV0uFVpo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nC[1.3 Hr]-https://www.youtube.com/watch?v=YXcgD8hRHYY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[1 Hr]: https://www.youtube.com/watch?v=xW7ro3lwaCI&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[2.3 Hr]:https://www.youtube.com/watch?v=1SnPKhCdlsU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[Project]- https://www.youtube.com/watch?v=-al2bECumKg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nHTML[30 Min]:https://www.youtube.com/watch?v=E3ByCRqE7Lo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[8.5 Hr]:https://www.youtube.com/watch?v=Edsxf_NBFrw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[1.4 Hr]:https://www.youtube.com/watch?v=u5-K_ua9sOw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWordpress[3.2 Hr]:https://www.youtube.com/watch?v=GlLRYml8mCY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAngular[2 Hr]:https://www.youtube.com/watch?v=0LhBvp8qpro&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJava[2.3 Hr]:https://www.youtube.com/watch?v=rV_3Lewxx6o&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWeb Scraping[1 Hr]:https://www.youtube.com/watch?v=uufDGjTuq34&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nMongoDB[2 Hr]:https://www.youtube.com/watch?v=oSIv-E60NiU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nNumpy[1 Hr]:https://www.youtube.com/watch?v=Rbh1rieb3zc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAndroid Dev[12 Hr]- https://www.youtube.com/watch?v=mXjZQX3UzOs\nLinux[1 Hr]:https://www.youtube.com/watch?v=_tCY-c-sPZc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJQuery[1.1 Hr]:https://www.youtube.com/watch?v=YFlx1C8XwR0&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nGit and GitHub[1.1 Hr]:https://www.youtube.com/watch?v=gwWKnnCMQ5c&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\n\n►Complete course [playlist]:\nReact: https://www.youtube.com/playlist?list=PLu0W_9lII9agx66oZnT6IyhcMIbUMNMdt\nPython-https://www.youtube.com/playlist?list=PLu0W_9lII9agICnT8t4iYVSZ3eykIAOME\nOOP Python-https://www.youtube.com/playlist?list=PLu0W_9lII9ahfRrhFcoB-4lpp9YaBmdCP\nJava:https://www.youtube.com/playlist?list=PLu0W_9lII9agS67Uits0UnJyrYiXhDS6q\nJavaScript- https://www.youtube.com/playlist?list=PLu0W_9lII9ajyk081To1Cbt2eI5913SsL\nPHP-https://www.youtube.com/playlist?list=PLu0W_9lII9aikXkRE0WxDt1vozo3hnmtR\nC-https://www.youtube.com/playlist?list=PLu0W_9lII9aiXlHcLx-mDH1Qul38wD3aR\nC++-https://www.youtube.com/playlist?list=PLu0W_9lII9agpFUAlPFe_VNSlXW5uE0YL\nGit & GitHub-https://www.youtube.com/playlist?list=PLu0W_9lII9ahVQekD7ePHmnirTePXwIln\nAndroid Dev- https://www.youtube.com/playlist?list=PLu0W_9lII9aiL0kysYlfSOUgY5rNlOhUd\nPython GUI- https://www.youtube.com/playlist?list=PLu0W_9lII9ajLcqRcj4PoEihkukF_OTzA\nWeb Development- https://www.youtube.com/playlist?list=PLu0W_9lII9agiCUZYRsvtGTXdxkzPyItg\nPython Django:https://www.youtube.com/playlist?list=PLu0W_9lII9ah7DDtYtflgwMwpT3xmjXY9\nProjects Using HTML, CSS & Javascript- https://www.youtube.com/playlist?list=PLu0W_9lII9aiQiOwthuSvinxoflmhRxM3\nData Structure and Algo:https://www.youtube.com/playlist?list=PLu0W_9lII9ahIappRPN0MCAgtOu3lQjQi \n\nFollow Me On Social Media\n►Website (created using Django Rest & Angular): https://www.codewithharry.com\n►Facebook: https://www.facebook.com/CodeWithHarry\n►Instagram: https://www.instagram.com/codewithharry/ \nTwitter: https://twitter.com/CodeWithHarry\nComment \"#HarryBhai\" if you read this 😉😉",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/2JnEq3ZmLH0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/2JnEq3ZmLH0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/2JnEq3ZmLH0/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/2JnEq3ZmLH0/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/2JnEq3ZmLH0/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "CodeWithHarry",
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Auth.js - Authentication in Next.js | Sigma Web Development Course - Tutorial #127",
          "description": "Latest Udemy Web dev Course With Certificate: https://goharry.in/webdev\nAccess the Sigma web development course playlist: https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w\n➡️ Source Code: https://github.com/CodeWithHarry/Sigma-Web-Dev-Course\n➡️ Notes and CheatSheets: https://www.codewithharry.com/notes/\n➡️ English Subtitles are now up for all the videos!\n\n►Checkout my English channel here: https://www.youtube.com/channel/UC7btqG2Ww0_2LwuQxpvo2HQ\n►Instagram: https://www.instagram.com/codewithharry\n\npython, C, C++, Java, JavaScript and Other Cheatsheets [++]:\nPlaylist: https://www.youtube.com/playlist?list=PLu0W_9lII9agrsRZjFECeFuWY5ev2pQlk\n\n►Learn in One Video[++]:\nPython Course with 5 Projects: https://www.youtube.com/watch?v=fqF9M92jzUo\nPython[15 Hr]: https://www.youtube.com/watch?v=gfDE2a7MKjA&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython Advance[3.5 Hr]: https://www.youtube.com/watch?v=61a7UkDO50s&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[1 Hr]: https://www.youtube.com/watch?v=qHJjMvHLJdg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[2 Hr]: https://www.youtube.com/watch?v=ihk_Xglr164&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[15 Min]:https://www.youtube.com/watch?v=fr1f84rg4Nw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJavaScript[1 Hr]: https://www.youtube.com/watch?v=onbBV0uFVpo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nC[1.3 Hr]-https://www.youtube.com/watch?v=YXcgD8hRHYY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[1 Hr]: https://www.youtube.com/watch?v=xW7ro3lwaCI&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[2.3 Hr]:https://www.youtube.com/watch?v=1SnPKhCdlsU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[Project]- https://www.youtube.com/watch?v=-al2bECumKg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nHTML[30 Min]:https://www.youtube.com/watch?v=E3ByCRqE7Lo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[8.5 Hr]:https://www.youtube.com/watch?v=Edsxf_NBFrw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[1.4 Hr]:https://www.youtube.com/watch?v=u5-K_ua9sOw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWordpress[3.2 Hr]:https://www.youtube.com/watch?v=GlLRYml8mCY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAngular[2 Hr]:https://www.youtube.com/watch?v=0LhBvp8qpro&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJava[2.3 Hr]:https://www.youtube.com/watch?v=rV_3Lewxx6o&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWeb Scraping[1 Hr]:https://www.youtube.com/watch?v=uufDGjTuq34&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nMongoDB[2 Hr]:https://www.youtube.com/watch?v=oSIv-E60NiU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nNumpy[1 Hr]:https://www.youtube.com/watch?v=Rbh1rieb3zc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAndroid Dev[12 Hr]- https://www.youtube.com/watch?v=mXjZQX3UzOs\nLinux[1 Hr]:https://www.youtube.com/watch?v=_tCY-c-sPZc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJQuery[1.1 Hr]:https://www.youtube.com/watch?v=YFlx1C8XwR0&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nGit and GitHub[1.1 Hr]:https://www.youtube.com/watch?v=gwWKnnCMQ5c&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\n\n►Complete course [playlist]:\nReact: https://www.youtube.com/playlist?list=PLu0W_9lII9agx66oZnT6IyhcMIbUMNMdt\nPython-https://www.youtube.com/playlist?list=PLu0W_9lII9agICnT8t4iYVSZ3eykIAOME\nOOP Python-https://www.youtube.com/playlist?list=PLu0W_9lII9ahfRrhFcoB-4lpp9YaBmdCP\nJava:https://www.youtube.com/playlist?list=PLu0W_9lII9agS67Uits0UnJyrYiXhDS6q\nJavaScript- https://www.youtube.com/playlist?list=PLu0W_9lII9ajyk081To1Cbt2eI5913SsL\nPHP-https://www.youtube.com/playlist?list=PLu0W_9lII9aikXkRE0WxDt1vozo3hnmtR\nC-https://www.youtube.com/playlist?list=PLu0W_9lII9aiXlHcLx-mDH1Qul38wD3aR\nC++-https://www.youtube.com/playlist?list=PLu0W_9lII9agpFUAlPFe_VNSlXW5uE0YL\nGit & GitHub-https://www.youtube.com/playlist?list=PLu0W_9lII9ahVQekD7ePHmnirTePXwIln\nAndroid Dev- https://www.youtube.com/playlist?list=PLu0W_9lII9aiL0kysYlfSOUgY5rNlOhUd\nPython GUI- https://www.youtube.com/playlist?list=PLu0W_9lII9ajLcqRcj4PoEihkukF_OTzA\nWeb Development- https://www.youtube.com/playlist?list=PLu0W_9lII9agiCUZYRsvtGTXdxkzPyItg\nPython Django:https://www.youtube.com/playlist?list=PLu0W_9lII9ah7DDtYtflgwMwpT3xmjXY9\nProjects Using HTML, CSS & Javascript- https://www.youtube.com/playlist?list=PLu0W_9lII9aiQiOwthuSvinxoflmhRxM3\nData Structure and Algo:https://www.youtube.com/playlist?list=PLu0W_9lII9ahIappRPN0MCAgtOu3lQjQi \n\nFollow Me On Social Media\n►Website (created using Django Rest & Angular): https://www.codewithharry.com\n►Facebook: https://www.facebook.com/CodeWithHarry\n►Instagram: https://www.instagram.com/codewithharry/ \nTwitter: https://twitter.com/CodeWithHarry\nComment \"#HarryBhai\" if you read this 😉😉"
        },
        "defaultAudioLanguage": "hi"
      },
      "contentDetails": {
        "duration": "PT14M4S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "81213",
        "likeCount": "2349",
        "favoriteCount": "0",
        "commentCount": "256"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "ytfdU1UVysl371-D8kfbnlokTD4",
      "id": "6XVaVITFOgY",
      "snippet": {
        "publishedAt": "2024-02-22T11:52:23Z",
        "channelId": "UCeVMnSShP_Iviwkknt83cww",
        "title": "Introduction to Next.js & File based routing | Sigma Web Development Course - Tutorial #121",
        "description": "Latest Udemy Web dev Course With Certificate: https://goharry.in/webdev\nAccess the Sigma web development course playlist: https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w\n➡️ Source Code: https://github.com/CodeWithHarry/Sigma-Web-Dev-Course\n➡️ Notes and CheatSheets: https://www.codewithharry.com/notes/\n➡️ English Subtitles are now up for all the videos!\n\n►Checkout my English channel here: https://www.youtube.com/channel/UC7btqG2Ww0_2LwuQxpvo2HQ\n►Instagram: https://www.instagram.com/codewithharry\n\npython, C, C++, Java, JavaScript and Other Cheatsheets [++]:\nPlaylist: https://www.youtube.com/playlist?list=PLu0W_9lII9agrsRZjFECeFuWY5ev2pQlk\n\n►Learn in One Video[++]:\nPython Course with 5 Projects: https://www.youtube.com/watch?v=fqF9M92jzUo\nPython[15 Hr]: https://www.youtube.com/watch?v=gfDE2a7MKjA&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython Advance[3.5 Hr]: https://www.youtube.com/watch?v=61a7UkDO50s&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[1 Hr]: https://www.youtube.com/watch?v=qHJjMvHLJdg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[2 Hr]: https://www.youtube.com/watch?v=ihk_Xglr164&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[15 Min]:https://www.youtube.com/watch?v=fr1f84rg4Nw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJavaScript[1 Hr]: https://www.youtube.com/watch?v=onbBV0uFVpo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nC[1.3 Hr]-https://www.youtube.com/watch?v=YXcgD8hRHYY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[1 Hr]: https://www.youtube.com/watch?v=xW7ro3lwaCI&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[2.3 Hr]:https://www.youtube.com/watch?v=1SnPKhCdlsU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[Project]- https://www.youtube.com/watch?v=-al2bECumKg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nHTML[30 Min]:https://www.youtube.com/watch?v=E3ByCRqE7Lo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[8.5 Hr]:https://www.youtube.com/watch?v=Edsxf_NBFrw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[1.4 Hr]:https://www.youtube.com/watch?v=u5-K_ua9sOw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWordpress[3.2 Hr]:https://www.youtube.com/watch?v=GlLRYml8mCY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAngular[2 Hr]:https://www.youtube.com/watch?v=0LhBvp8qpro&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJava[2.3 Hr]:https://www.youtube.com/watch?v=rV_3Lewxx6o&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWeb Scraping[1 Hr]:https://www.youtube.com/watch?v=uufDGjTuq34&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nMongoDB[2 Hr]:https://www.youtube.com/watch?v=oSIv-E60NiU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nNumpy[1 Hr]:https://www.youtube.com/watch?v=Rbh1rieb3zc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAndroid Dev[12 Hr]- https://www.youtube.com/watch?v=mXjZQX3UzOs\nLinux[1 Hr]:https://www.youtube.com/watch?v=_tCY-c-sPZc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJQuery[1.1 Hr]:https://www.youtube.com/watch?v=YFlx1C8XwR0&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nGit and GitHub[1.1 Hr]:https://www.youtube.com/watch?v=gwWKnnCMQ5c&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\n\n►Complete course [playlist]:\nReact: https://www.youtube.com/playlist?list=PLu0W_9lII9agx66oZnT6IyhcMIbUMNMdt\nPython-https://www.youtube.com/playlist?list=PLu0W_9lII9agICnT8t4iYVSZ3eykIAOME\nOOP Python-https://www.youtube.com/playlist?list=PLu0W_9lII9ahfRrhFcoB-4lpp9YaBmdCP\nJava:https://www.youtube.com/playlist?list=PLu0W_9lII9agS67Uits0UnJyrYiXhDS6q\nJavaScript- https://www.youtube.com/playlist?list=PLu0W_9lII9ajyk081To1Cbt2eI5913SsL\nPHP-https://www.youtube.com/playlist?list=PLu0W_9lII9aikXkRE0WxDt1vozo3hnmtR\nC-https://www.youtube.com/playlist?list=PLu0W_9lII9aiXlHcLx-mDH1Qul38wD3aR\nC++-https://www.youtube.com/playlist?list=PLu0W_9lII9agpFUAlPFe_VNSlXW5uE0YL\nGit & GitHub-https://www.youtube.com/playlist?list=PLu0W_9lII9ahVQekD7ePHmnirTePXwIln\nAndroid Dev- https://www.youtube.com/playlist?list=PLu0W_9lII9aiL0kysYlfSOUgY5rNlOhUd\nPython GUI- https://www.youtube.com/playlist?list=PLu0W_9lII9ajLcqRcj4PoEihkukF_OTzA\nWeb Development- https://www.youtube.com/playlist?list=PLu0W_9lII9agiCUZYRsvtGTXdxkzPyItg\nPython Django:https://www.youtube.com/playlist?list=PLu0W_9lII9ah7DDtYtflgwMwpT3xmjXY9\nProjects Using HTML, CSS & Javascript- https://www.youtube.com/playlist?list=PLu0W_9lII9aiQiOwthuSvinxoflmhRxM3\nData Structure and Algo:https://www.youtube.com/playlist?list=PLu0W_9lII9ahIappRPN0MCAgtOu3lQjQi \n\nFollow Me On Social Media\n►Website (created using Django Rest & Angular): https://www.codewithharry.com\n►Facebook: https://www.facebook.com/CodeWithHarry\n►Instagram: https://www.instagram.com/codewithharry/ \nTwitter: https://twitter.com/CodeWithHarry\nComment \"#HarryBhai\" if you read this 😉😉",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/6XVaVITFOgY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/6XVaVITFOgY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/6XVaVITFOgY/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/6XVaVITFOgY/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/6XVaVITFOgY/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "CodeWithHarry",
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Introduction to Next.js & File based routing | Sigma Web Development Course - Tutorial #121",
          "description": "Latest Udemy Web dev Course With Certificate: https://goharry.in/webdev\nAccess the Sigma web development course playlist: https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w\n➡️ Source Code: https://github.com/CodeWithHarry/Sigma-Web-Dev-Course\n➡️ Notes and CheatSheets: https://www.codewithharry.com/notes/\n➡️ English Subtitles are now up for all the videos!\n\n►Checkout my English channel here: https://www.youtube.com/channel/UC7btqG2Ww0_2LwuQxpvo2HQ\n►Instagram: https://www.instagram.com/codewithharry\n\npython, C, C++, Java, JavaScript and Other Cheatsheets [++]:\nPlaylist: https://www.youtube.com/playlist?list=PLu0W_9lII9agrsRZjFECeFuWY5ev2pQlk\n\n►Learn in One Video[++]:\nPython Course with 5 Projects: https://www.youtube.com/watch?v=fqF9M92jzUo\nPython[15 Hr]: https://www.youtube.com/watch?v=gfDE2a7MKjA&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython Advance[3.5 Hr]: https://www.youtube.com/watch?v=61a7UkDO50s&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[1 Hr]: https://www.youtube.com/watch?v=qHJjMvHLJdg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[2 Hr]: https://www.youtube.com/watch?v=ihk_Xglr164&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[15 Min]:https://www.youtube.com/watch?v=fr1f84rg4Nw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJavaScript[1 Hr]: https://www.youtube.com/watch?v=onbBV0uFVpo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nC[1.3 Hr]-https://www.youtube.com/watch?v=YXcgD8hRHYY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[1 Hr]: https://www.youtube.com/watch?v=xW7ro3lwaCI&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[2.3 Hr]:https://www.youtube.com/watch?v=1SnPKhCdlsU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[Project]- https://www.youtube.com/watch?v=-al2bECumKg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nHTML[30 Min]:https://www.youtube.com/watch?v=E3ByCRqE7Lo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[8.5 Hr]:https://www.youtube.com/watch?v=Edsxf_NBFrw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[1.4 Hr]:https://www.youtube.com/watch?v=u5-K_ua9sOw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWordpress[3.2 Hr]:https://www.youtube.com/watch?v=GlLRYml8mCY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAngular[2 Hr]:https://www.youtube.com/watch?v=0LhBvp8qpro&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJava[2.3 Hr]:https://www.youtube.com/watch?v=rV_3Lewxx6o&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWeb Scraping[1 Hr]:https://www.youtube.com/watch?v=uufDGjTuq34&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nMongoDB[2 Hr]:https://www.youtube.com/watch?v=oSIv-E60NiU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nNumpy[1 Hr]:https://www.youtube.com/watch?v=Rbh1rieb3zc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAndroid Dev[12 Hr]- https://www.youtube.com/watch?v=mXjZQX3UzOs\nLinux[1 Hr]:https://www.youtube.com/watch?v=_tCY-c-sPZc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJQuery[1.1 Hr]:https://www.youtube.com/watch?v=YFlx1C8XwR0&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nGit and GitHub[1.1 Hr]:https://www.youtube.com/watch?v=gwWKnnCMQ5c&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\n\n►Complete course [playlist]:\nReact: https://www.youtube.com/playlist?list=PLu0W_9lII9agx66oZnT6IyhcMIbUMNMdt\nPython-https://www.youtube.com/playlist?list=PLu0W_9lII9agICnT8t4iYVSZ3eykIAOME\nOOP Python-https://www.youtube.com/playlist?list=PLu0W_9lII9ahfRrhFcoB-4lpp9YaBmdCP\nJava:https://www.youtube.com/playlist?list=PLu0W_9lII9agS67Uits0UnJyrYiXhDS6q\nJavaScript- https://www.youtube.com/playlist?list=PLu0W_9lII9ajyk081To1Cbt2eI5913SsL\nPHP-https://www.youtube.com/playlist?list=PLu0W_9lII9aikXkRE0WxDt1vozo3hnmtR\nC-https://www.youtube.com/playlist?list=PLu0W_9lII9aiXlHcLx-mDH1Qul38wD3aR\nC++-https://www.youtube.com/playlist?list=PLu0W_9lII9agpFUAlPFe_VNSlXW5uE0YL\nGit & GitHub-https://www.youtube.com/playlist?list=PLu0W_9lII9ahVQekD7ePHmnirTePXwIln\nAndroid Dev- https://www.youtube.com/playlist?list=PLu0W_9lII9aiL0kysYlfSOUgY5rNlOhUd\nPython GUI- https://www.youtube.com/playlist?list=PLu0W_9lII9ajLcqRcj4PoEihkukF_OTzA\nWeb Development- https://www.youtube.com/playlist?list=PLu0W_9lII9agiCUZYRsvtGTXdxkzPyItg\nPython Django:https://www.youtube.com/playlist?list=PLu0W_9lII9ah7DDtYtflgwMwpT3xmjXY9\nProjects Using HTML, CSS & Javascript- https://www.youtube.com/playlist?list=PLu0W_9lII9aiQiOwthuSvinxoflmhRxM3\nData Structure and Algo:https://www.youtube.com/playlist?list=PLu0W_9lII9ahIappRPN0MCAgtOu3lQjQi \n\nFollow Me On Social Media\n►Website (created using Django Rest & Angular): https://www.codewithharry.com\n►Facebook: https://www.facebook.com/CodeWithHarry\n►Instagram: https://www.instagram.com/codewithharry/ \nTwitter: https://twitter.com/CodeWithHarry\nComment \"#HarryBhai\" if you read this 😉😉"
        },
        "defaultAudioLanguage": "hi"
      },
      "contentDetails": {
        "duration": "PT12M25S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "106322",
        "likeCount": "3553",
        "favoriteCount": "0",
        "commentCount": "308"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "2Yt3KMC_tf_1rIJwDR37r4mOe9U",
      "id": "r8nXMA_pf0w",
      "snippet": {
        "publishedAt": "2023-09-15T11:15:39Z",
        "channelId": "UCmXmlB4-HJytD7wek0Uo97A",
        "title": "Next.js isn't React",
        "description": "⭐ Ultimate Next 14 Course: https://www.jsmastery.pro/next15\n\nWhile you're waiting for the course launch, watch:\n🎥 Next.js 14 Crash Course: https://www.youtube.com/watch?v=wm5gMKuwSYk\n🎥 Next.js 14 Threads Clone: https://www.youtube.com/watch?v=O5cmLDVTgAs\n\n💼 New Masterclass Cohort starts soon! Land your dream job in a project-based bootcamp with expert mentor feedback, code reviews, and career prep. To find out more, apply here: https://jsmastery.pro/masterclass\n\n💻 Join our Discord Community - https://discord.gg/n6EdbFJ\n🐦 Follow us on Twitter: https://twitter.com/jsmasterypro\n🖼 Follow us on Instagram: https://instagram.com/javascriptmastery\n\n💼 Business Inquiries: contact@jsmastery.pro",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/r8nXMA_pf0w/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/r8nXMA_pf0w/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/r8nXMA_pf0w/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/r8nXMA_pf0w/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/r8nXMA_pf0w/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "JavaScript Mastery",
        "tags": [
          "javascript",
          "javascript mastery",
          "js mastery",
          "master javascript",
          "nextjs",
          "next js",
          "next.js",
          "nextjs 13",
          "next.js 13",
          "react vs nextjs",
          "nextjs 13 app",
          "nextjs course"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Next.js isn't React",
          "description": "⭐ Ultimate Next 14 Course: https://www.jsmastery.pro/next15\n\nWhile you're waiting for the course launch, watch:\n🎥 Next.js 14 Crash Course: https://www.youtube.com/watch?v=wm5gMKuwSYk\n🎥 Next.js 14 Threads Clone: https://www.youtube.com/watch?v=O5cmLDVTgAs\n\n💼 New Masterclass Cohort starts soon! Land your dream job in a project-based bootcamp with expert mentor feedback, code reviews, and career prep. To find out more, apply here: https://jsmastery.pro/masterclass\n\n💻 Join our Discord Community - https://discord.gg/n6EdbFJ\n🐦 Follow us on Twitter: https://twitter.com/jsmasterypro\n🖼 Follow us on Instagram: https://instagram.com/javascriptmastery\n\n💼 Business Inquiries: contact@jsmastery.pro"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT17M11S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "295901",
        "likeCount": "9330",
        "favoriteCount": "0",
        "commentCount": "517"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "TVnQjweB4yC84dvluqswn7on6YU",
      "id": "oWUQQD97Rz0",
      "snippet": {
        "publishedAt": "2023-08-16T07:57:34Z",
        "channelId": "UCW5YeuERMmlnqo4oq8vwUpg",
        "title": "Next.js 13 Crash Course Tutorial #5 - Styles, Fonts & Images",
        "description": "In this Next 13 tutorial series, you'll learn the basics of Next.js to make a simple project, using the new app router & server components.\n\n🚀🥷🏼Access the entire Next.js 13 Masterclass course on Net Ninja Pro:\nhttps://netninja.dev/p/next-13-masterclass\n➡️ Use promo code NEXTNINJA50 for 50% off!\n\n📂🥷🏼 Access the course files on GitHub:\nhttps://github.com/iamshaunjp/nextjs-masterclass\n\n📂🥷🏼 CSS File from course files:\nhttps://github.com/iamshaunjp/nextjs-masterclass/blob/lesson-43/app/globals.css\n\n💻🥷🏼 React Tutorial:\nhttps://netninja.dev/p/build-websites-with-react-firebase\n\n🔗🥷🏼 Next.js docs - https://nextjs.org/docs\n🔗🥷🏼 CSS modules in Next.js - https://nextjs.org/docs/app/building-your-application/styling/css-modules\n🔗🥷🏼 VS Code - https://code.visualstudio.com/",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/oWUQQD97Rz0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/oWUQQD97Rz0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/oWUQQD97Rz0/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/oWUQQD97Rz0/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/oWUQQD97Rz0/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Net Ninja",
        "tags": [
          "next",
          "next.js",
          "next 13",
          "next js",
          "next js 13",
          "next.js 13",
          "next 13 tutorial",
          "next.js tutorial",
          "next js tutorial",
          "next js 13 tutorial",
          "tutorial",
          "crash course",
          "next js crash course",
          "next 13 crash course",
          "next.js crash course"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Next.js 13 Crash Course Tutorial #5 - Styles, Fonts & Images",
          "description": "In this Next 13 tutorial series, you'll learn the basics of Next.js to make a simple project, using the new app router & server components.\n\n🚀🥷🏼Access the entire Next.js 13 Masterclass course on Net Ninja Pro:\nhttps://netninja.dev/p/next-13-masterclass\n➡️ Use promo code NEXTNINJA50 for 50% off!\n\n📂🥷🏼 Access the course files on GitHub:\nhttps://github.com/iamshaunjp/nextjs-masterclass\n\n📂🥷🏼 CSS File from course files:\nhttps://github.com/iamshaunjp/nextjs-masterclass/blob/lesson-43/app/globals.css\n\n💻🥷🏼 React Tutorial:\nhttps://netninja.dev/p/build-websites-with-react-firebase\n\n🔗🥷🏼 Next.js docs - https://nextjs.org/docs\n🔗🥷🏼 CSS modules in Next.js - https://nextjs.org/docs/app/building-your-application/styling/css-modules\n🔗🥷🏼 VS Code - https://code.visualstudio.com/"
        },
        "defaultAudioLanguage": "en-GB"
      },
      "contentDetails": {
        "duration": "PT13M44S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "44352",
        "likeCount": "823",
        "favoriteCount": "0",
        "commentCount": "36"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "ysENA-lEZxWIwxAWStAogQSknV4",
      "id": "CLG0ha_a0q8",
      "snippet": {
        "publishedAt": "2022-09-06T13:30:01Z",
        "channelId": "UCnVezmyf4aAU8KqlkUPQ28g",
        "title": "Postman API Testing Tutorial | Postman Tutorial For Beginners 2025",
        "description": "🚀 Special Discount for Node JS Full Course: https://www.udemy.com/course/the-ultimate-nodejs-course-2025-express-mongodb-rest-apis/?couponCode=D7A93439978A729EE499\n\n💙React JS Full Course: https://www.udemy.com/course/the-ultimate-react-course-2023-w-real-world-projects/?referralCode=993CD544A6816303D3AD\n\nPOSTMAN is one of the most used tool for testing API. In this tutorial, you will learn all the basics of Postman software which will help you to test different API. How to send GET, POST, PUT, DELETE requests, how to use query parameters, how to send files for testing and a lot of things.\n\nImportant Links\nPOSTMAN : http://postman.com\nAPI Links : https://github.com/vdespa/introduction-to-postman-course/blob/main/simple-books-api.md\nRapid API Client : https://marketplace.visualstudio.com/items?itemName=RapidAPI.vscode-rapidapi-client&ssr=false#overview \n\n🚀Access REDUX Course:- https://www.udemy.com/course/the-ultimate-redux-course-state-management-library/?referralCode=0E6517D629498E1C48D7 \n\nSocial Media Links:\n🚀COURSES : https://www.udemy.com/user/code-bless-you/\n🤩INSTAGRAM : https://www.instagram.com/code_blessyou/\n💙FACEBOOK : https://www.facebook.com/people/CB-You/100077716056158/\n🐦TWITTER : https://twitter.com/Code_BlessYou\n😎LINKEDIN : https://www.linkedin.com/in/code-bless-you-5b76822b\n\nCopywrite Content\nIcon by Dry icons : https://dryicons.com/icon/multiple-files-icon-6244 \nSound Effect from : https://pixabay.com/sound-effects/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=music&amp;utm_content=14678\n\nTags\napi testing,Postman api testing tutorial,postman tutorial,how to use postman,api testing using postman,api testing with postman,how to use postman for api testing,postman tutorial for beginners,what is postman,using postman for api testing,postman,postman api testing,postman beginner tutorial,rest api,Postman Api Testing,api testing postman tutorial,api testing postman,api testing postman explained,postman tutorials for beginners\n\nPostman Beginners Crash Course - Part 1 | API Testing | Introduction | Postman GUI | HTTP Requests Postman Beginner's Course - API Testing Postman For Beginners (API Testing) Postman Beginner Tutorial 2022 \nAPI Testing Using Postman: Part 1 ( What is an API? )",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/CLG0ha_a0q8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/CLG0ha_a0q8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/CLG0ha_a0q8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/CLG0ha_a0q8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/CLG0ha_a0q8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Code Bless You",
        "tags": [
          "code bless you",
          "api testing",
          "Postman api testing tutorial",
          "postman tutorial",
          "how to use postman",
          "api testing using postman",
          "api testing with postman",
          "how to use postman for api testing",
          "postman tutorial for beginners",
          "what is postman",
          "using postman for api testing",
          "postman",
          "postman api testing",
          "postman beginner tutorial",
          "rest api",
          "Postman Api Testing",
          "api testing postman tutorial",
          "api testing postman",
          "api testing postman explained",
          "postman tutorials for beginners",
          "postman api"
        ],
        "categoryId": "22",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Postman API Testing Tutorial | Postman Tutorial For Beginners 2025",
          "description": "🚀 Special Discount for Node JS Full Course: https://www.udemy.com/course/the-ultimate-nodejs-course-2025-express-mongodb-rest-apis/?couponCode=D7A93439978A729EE499\n\n💙React JS Full Course: https://www.udemy.com/course/the-ultimate-react-course-2023-w-real-world-projects/?referralCode=993CD544A6816303D3AD\n\nPOSTMAN is one of the most used tool for testing API. In this tutorial, you will learn all the basics of Postman software which will help you to test different API. How to send GET, POST, PUT, DELETE requests, how to use query parameters, how to send files for testing and a lot of things.\n\nImportant Links\nPOSTMAN : http://postman.com\nAPI Links : https://github.com/vdespa/introduction-to-postman-course/blob/main/simple-books-api.md\nRapid API Client : https://marketplace.visualstudio.com/items?itemName=RapidAPI.vscode-rapidapi-client&ssr=false#overview \n\n🚀Access REDUX Course:- https://www.udemy.com/course/the-ultimate-redux-course-state-management-library/?referralCode=0E6517D629498E1C48D7 \n\nSocial Media Links:\n🚀COURSES : https://www.udemy.com/user/code-bless-you/\n🤩INSTAGRAM : https://www.instagram.com/code_blessyou/\n💙FACEBOOK : https://www.facebook.com/people/CB-You/100077716056158/\n🐦TWITTER : https://twitter.com/Code_BlessYou\n😎LINKEDIN : https://www.linkedin.com/in/code-bless-you-5b76822b\n\nCopywrite Content\nIcon by Dry icons : https://dryicons.com/icon/multiple-files-icon-6244 \nSound Effect from : https://pixabay.com/sound-effects/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=music&amp;utm_content=14678\n\nTags\napi testing,Postman api testing tutorial,postman tutorial,how to use postman,api testing using postman,api testing with postman,how to use postman for api testing,postman tutorial for beginners,what is postman,using postman for api testing,postman,postman api testing,postman beginner tutorial,rest api,Postman Api Testing,api testing postman tutorial,api testing postman,api testing postman explained,postman tutorials for beginners\n\nPostman Beginners Crash Course - Part 1 | API Testing | Introduction | Postman GUI | HTTP Requests Postman Beginner's Course - API Testing Postman For Beginners (API Testing) Postman Beginner Tutorial 2022 \nAPI Testing Using Postman: Part 1 ( What is an API? )"
        },
        "defaultAudioLanguage": "en-IN"
      },
      "contentDetails": {
        "duration": "PT8M30S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "911472",
        "likeCount": "9853",
        "favoriteCount": "0",
        "commentCount": "364"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "3wx4-hXCaBQ5VHuBzkDd876dvw8",
      "id": "nresBvpaVH0",
      "snippet": {
        "publishedAt": "2021-11-13T11:30:07Z",
        "channelId": "UCeVMnSShP_Iviwkknt83cww",
        "title": "NextJs in 7 Minutes 🔥",
        "description": "Python Udemy Course: https://goharry.in/python\nGet this course at 90% Discount if you use this link\n\nNextJs tutorial: In this nextjs introductory video, I will walk you through what next js is about and why you might want to consider it for your next production website!\nAll the source code and other material will be uploaded on https://codewithharry.com as and when available!\nTimeStamps ⌚\n00:00 - Introduction\n00:14 - Why Big Companies Use NextJs\n00:46 - Downsides of React \n01:39 - NextJs Solves This Big Problem\n02:06 - Features of NextJS\n02:10 - First Feature\n02:51 - Second Feature\n02:59 - Third Feature (Most Important Feature)\n04:00 - CDN and VPS\n06:21 - Rust Compiler\n06:30 - Final Note\n►Checkout my English channel here: https://www.youtube.com/channel/UC7btqG2Ww0_2LwuQxpvo2HQ\n►Instagram: www.instagram.com/codewithharry\n\npython, C, C++, Java, JavaScript and Other Cheetsheets [++]:\nPlaylist: https://www.youtube.com/playlist?list=PLu0W_9lII9agrsRZjFECeFuWY5ev2pQlk\n\n►Learn in One Video[++]:\nPython[15 Hr] - https://www.youtube.com/watch?v=gfDE2a7MKjA&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython Advance[3.5 Hr] - https://www.youtube.com/watch?v=61a7UkDO50s&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[1 Hr] - https://www.youtube.com/watch?v=qHJjMvHLJdg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[2 Hr] - https://www.youtube.com/watch?v=ihk_Xglr164&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[15 Min] -https://www.youtube.com/watch?v=fr1f84rg4Nw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJavaScript[1 Hr] - https://www.youtube.com/watch?v=onbBV0uFVpo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nC[1.3 Hr]-https://www.youtube.com/watch?v=YXcgD8hRHYY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[1 Hr] - https://www.youtube.com/watch?v=xW7ro3lwaCI&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[2.3 Hr] -https://www.youtube.com/watch?v=1SnPKhCdlsU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[Project]- https://www.youtube.com/watch?v=-al2bECumKg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nHTML[30 Min] -https://www.youtube.com/watch?v=E3ByCRqE7Lo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[8.5 Hr] -https://www.youtube.com/watch?v=Edsxf_NBFrw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[1.4 Hr] -https://www.youtube.com/watch?v=u5-K_ua9sOw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWordpress[3.2 Hr] -https://www.youtube.com/watch?v=GlLRYml8mCY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAngular[2 Hr] -https://www.youtube.com/watch?v=0LhBvp8qpro&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJava[2.3 Hr] -https://www.youtube.com/watch?v=rV_3Lewxx6o&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWeb Scraping[1 Hr] -https://www.youtube.com/watch?v=uufDGjTuq34&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nMongoDB[2 Hr] -https://www.youtube.com/watch?v=oSIv-E60NiU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nNumpy[1 Hr] -https://www.youtube.com/watch?v=Rbh1rieb3zc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAndroid Dev[12 Hr]- https://www.youtube.com/watch?v=mXjZQX3UzOs\nLinux[1 Hr] -https://www.youtube.com/watch?v=_tCY-c-sPZc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJQuery[1.1 Hr] -https://www.youtube.com/watch?v=YFlx1C8XwR0&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nGit and GitHub[1.1 Hr] -https://www.youtube.com/watch?v=gwWKnnCMQ5c&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\n\n►Complete course [playlist]:\nReact - https://www.youtube.com/playlist?list=PLu0W_9lII9agx66oZnT6IyhcMIbUMNMdt\nPython-https://www.youtube.com/playlist?list=PLu0W_9lII9agICnT8t4iYVSZ3eykIAOME\nOOP Python-https://www.youtube.com/playlist?list=PLu0W_9lII9ahfRrhFcoB-4lpp9YaBmdCP\nJava -https://www.youtube.com/playlist?list=PLu0W_9lII9agS67Uits0UnJyrYiXhDS6q\nJavaScript- https://www.youtube.com/playlist?list=PLu0W_9lII9ajyk081To1Cbt2eI5913SsL\nPHP-https://www.youtube.com/playlist?list=PLu0W_9lII9aikXkRE0WxDt1vozo3hnmtR\nC-https://www.youtube.com/playlist?list=PLu0W_9lII9aiXlHcLx-mDH1Qul38wD3aR\nC++-https://www.youtube.com/playlist?list=PLu0W_9lII9agpFUAlPFe_VNSlXW5uE0YL\nGit & GitHub-https://www.youtube.com/playlist?list=PLu0W_9lII9ahVQekD7ePHmnirTePXwIln\nAndroid Dev- https://www.youtube.com/playlist?list=PLu0W_9lII9aiL0kysYlfSOUgY5rNlOhUd\nPython GUI- https://www.youtube.com/playlist?list=PLu0W_9lII9ajLcqRcj4PoEihkukF_OTzA\nWeb Development- https://www.youtube.com/playlist?list=PLu0W_9lII9agiCUZYRsvtGTXdxkzPyItg\nPython Django -https://www.youtube.com/playlist?list=PLu0W_9lII9ah7DDtYtflgwMwpT3xmjXY9\nProjects Using HTML, CSS & Javascript- https://www.youtube.com/playlist?list=PLu0W_9lII9aiQiOwthuSvinxoflmhRxM3\nData Structure and Algo -https://www.youtube.com/playlist?list=PLu0W_9lII9ahIappRPN0MCAgtOu3lQjQi \n\nFollow Me On Social Media\n►Website (created using Django Rest & Angular) - https://www.codewithharry.com\n►Facebook - https://www.facebook.com/CodeWithHarry\n►Instagram - https://www.instagram.com/codewithharry/ \nTwitter - https://twitter.com/Haris_Is_Here\nComment \"#HarryBhai\" if you read this 😉😉",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/nresBvpaVH0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/nresBvpaVH0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/nresBvpaVH0/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/nresBvpaVH0/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/nresBvpaVH0/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "CodeWithHarry",
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "NextJs in 7 Minutes 🔥",
          "description": "Python Udemy Course: https://goharry.in/python\nGet this course at 90% Discount if you use this link\n\nNextJs tutorial: In this nextjs introductory video, I will walk you through what next js is about and why you might want to consider it for your next production website!\nAll the source code and other material will be uploaded on https://codewithharry.com as and when available!\nTimeStamps ⌚\n00:00 - Introduction\n00:14 - Why Big Companies Use NextJs\n00:46 - Downsides of React \n01:39 - NextJs Solves This Big Problem\n02:06 - Features of NextJS\n02:10 - First Feature\n02:51 - Second Feature\n02:59 - Third Feature (Most Important Feature)\n04:00 - CDN and VPS\n06:21 - Rust Compiler\n06:30 - Final Note\n►Checkout my English channel here: https://www.youtube.com/channel/UC7btqG2Ww0_2LwuQxpvo2HQ\n►Instagram: www.instagram.com/codewithharry\n\npython, C, C++, Java, JavaScript and Other Cheetsheets [++]:\nPlaylist: https://www.youtube.com/playlist?list=PLu0W_9lII9agrsRZjFECeFuWY5ev2pQlk\n\n►Learn in One Video[++]:\nPython[15 Hr] - https://www.youtube.com/watch?v=gfDE2a7MKjA&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython Advance[3.5 Hr] - https://www.youtube.com/watch?v=61a7UkDO50s&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[1 Hr] - https://www.youtube.com/watch?v=qHJjMvHLJdg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[2 Hr] - https://www.youtube.com/watch?v=ihk_Xglr164&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nPython[15 Min] -https://www.youtube.com/watch?v=fr1f84rg4Nw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJavaScript[1 Hr] - https://www.youtube.com/watch?v=onbBV0uFVpo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nC[1.3 Hr]-https://www.youtube.com/watch?v=YXcgD8hRHYY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[1 Hr] - https://www.youtube.com/watch?v=xW7ro3lwaCI&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[2.3 Hr] -https://www.youtube.com/watch?v=1SnPKhCdlsU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nphp[Project]- https://www.youtube.com/watch?v=-al2bECumKg&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nHTML[30 Min] -https://www.youtube.com/watch?v=E3ByCRqE7Lo&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[8.5 Hr] -https://www.youtube.com/watch?v=Edsxf_NBFrw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nCSS[1.4 Hr] -https://www.youtube.com/watch?v=u5-K_ua9sOw&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWordpress[3.2 Hr] -https://www.youtube.com/watch?v=GlLRYml8mCY&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAngular[2 Hr] -https://www.youtube.com/watch?v=0LhBvp8qpro&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJava[2.3 Hr] -https://www.youtube.com/watch?v=rV_3Lewxx6o&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nWeb Scraping[1 Hr] -https://www.youtube.com/watch?v=uufDGjTuq34&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nMongoDB[2 Hr] -https://www.youtube.com/watch?v=oSIv-E60NiU&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nNumpy[1 Hr] -https://www.youtube.com/watch?v=Rbh1rieb3zc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nAndroid Dev[12 Hr]- https://www.youtube.com/watch?v=mXjZQX3UzOs\nLinux[1 Hr] -https://www.youtube.com/watch?v=_tCY-c-sPZc&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nJQuery[1.1 Hr] -https://www.youtube.com/watch?v=YFlx1C8XwR0&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\nGit and GitHub[1.1 Hr] -https://www.youtube.com/watch?v=gwWKnnCMQ5c&list=PLu0W_9lII9ahKZ42vg2w9ERPmShYbYAB7\n\n►Complete course [playlist]:\nReact - https://www.youtube.com/playlist?list=PLu0W_9lII9agx66oZnT6IyhcMIbUMNMdt\nPython-https://www.youtube.com/playlist?list=PLu0W_9lII9agICnT8t4iYVSZ3eykIAOME\nOOP Python-https://www.youtube.com/playlist?list=PLu0W_9lII9ahfRrhFcoB-4lpp9YaBmdCP\nJava -https://www.youtube.com/playlist?list=PLu0W_9lII9agS67Uits0UnJyrYiXhDS6q\nJavaScript- https://www.youtube.com/playlist?list=PLu0W_9lII9ajyk081To1Cbt2eI5913SsL\nPHP-https://www.youtube.com/playlist?list=PLu0W_9lII9aikXkRE0WxDt1vozo3hnmtR\nC-https://www.youtube.com/playlist?list=PLu0W_9lII9aiXlHcLx-mDH1Qul38wD3aR\nC++-https://www.youtube.com/playlist?list=PLu0W_9lII9agpFUAlPFe_VNSlXW5uE0YL\nGit & GitHub-https://www.youtube.com/playlist?list=PLu0W_9lII9ahVQekD7ePHmnirTePXwIln\nAndroid Dev- https://www.youtube.com/playlist?list=PLu0W_9lII9aiL0kysYlfSOUgY5rNlOhUd\nPython GUI- https://www.youtube.com/playlist?list=PLu0W_9lII9ajLcqRcj4PoEihkukF_OTzA\nWeb Development- https://www.youtube.com/playlist?list=PLu0W_9lII9agiCUZYRsvtGTXdxkzPyItg\nPython Django -https://www.youtube.com/playlist?list=PLu0W_9lII9ah7DDtYtflgwMwpT3xmjXY9\nProjects Using HTML, CSS & Javascript- https://www.youtube.com/playlist?list=PLu0W_9lII9aiQiOwthuSvinxoflmhRxM3\nData Structure and Algo -https://www.youtube.com/playlist?list=PLu0W_9lII9ahIappRPN0MCAgtOu3lQjQi \n\nFollow Me On Social Media\n►Website (created using Django Rest & Angular) - https://www.codewithharry.com\n►Facebook - https://www.facebook.com/CodeWithHarry\n►Instagram - https://www.instagram.com/codewithharry/ \nTwitter - https://twitter.com/Haris_Is_Here\nComment \"#HarryBhai\" if you read this 😉😉"
        },
        "defaultAudioLanguage": "hi"
      },
      "contentDetails": {
        "duration": "PT6M56S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "true",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "381237",
        "likeCount": "11771",
        "favoriteCount": "0",
        "commentCount": "483"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "DvsZ5Lh1G-lGdpVjnuxhMRz1sxI",
      "id": "s2skans2dP4",
      "snippet": {
        "publishedAt": "2021-11-06T23:57:09Z",
        "channelId": "UCTZRcDjjkVajGL6wd76UnGg",
        "title": "React JS Explained In 10 Minutes",
        "description": "A list of the core concepts every React developer should have a solid grasp on.\n\nReact Course: https://dennisivy.teachable.com/p/react-notes-app-crash-course\n\nDjango + React Ecommerce Website:\nhttps://www.udemy.com/course/django-with-react-an-ecommerce-website/learn/lecture/24875160?referralCode=08CC1EF9068747827E19#overview\n\nFollow me on twitter for more personalized content:\nhttps://twitter.com/dennisivy11",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/s2skans2dP4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/s2skans2dP4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/s2skans2dP4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/s2skans2dP4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/s2skans2dP4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Dennis Ivy",
        "tags": [
          "Programming",
          "Software Developer",
          "Dennis Ivy",
          "Dennis Ivanov"
        ],
        "categoryId": "24",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "React JS Explained In 10 Minutes",
          "description": "A list of the core concepts every React developer should have a solid grasp on.\n\nReact Course: https://dennisivy.teachable.com/p/react-notes-app-crash-course\n\nDjango + React Ecommerce Website:\nhttps://www.udemy.com/course/django-with-react-an-ecommerce-website/learn/lecture/24875160?referralCode=08CC1EF9068747827E19#overview\n\nFollow me on twitter for more personalized content:\nhttps://twitter.com/dennisivy11"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT10M",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "624161",
        "likeCount": "17749",
        "favoriteCount": "0",
        "commentCount": "265"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "5v4VDrmuEkdkmEH5aUy1xgQV7oU",
      "id": "Sklc_fQBmcs",
      "snippet": {
        "publishedAt": "2021-01-05T17:33:17Z",
        "channelId": "UCsBjURrPoezykLs9EqgamOA",
        "title": "Next.js in 100 Seconds // Plus Full Beginner's Tutorial",
        "description": "Learn the basics of Next.js in 100 Seconds! Then build your first server-rendered react app with a full Next.js beginner's tutorial. https://fireship.io/courses/react-next-firebase\n\n#react #webdev #100SecondsOfCode\n\nNext.js Docs https://nextjs.org/\nSource Code https://github.com/fireship-io/nextjs-basics\n\nInstall the quiz app 🤓\n\niOS https://itunes.apple.com/us/app/fireship/id1462592372?mt=8\nAndroid https://play.google.com/store/apps/details?id=io.fireship.quizapp\n\nUpgrade to Fireship PRO at https://fireship.io/pro\nUse code lORhwXd2 for 25% off your first payment. \n\nMy VS Code Theme\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/Sklc_fQBmcs/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/Sklc_fQBmcs/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/Sklc_fQBmcs/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/Sklc_fQBmcs/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/Sklc_fQBmcs/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Fireship",
        "tags": [
          "webdev",
          "app development",
          "lesson",
          "tutorial"
        ],
        "categoryId": "28",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Next.js in 100 Seconds // Plus Full Beginner's Tutorial",
          "description": "Learn the basics of Next.js in 100 Seconds! Then build your first server-rendered react app with a full Next.js beginner's tutorial. https://fireship.io/courses/react-next-firebase\n\n#react #webdev #100SecondsOfCode\n\nNext.js Docs https://nextjs.org/\nSource Code https://github.com/fireship-io/nextjs-basics\n\nInstall the quiz app 🤓\n\niOS https://itunes.apple.com/us/app/fireship/id1462592372?mt=8\nAndroid https://play.google.com/store/apps/details?id=io.fireship.quizapp\n\nUpgrade to Fireship PRO at https://fireship.io/pro\nUse code lORhwXd2 for 25% off your first payment. \n\nMy VS Code Theme\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT11M52S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "1415960",
        "likeCount": "36813",
        "favoriteCount": "0",
        "commentCount": "640"
      }
    }
  ],
  "pageInfo": {
    "totalResults": 10,
    "resultsPerPage": 10
  }
}
","status":200,"url":"https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=xnOwOBYaA3w%2Cb4ba60j_4o8%2C2JnEq3ZmLH0%2C6XVaVITFOgY%2Cr8nXMA_pf0w%2CoWUQQD97Rz0%2CCLG0ha_a0q8%2CnresBvpaVH0%2Cs2skans2dP4%2CSklc_fQBmcs&key=AIzaSyAeZAsOW2kBeNqsdozdSNpajJeUOXsJ2fs"},"revalidate":3600,"tags":[]}