{"kind":"FETCH","data":{"headers":{"content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Thu, 23 Oct 2025 11:03:37 GMT","server":"scaffolding on HTTPServer2","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"","status":200,"url":"https://www.googleapis.com/youtube/v3/search?part=snippet&q=react+native+complete+course+english+tutorial+course+complete+%28%22Programming+with+Mosh%22+OR+%22Bro+Code%22+OR+%22freeCodeCamp.org%22+OR+%22Traversy+Media%22+OR+%22Net+Ninja%22%29&type=video&videoDuration=medium&videoDefinition=high&relevanceLanguage=en&order=relevance&maxResults=15&key=AIzaSyAeZAsOW2kBeNqsdozdSNpajJeUOXsJ2fs"},"revalidate":3600,"tags":[]}