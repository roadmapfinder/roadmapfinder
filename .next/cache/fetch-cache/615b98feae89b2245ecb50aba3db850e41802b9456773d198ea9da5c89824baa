{"kind":"FETCH","data":{"headers":{"content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Thu, 23 Oct 2025 11:03:37 GMT","server":"scaffolding on HTTPServer2","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "youtube#videoListResponse",
  "etag": "AqpvIYp9bJLxCAK035Lv0okLMA0",
  "items": [
    {
      "kind": "youtube#video",
      "etag": "nD1xjxBWiWnXkoqQltC3VHCd5PA",
      "id": "uxZZzmeCoLE",
      "snippet": {
        "publishedAt": "2020-07-14T12:45:10Z",
        "channelId": "UCWv7vMbMWH4-V0ZXdmDpPBA",
        "title": "Flutter vs React Native - Will Flutter Kill React Native?",
        "description": "Flutter vs React Native - What should you learn to get a mobile development job in 2020? This video explains it in 5 minutes. \n🚀 React Native tutorial for beginners: https://youtu.be/0-S5a0eXPoc\n👍 Subscribe for more React Native tutorials like this: https://goo.gl/6PYaGF\n\nWant to learn more from me? Check out my blog and courses: \n\nCourses: https://codewithmosh.com\nBlog: https://programmingwithmosh.com \nFacebook: https://www.facebook.com/programmingwithmosh\nTwitter: https://twitter.com/moshhamedani",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/uxZZzmeCoLE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/uxZZzmeCoLE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/uxZZzmeCoLE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/uxZZzmeCoLE/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/uxZZzmeCoLE/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Programming with Mosh",
        "tags": [
          "flutter vs react native",
          "react native",
          "react",
          "flutter",
          "flutter vs react native 2020",
          "programming with mosh",
          "code with mosh",
          "mosh hamedani",
          "mobile development",
          "app development",
          "programming"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Flutter vs React Native - Will Flutter Kill React Native?",
          "description": "Flutter vs React Native - What should you learn to get a mobile development job in 2020? This video explains it in 5 minutes. \n🚀 React Native tutorial for beginners: https://youtu.be/0-S5a0eXPoc\n👍 Subscribe for more React Native tutorials like this: https://goo.gl/6PYaGF\n\nWant to learn more from me? Check out my blog and courses: \n\nCourses: https://codewithmosh.com\nBlog: https://programmingwithmosh.com \nFacebook: https://www.facebook.com/programmingwithmosh\nTwitter: https://twitter.com/moshhamedani"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT4M50S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "420630",
        "likeCount": "11873",
        "favoriteCount": "0",
        "commentCount": "952"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "vBEvjjosFBraEqVxKEiwtDy-2j8",
      "id": "yye7rSsiV6k",
      "snippet": {
        "publishedAt": "2024-07-04T13:01:03Z",
        "channelId": "UCWv7vMbMWH4-V0ZXdmDpPBA",
        "title": "The Complete App Development Roadmap",
        "description": "Go from zero to a mobile app developer in 12 months. This step-by-step roadmap covers the essential skills and latest technologies to become an app developer. \n\n❤️ Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\nDownload the FREE roadmap PDF here: https://mosh.link/mobile-roadmap\n\n✋ Stay connected\n\n- Complete courses: https://codewithmosh.com\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n🔗 Other roadmaps\n\nhttps://youtu.be/Tef1e9FiSR0?si=QpVnZ_o9-DAXzT71\nhttps://youtu.be/OeEHJgzqS1k?si=qd0ZIqAzUpZQn6BX\n\n📚 Tutorials \n\nhttps://youtu.be/W6NZfCO5SIk?si=yS0lQXyy3qwQF3DA\nhttps://youtu.be/8JJ101D3knE?si=OGTuS35LQqSunuhh\nhttps://youtu.be/BBpAmxU_NQo?si=dm-ZCPxVBYWS1Qhn\nhttps://youtu.be/NU_1StN5Tkk?si=gsMONPdgxouQOolu\nhttps://youtu.be/SqcY0GlETPk?si=O93IXejTVuh_5cbY\nhttps://youtu.be/0-S5a0eXPoc?si=yP7qia07NN2FMeS2\n\n\n📖 Chapters\n\n00:00 - Introduction\n00:08 - Native vs Cross-platform Development\n04:08 - Languages\n04:57 - Version control (Git)\n05:25 - Data structures & algorithms \n06:12 - Design patterns \n07:14 - Mobile frameworks\n\n#appdevelopment #coding #programming",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/yye7rSsiV6k/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/yye7rSsiV6k/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/yye7rSsiV6k/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/yye7rSsiV6k/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/yye7rSsiV6k/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Programming with Mosh",
        "tags": [
          "app development roadmap",
          "app development",
          "react native",
          "flutter",
          "android app development",
          "ios app development",
          "programming",
          "programming with mosh",
          "code with mosh",
          "mosh hamedani",
          "how to make an app",
          "coding",
          "flutter app development",
          "mobile development",
          "should i use flutter"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "The Complete App Development Roadmap",
          "description": "Go from zero to a mobile app developer in 12 months. This step-by-step roadmap covers the essential skills and latest technologies to become an app developer. \n\n❤️ Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\nDownload the FREE roadmap PDF here: https://mosh.link/mobile-roadmap\n\n✋ Stay connected\n\n- Complete courses: https://codewithmosh.com\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n🔗 Other roadmaps\n\nhttps://youtu.be/Tef1e9FiSR0?si=QpVnZ_o9-DAXzT71\nhttps://youtu.be/OeEHJgzqS1k?si=qd0ZIqAzUpZQn6BX\n\n📚 Tutorials \n\nhttps://youtu.be/W6NZfCO5SIk?si=yS0lQXyy3qwQF3DA\nhttps://youtu.be/8JJ101D3knE?si=OGTuS35LQqSunuhh\nhttps://youtu.be/BBpAmxU_NQo?si=dm-ZCPxVBYWS1Qhn\nhttps://youtu.be/NU_1StN5Tkk?si=gsMONPdgxouQOolu\nhttps://youtu.be/SqcY0GlETPk?si=O93IXejTVuh_5cbY\nhttps://youtu.be/0-S5a0eXPoc?si=yP7qia07NN2FMeS2\n\n\n📖 Chapters\n\n00:00 - Introduction\n00:08 - Native vs Cross-platform Development\n04:08 - Languages\n04:57 - Version control (Git)\n05:25 - Data structures & algorithms \n06:12 - Design patterns \n07:14 - Mobile frameworks\n\n#appdevelopment #coding #programming"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT7M52S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "1186735",
        "likeCount": "27668",
        "favoriteCount": "0",
        "commentCount": "707"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "hdJdwKxdXllNRGa6Vkj8wD-e04I",
      "id": "NClmyC6olC0",
      "snippet": {
        "publishedAt": "2025-01-22T12:30:18Z",
        "channelId": "UCWv7vMbMWH4-V0ZXdmDpPBA",
        "title": "Top Programming Languages to Learn in 2025",
        "description": "Want to future-proof your coding skills? Discover the top programming languages that will dominate in 2025, with real-world use cases and career insights. Don’t miss out—stay ahead in tech!\n\n❤️ Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\n🔗 Tutorials \nhttps://youtu.be/_uQrJ0TkZlc?si=PlSZ9OJl2sku4sIH\nhttps://youtu.be/kqtD5dpn9C8?si=tr53YlfyrMqsi_RF\nhttps://youtu.be/eIrMbAQSU34?si=n1fSY_7d96rzzomX\nhttps://youtu.be/W6NZfCO5SIk?si=uaOUNhKhr2dOySV2\nhttps://youtu.be/d56mG7DezGs?si=Kpc4FFmYOWKvpPIc\nhttps://youtu.be/7S_tz1z_5bA?si=83GhWNiU_J9MB2e2\nhttps://youtu.be/ZzaPdXTrSb8?si=Ve9Y4HTogsj_pJLM\n\n✋ Stay connected:\n- Full Courses: https://codewithmosh.com\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n#coding #programming",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/NClmyC6olC0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/NClmyC6olC0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/NClmyC6olC0/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/NClmyC6olC0/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/NClmyC6olC0/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Programming with Mosh",
        "tags": [
          "top programming languages",
          "top coding languages in demand",
          "top programming languages 2025",
          "best coding language to learn",
          "popular languages",
          "coding",
          "most popular programming language",
          "top coding languages",
          "coding languages"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Top Programming Languages to Learn in 2025",
          "description": "Want to future-proof your coding skills? Discover the top programming languages that will dominate in 2025, with real-world use cases and career insights. Don’t miss out—stay ahead in tech!\n\n❤️ Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\n🔗 Tutorials \nhttps://youtu.be/_uQrJ0TkZlc?si=PlSZ9OJl2sku4sIH\nhttps://youtu.be/kqtD5dpn9C8?si=tr53YlfyrMqsi_RF\nhttps://youtu.be/eIrMbAQSU34?si=n1fSY_7d96rzzomX\nhttps://youtu.be/W6NZfCO5SIk?si=uaOUNhKhr2dOySV2\nhttps://youtu.be/d56mG7DezGs?si=Kpc4FFmYOWKvpPIc\nhttps://youtu.be/7S_tz1z_5bA?si=83GhWNiU_J9MB2e2\nhttps://youtu.be/ZzaPdXTrSb8?si=Ve9Y4HTogsj_pJLM\n\n✋ Stay connected:\n- Full Courses: https://codewithmosh.com\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n#coding #programming"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT4M14S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "263203",
        "likeCount": "7225",
        "favoriteCount": "0",
        "commentCount": "525"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "0tWHCPTc-H-iZ5tnk4O68WstA4g",
      "id": "GxmfcnU3feo",
      "snippet": {
        "publishedAt": "2024-07-25T13:00:16Z",
        "channelId": "UCWv7vMbMWH4-V0ZXdmDpPBA",
        "title": "The Complete Web Development Roadmap",
        "description": "Go from zero to a full stack web developer in 12 months. This step-by-step roadmap covers the essential skills and latest technologies to become a web developer in 2024. \n\n❤️ Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\nDownload the FREE roadmap PDF here: https://mosh.link/web-roadmap\n\n✋ Stay connected\n\n- Complete courses: https://codewithmosh.com\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n🔗 Other roadmaps\n\nhttps://youtu.be/7IgVGSaQPaw?si=nBuvDkGY314211WM\nhttps://youtu.be/yye7rSsiV6k?si=NNyTV354jvuKVzpu\n\n📚 Backend Tutorials \n\nhttps://youtu.be/_uQrJ0TkZlc?si=QA5qvbvk60uP-7Gu\nhttps://youtu.be/eIrMbAQSU34?si=PmdmS1vo9Gp4yRxR\nhttps://youtu.be/8JJ101D3knE?si=OGTuS35LQqSunuhh\nhttps://youtu.be/BBpAmxU_NQo?si=dm-ZCPxVBYWS1Qhn\nhttps://youtu.be/NU_1StN5Tkk?si=gsMONPdgxouQOolu\nhttps://youtu.be/7S_tz1z_5bA?si=wUNE0zrN_6uWrO7d\nhttps://youtu.be/rHux0gMZ3Eg?si=w1h0R4U8freF5xPT\n\n📚 Frontend Tutorials \n\nhttps://youtu.be/qz0aGYrrlhU?si=8d3Q5kiE83nMJZAG\nhttps://youtu.be/W6NZfCO5SIk?si=WXcgkjHSsGFyXZC2\nhttps://youtu.be/d56mG7DezGs?si=Bng_nVPU7VQrxaa7\nhttps://youtu.be/8JJ101D3knE?si=OGTuS35LQqSunuhh\nhttps://youtu.be/SqcY0GlETPk?si=hbktR9plzOgfuvpZ\nhttps://youtu.be/ZVnjOPwW4ZA?si=VG6XInWdFW8d0Sog\nhttps://youtu.be/zuKbR4Q428o?si=U_e5ITtUGFptQoqw\nhttps://youtu.be/0-S5a0eXPoc?si=1l1qX0YwbQN7BEuo\n\n📖 Chapters\n\n00:00 - Web Development \n01:04 - Back-end Development \n08:58 - Front-end Development \n\n#programming #webdevelopment #coding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/GxmfcnU3feo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/GxmfcnU3feo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/GxmfcnU3feo/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/GxmfcnU3feo/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/GxmfcnU3feo/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Programming with Mosh",
        "tags": [
          "web development roadmap",
          "full stack roadmap",
          "learn to code",
          "full stack development",
          "web development",
          "programming",
          "coding",
          "code with mosh",
          "programming with mosh",
          "mosh hamedani",
          "frontend",
          "backend",
          "software engineering"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "The Complete Web Development Roadmap",
          "description": "Go from zero to a full stack web developer in 12 months. This step-by-step roadmap covers the essential skills and latest technologies to become a web developer in 2024. \n\n❤️ Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA/join\n\nDownload the FREE roadmap PDF here: https://mosh.link/web-roadmap\n\n✋ Stay connected\n\n- Complete courses: https://codewithmosh.com\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n🔗 Other roadmaps\n\nhttps://youtu.be/7IgVGSaQPaw?si=nBuvDkGY314211WM\nhttps://youtu.be/yye7rSsiV6k?si=NNyTV354jvuKVzpu\n\n📚 Backend Tutorials \n\nhttps://youtu.be/_uQrJ0TkZlc?si=QA5qvbvk60uP-7Gu\nhttps://youtu.be/eIrMbAQSU34?si=PmdmS1vo9Gp4yRxR\nhttps://youtu.be/8JJ101D3knE?si=OGTuS35LQqSunuhh\nhttps://youtu.be/BBpAmxU_NQo?si=dm-ZCPxVBYWS1Qhn\nhttps://youtu.be/NU_1StN5Tkk?si=gsMONPdgxouQOolu\nhttps://youtu.be/7S_tz1z_5bA?si=wUNE0zrN_6uWrO7d\nhttps://youtu.be/rHux0gMZ3Eg?si=w1h0R4U8freF5xPT\n\n📚 Frontend Tutorials \n\nhttps://youtu.be/qz0aGYrrlhU?si=8d3Q5kiE83nMJZAG\nhttps://youtu.be/W6NZfCO5SIk?si=WXcgkjHSsGFyXZC2\nhttps://youtu.be/d56mG7DezGs?si=Bng_nVPU7VQrxaa7\nhttps://youtu.be/8JJ101D3knE?si=OGTuS35LQqSunuhh\nhttps://youtu.be/SqcY0GlETPk?si=hbktR9plzOgfuvpZ\nhttps://youtu.be/ZVnjOPwW4ZA?si=VG6XInWdFW8d0Sog\nhttps://youtu.be/zuKbR4Q428o?si=U_e5ITtUGFptQoqw\nhttps://youtu.be/0-S5a0eXPoc?si=1l1qX0YwbQN7BEuo\n\n📖 Chapters\n\n00:00 - Web Development \n01:04 - Back-end Development \n08:58 - Front-end Development \n\n#programming #webdevelopment #coding"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT15M15S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "1010380",
        "likeCount": "21461",
        "favoriteCount": "0",
        "commentCount": "706"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "zQ-BBilwtddGOpfQzxic564-0AM",
      "id": "N3AkSS5hXMA",
      "snippet": {
        "publishedAt": "2018-06-27T04:05:47Z",
        "channelId": "UCWv7vMbMWH4-V0ZXdmDpPBA",
        "title": "What Is React (React js) & Why Is It So Popular?",
        "description": "What is React (React js)? This video explains it in 5 Minutes!\n🔥React tutorial for beginners: https://youtu.be/Ke90Tje7VS0\n\nSubscribe to my YouTube channel for more videos: \nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA?sub_confirmation=1\n\nWant to learn more from me? Check out my blog and courses: \n\nCourses: https://codewithmosh.com\nBlog: https://programmingwithmosh.com \nFacebook: https://www.facebook.com/programmingwithmosh/\nTwitter: https://twitter.com/moshhamedani",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/N3AkSS5hXMA/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/N3AkSS5hXMA/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/N3AkSS5hXMA/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/N3AkSS5hXMA/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/N3AkSS5hXMA/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Programming with Mosh",
        "tags": [
          "what is react",
          "react",
          "react.js",
          "reactjs",
          "react js",
          "javascript",
          "angular",
          "react tutorial",
          "programming",
          "Why learn react"
        ],
        "categoryId": "22",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "What Is React (React js) & Why Is It So Popular?",
          "description": "What is React (React js)? This video explains it in 5 Minutes!\n🔥React tutorial for beginners: https://youtu.be/Ke90Tje7VS0\n\nSubscribe to my YouTube channel for more videos: \nhttps://www.youtube.com/channel/UCWv7vMbMWH4-V0ZXdmDpPBA?sub_confirmation=1\n\nWant to learn more from me? Check out my blog and courses: \n\nCourses: https://codewithmosh.com\nBlog: https://programmingwithmosh.com \nFacebook: https://www.facebook.com/programmingwithmosh/\nTwitter: https://twitter.com/moshhamedani"
        },
        "defaultAudioLanguage": "en-US"
      },
      "contentDetails": {
        "duration": "PT4M33S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "931705",
        "likeCount": "18298",
        "favoriteCount": "0",
        "commentCount": "257"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "USbQ6NwnrqG5SMKveponAVWAimk",
      "id": "fRRRkognpOs",
      "snippet": {
        "publishedAt": "2023-11-13T13:02:25Z",
        "channelId": "UC4SVo0Ue36XCfOyb5Lh1viQ",
        "title": "Learn JavaScript ARROW FUNCTIONS in 8 minutes! 🎯",
        "description": "// arrow functions = a concise way to write function expressions\n//                                 good for simple functions that you use only once\n\n00:00:00 introduction\n00:00:35 example 1\n00:03:05 example 2\n00:04:24 example 3\n00:07:25 conclusion",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/fRRRkognpOs/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/fRRRkognpOs/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/fRRRkognpOs/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/fRRRkognpOs/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/fRRRkognpOs/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Bro Code",
        "tags": [
          "JavaScript arrow functions",
          "JavaScript arrow",
          "JavaScript tutorial",
          "JavaScript course",
          "javascript",
          "javascript tutorial",
          "javascript full course",
          "javascript course",
          "course",
          "full course",
          "web development",
          "web developer",
          "software engineer",
          "software engineering",
          "coding tutorial",
          "learn to code",
          "tutorial",
          "html",
          "css"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Learn JavaScript ARROW FUNCTIONS in 8 minutes! 🎯",
          "description": "// arrow functions = a concise way to write function expressions\n//                                 good for simple functions that you use only once\n\n00:00:00 introduction\n00:00:35 example 1\n00:03:05 example 2\n00:04:24 example 3\n00:07:25 conclusion"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT8M2S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "90777",
        "likeCount": "2432",
        "favoriteCount": "0",
        "commentCount": "56"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "zrSsdE95pJTElmONG_DehZuFV6w",
      "id": "uvEAvxWvwOs",
      "snippet": {
        "publishedAt": "2023-10-15T18:17:00Z",
        "channelId": "UC4SVo0Ue36XCfOyb5Lh1viQ",
        "title": "PROPS in React explained 📧",
        "description": "#React #JavaScript #tutorial \n\n00:00:00 introduction\n00:00:56 props \n00:04:49 index.css \n00:06:28 multiple components\n00:07:49 propType\n00:10:18 defaultProps \n00:11:47 conclusion\n\n// props =  read-only properties that are shared between components.\n//                A parent component can send data to a child component.\n//                key=value\n\n// propTypes = a mechanism that ensures that the passed value\n//                        is of the correct datatype.\n//                       age: PropTypes.number\n\n// defaultProps = default values for props in case they are not\n//                            passed from the parent component\n//                            name: \"Guest\"",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/uvEAvxWvwOs/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/uvEAvxWvwOs/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/uvEAvxWvwOs/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/uvEAvxWvwOs/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/uvEAvxWvwOs/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Bro Code",
        "tags": [
          "react js",
          "react tutorial",
          "learn react",
          "react course",
          "reactjs tutorial",
          "react crash course",
          "react js tutorial",
          "reactjs course",
          "react tutorial for beginners",
          "react.js",
          "reactjs tutorial for beginners",
          "reactJS",
          "react",
          "learn reactjs",
          "tutorial",
          "javascript",
          "crash course",
          "web development",
          "learn react js"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "PROPS in React explained 📧",
          "description": "#React #JavaScript #tutorial \n\n00:00:00 introduction\n00:00:56 props \n00:04:49 index.css \n00:06:28 multiple components\n00:07:49 propType\n00:10:18 defaultProps \n00:11:47 conclusion\n\n// props =  read-only properties that are shared between components.\n//                A parent component can send data to a child component.\n//                key=value\n\n// propTypes = a mechanism that ensures that the passed value\n//                        is of the correct datatype.\n//                       age: PropTypes.number\n\n// defaultProps = default values for props in case they are not\n//                            passed from the parent component\n//                            name: \"Guest\""
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT12M9S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "187598",
        "likeCount": "4453",
        "favoriteCount": "0",
        "commentCount": "208"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "cvYTjz9aCdWRcYKjau_e0K23qV8",
      "id": "FpNfvbNYPsg",
      "snippet": {
        "publishedAt": "2024-01-09T18:27:37Z",
        "channelId": "UC4SVo0Ue36XCfOyb5Lh1viQ",
        "title": "React useContext() hook introduction 🧗\u200d♂️",
        "description": "#reactjs #tutorial #course \n\n00:00:00 intro\n00:00:13 setup\n00:04:39 props\n00:06:01 prop drilling\n00:06:17 useContext\n00:06:27 Provider Component\n00:08:28 Consumer Components\n00:10:11 multiple consumer components\n00:11:10 conclusion\n\n// useContext() = React Hook that allows you to share values\n//                            between multiple levels of components\n//                            without passing props through each level",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/FpNfvbNYPsg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/FpNfvbNYPsg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/FpNfvbNYPsg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/FpNfvbNYPsg/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/FpNfvbNYPsg/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Bro Code",
        "tags": [
          "react js",
          "react tutorial",
          "learn react",
          "react course",
          "reactjs tutorial",
          "react crash course",
          "react js tutorial",
          "reactjs course",
          "react tutorial for beginners",
          "react.js",
          "reactjs tutorial for beginners",
          "reactJS",
          "react",
          "learn reactjs",
          "tutorial",
          "javascript",
          "crash course",
          "web development",
          "learn react js",
          "useContext",
          "usecontext hook"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "React useContext() hook introduction 🧗\u200d♂️",
          "description": "#reactjs #tutorial #course \n\n00:00:00 intro\n00:00:13 setup\n00:04:39 props\n00:06:01 prop drilling\n00:06:17 useContext\n00:06:27 Provider Component\n00:08:28 Consumer Components\n00:10:11 multiple consumer components\n00:11:10 conclusion\n\n// useContext() = React Hook that allows you to share values\n//                            between multiple levels of components\n//                            without passing props through each level"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT11M37S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "74778",
        "likeCount": "2580",
        "favoriteCount": "0",
        "commentCount": "162"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "fpix6TyZtQJV1pGbyfmx0rJQ5_M",
      "id": "L-1sP3Ljhsg",
      "snippet": {
        "publishedAt": "2024-01-06T14:34:56Z",
        "channelId": "UC4SVo0Ue36XCfOyb5Lh1viQ",
        "title": "React useEffect() hook introduction 🌟",
        "description": "#react #tutorial #course \n\n00:00:00 introduction\n00:02:00 setup\n00:03:25 no dependencies\n00:04:50 empty dependency array\n00:05:51 1 dependency\n00:07:25 multiple dependencies\n00:09:57 why use useEffect()?\n00:11:33 example 2\n00:15:51 return\n00:17:31 multiple useEffect() hooks\n00:18:52 conclusion\n\n// useEffect()\n// React Hook that tells React to DO THIS CODE WHEN:\n// (pick one) \n// This component re-renders\n// This component mounts\n// The state of a value changes\n\n// useEffect(function, [dependencies])\n\n// USES\n// #1 Event Listeners\n// #2 DOM manipulation\n// #3 Subscriptions (real-time updates)\n// #4 Fetching Data from an API\n// #5 Clean up when a component unmounts",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/L-1sP3Ljhsg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/L-1sP3Ljhsg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/L-1sP3Ljhsg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/L-1sP3Ljhsg/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/L-1sP3Ljhsg/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Bro Code",
        "tags": [
          "react js",
          "react tutorial",
          "learn react",
          "react course",
          "reactjs tutorial",
          "react crash course",
          "react js tutorial",
          "reactjs course",
          "react tutorial for beginners",
          "react.js",
          "reactjs tutorial for beginners",
          "reactJS",
          "react",
          "learn reactjs",
          "tutorial",
          "javascript",
          "crash course",
          "web development",
          "learn react js",
          "useEffect"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "React useEffect() hook introduction 🌟",
          "description": "#react #tutorial #course \n\n00:00:00 introduction\n00:02:00 setup\n00:03:25 no dependencies\n00:04:50 empty dependency array\n00:05:51 1 dependency\n00:07:25 multiple dependencies\n00:09:57 why use useEffect()?\n00:11:33 example 2\n00:15:51 return\n00:17:31 multiple useEffect() hooks\n00:18:52 conclusion\n\n// useEffect()\n// React Hook that tells React to DO THIS CODE WHEN:\n// (pick one) \n// This component re-renders\n// This component mounts\n// The state of a value changes\n\n// useEffect(function, [dependencies])\n\n// USES\n// #1 Event Listeners\n// #2 DOM manipulation\n// #3 Subscriptions (real-time updates)\n// #4 Fetching Data from an API\n// #5 Clean up when a component unmounts"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT19M52S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "66590",
        "likeCount": "1737",
        "favoriteCount": "0",
        "commentCount": "72"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "4Sx-lzZ6HMqJkeJI0QdExZZDv54",
      "id": "I5kj-YsmWjM",
      "snippet": {
        "publishedAt": "2023-12-01T11:03:00Z",
        "channelId": "UC4SVo0Ue36XCfOyb5Lh1viQ",
        "title": "Build this JS calculator in 15 minutes! 🖩",
        "description": "#JavaScript #tutorial #course\n\nIMPORTANT NOTE: eval() allows you to execute a string of code as if it were actual JavaScript code.\nWhile it is a useful tool, it is a security risk. I would recommend using eval() ONLY for learning purposes and not any actual production code.\n\n00:00:00 HTML\n00:03:08 CSS\n00:11:21 JavaScript\n\nThis is a JavaScript project program for beginners where we will build a functioning calculator. Impress your friends!",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/I5kj-YsmWjM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/I5kj-YsmWjM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/I5kj-YsmWjM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/I5kj-YsmWjM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/I5kj-YsmWjM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Bro Code",
        "tags": [
          "javascript",
          "javascript tutorial",
          "javascript full course",
          "javascript course",
          "course",
          "full course",
          "web development",
          "web developer",
          "software engineer",
          "software engineering",
          "coding tutorial",
          "learn to code",
          "tutorial",
          "html",
          "css",
          "calculator",
          "project"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Build this JS calculator in 15 minutes! 🖩",
          "description": "#JavaScript #tutorial #course\n\nIMPORTANT NOTE: eval() allows you to execute a string of code as if it were actual JavaScript code.\nWhile it is a useful tool, it is a security risk. I would recommend using eval() ONLY for learning purposes and not any actual production code.\n\n00:00:00 HTML\n00:03:08 CSS\n00:11:21 JavaScript\n\nThis is a JavaScript project program for beginners where we will build a functioning calculator. Impress your friends!"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT15M20S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "1038424",
        "likeCount": "26259",
        "favoriteCount": "0",
        "commentCount": "658"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "1l6Jryz_tA-3LB95g4OigzAbSRQ",
      "id": "cS4PgI3zBzY",
      "snippet": {
        "publishedAt": "2019-12-18T12:18:29Z",
        "channelId": "UCW5YeuERMmlnqo4oq8vwUpg",
        "title": "React Native Tutorial  #20 - Stack Navigator",
        "description": "Hey gang,in this React Native tutorial we'll take a look at stack navigators and set one up in our app.\n----------------------------------------\n\n🐱\u200d💻 🐱\u200d💻 Course Links:\n\nCourse files - https://github.com/iamshaunjp/react-native-tutorial\n\n🐱\u200d💻 🐱\u200d💻 Other Related Courses:\n\n+ Complete React Tutorial - https://www.youtube.com/watch?v=OxIDLw0M-m0&list=PL4cUxeGkcC9ij8CfkAY2RAGb-tmkNwQHG\n\n+ React Hooks & Context Tutorial - https://www.youtube.com/watch?v=6RhOzQciVwI&list=PL4cUxeGkcC9hNokByJilPg5g9m2APUePI\n\n+ Modern JavaScript Tutorial - https://www.youtube.com/watch?v=iWOYAxlnaww&list=PL4cUxeGkcC9haFPT7J25Q9GRB_ZkFrQAc",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/cS4PgI3zBzY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/cS4PgI3zBzY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/cS4PgI3zBzY/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/cS4PgI3zBzY/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/cS4PgI3zBzY/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Net Ninja",
        "tags": [
          "react native",
          "react",
          "react native tutorial",
          "tutorial",
          "react native for beginners",
          "react tutorial",
          "react native tutorial for beginners",
          "beginners",
          "react vs react native",
          "stack navigator",
          "react navigation"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "React Native Tutorial  #20 - Stack Navigator",
          "description": "Hey gang,in this React Native tutorial we'll take a look at stack navigators and set one up in our app.\n----------------------------------------\n\n🐱\u200d💻 🐱\u200d💻 Course Links:\n\nCourse files - https://github.com/iamshaunjp/react-native-tutorial\n\n🐱\u200d💻 🐱\u200d💻 Other Related Courses:\n\n+ Complete React Tutorial - https://www.youtube.com/watch?v=OxIDLw0M-m0&list=PL4cUxeGkcC9ij8CfkAY2RAGb-tmkNwQHG\n\n+ React Hooks & Context Tutorial - https://www.youtube.com/watch?v=6RhOzQciVwI&list=PL4cUxeGkcC9hNokByJilPg5g9m2APUePI\n\n+ Modern JavaScript Tutorial - https://www.youtube.com/watch?v=iWOYAxlnaww&list=PL4cUxeGkcC9haFPT7J25Q9GRB_ZkFrQAc"
        },
        "defaultAudioLanguage": "en-GB"
      },
      "contentDetails": {
        "duration": "PT12M7S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "276757",
        "likeCount": "2704",
        "favoriteCount": "0",
        "commentCount": "147"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "98KGR61V-7ycAAOTG-4bXGImIgA",
      "id": "SpDG283b4bw",
      "snippet": {
        "publishedAt": "2023-11-20T16:37:54Z",
        "channelId": "UC4SVo0Ue36XCfOyb5Lh1viQ",
        "title": "React useState() hook introduction 🎣",
        "description": "#reactjs #course #tutorial \n\n00:00:00 introduction\n00:01:10 setup\n00:01:57 import useState\n00:02:25 update a string\n00:05:38 initial state\n00:05:58 increment a number\n00:07:29 toggle a boolean\n00:09:24 Counter program\n00:13:14 Counter CSS\n00:16:03 conclusion\n\n// React hook = Special function that allows functional components\n//                         to use React features without writing class components \n//                         (useState, useEffect, useContext, useReducer, and more...)                \n\n// useState() = A React hook that allows the creation of a stateful variable\n//                       AND a setter function to update its value in the Virtual DOM.\n//                       [name, setName]",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/SpDG283b4bw/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/SpDG283b4bw/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/SpDG283b4bw/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/SpDG283b4bw/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/SpDG283b4bw/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Bro Code",
        "tags": [
          "react js",
          "react tutorial",
          "learn react",
          "react course",
          "reactjs tutorial",
          "react crash course",
          "react js tutorial",
          "reactjs course",
          "react tutorial for beginners",
          "react.js",
          "reactjs tutorial for beginners",
          "reactJS",
          "react",
          "learn reactjs",
          "tutorial",
          "javascript",
          "crash course",
          "web development",
          "learn react js",
          "useState",
          "useState()"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "React useState() hook introduction 🎣",
          "description": "#reactjs #course #tutorial \n\n00:00:00 introduction\n00:01:10 setup\n00:01:57 import useState\n00:02:25 update a string\n00:05:38 initial state\n00:05:58 increment a number\n00:07:29 toggle a boolean\n00:09:24 Counter program\n00:13:14 Counter CSS\n00:16:03 conclusion\n\n// React hook = Special function that allows functional components\n//                         to use React features without writing class components \n//                         (useState, useEffect, useContext, useReducer, and more...)                \n\n// useState() = A React hook that allows the creation of a stateful variable\n//                       AND a setter function to update its value in the Virtual DOM.\n//                       [name, setName]"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT16M33S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "70708",
        "likeCount": "1670",
        "favoriteCount": "0",
        "commentCount": "64"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "DmTrATgjibBMe6Njg-np_e7dOPY",
      "id": "89NJdbYTgJ8",
      "snippet": {
        "publishedAt": "2023-03-14T16:24:34Z",
        "channelId": "UC29ju8bIPH5as8OGnQzwJyA",
        "title": "Vite Crash Course | Faster Alternative To CRA",
        "description": "In this video, we will talk about the Vite JavaScript build tool. We will also compare it to Webpack as well as Create React App.\n\n💻 Blog Post:\nhttps://www.traversymedia.com/blog/vite-crash-course\n\n⭐ All Courses:\nhttps://traversymedia.com\n\n💖  Show Support\nPatreon: https://www.patreon.com/traversymedia\nPayPal: https://paypal.me/traversymedia\n\n👇 Follow Traversy Media On Social Media:\nTwitter: https://twitter.com/traversymedia\nInstagram: https://www.instagram.com/traversymedia\nLinkedin: https://www.linkedin.com/in/bradtraversy\n\nTimestamps:\n\n0:00 - Intro \n1:13 - Vite vs Traditional Module Bundlers\n3:50 -  Vite vs Create React App\n7:14 - Setting Up a Project\n8:21 - File & Folder Structure\n11:27 - Creating a React Component\n12:23 - Environment Variables\n13:50 - Using Sass\n14:50 - Build For Production & Preview\n15:19 - Plugins",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/89NJdbYTgJ8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/89NJdbYTgJ8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/89NJdbYTgJ8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/89NJdbYTgJ8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/89NJdbYTgJ8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Traversy Media",
        "categoryId": "28",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "Vite Crash Course | Faster Alternative To CRA",
          "description": "In this video, we will talk about the Vite JavaScript build tool. We will also compare it to Webpack as well as Create React App.\n\n💻 Blog Post:\nhttps://www.traversymedia.com/blog/vite-crash-course\n\n⭐ All Courses:\nhttps://traversymedia.com\n\n💖  Show Support\nPatreon: https://www.patreon.com/traversymedia\nPayPal: https://paypal.me/traversymedia\n\n👇 Follow Traversy Media On Social Media:\nTwitter: https://twitter.com/traversymedia\nInstagram: https://www.instagram.com/traversymedia\nLinkedin: https://www.linkedin.com/in/bradtraversy\n\nTimestamps:\n\n0:00 - Intro \n1:13 - Vite vs Traditional Module Bundlers\n3:50 -  Vite vs Create React App\n7:14 - Setting Up a Project\n8:21 - File & Folder Structure\n11:27 - Creating a React Component\n12:23 - Environment Variables\n13:50 - Using Sass\n14:50 - Build For Production & Preview\n15:19 - Plugins"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT16M24S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "255156",
        "likeCount": "7375",
        "favoriteCount": "0",
        "commentCount": "164"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "UYmoFBc47XH4oRAH41UJN2ADapI",
      "id": "9j1dZwFEJ-c",
      "snippet": {
        "publishedAt": "2023-12-21T17:23:12Z",
        "channelId": "UC4SVo0Ue36XCfOyb5Lh1viQ",
        "title": "JavaScript ASYNC/AWAIT is easy! ⏳",
        "description": "#javascript #tutorial #programming \n\n// Async/Await = Async = makes a function return a promise\n//                            Await = makes an async function wait for a promise\n\n// Allows you write asynchronous code in a synchronous manner\n// Async doesn't have resolve or reject parameters\n// Everything after Await is placed in an event queue\n\nasync function doChores(){\n\n    try{\n        const walkDogResult = await walkDog();\n        console.log(walkDogResult);\n    \n        const cleanKitchenResult = await cleanKitchen();\n        console.log(cleanKitchenResult);\n    \n        const takeOutTrashResult = await takeOutTrash();\n        console.log(takeOutTrashResult);\n        \n        console.log(\"You finsihed all the chores!\");\n    }\n    catch(error){\n        console.error(error);\n    }\n}\n\ndoChores();",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/9j1dZwFEJ-c/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/9j1dZwFEJ-c/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/9j1dZwFEJ-c/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/9j1dZwFEJ-c/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/9j1dZwFEJ-c/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Bro Code",
        "tags": [
          "javascript",
          "javascript tutorial",
          "javascript full course",
          "javascript course",
          "course",
          "full course",
          "web development",
          "web developer",
          "software engineer",
          "software engineering",
          "coding tutorial",
          "learn to code",
          "tutorial",
          "html",
          "css",
          "async",
          "await"
        ],
        "categoryId": "27",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "JavaScript ASYNC/AWAIT is easy! ⏳",
          "description": "#javascript #tutorial #programming \n\n// Async/Await = Async = makes a function return a promise\n//                            Await = makes an async function wait for a promise\n\n// Allows you write asynchronous code in a synchronous manner\n// Async doesn't have resolve or reject parameters\n// Everything after Await is placed in an event queue\n\nasync function doChores(){\n\n    try{\n        const walkDogResult = await walkDog();\n        console.log(walkDogResult);\n    \n        const cleanKitchenResult = await cleanKitchen();\n        console.log(cleanKitchenResult);\n    \n        const takeOutTrashResult = await takeOutTrash();\n        console.log(takeOutTrashResult);\n        \n        console.log(\"You finsihed all the chores!\");\n    }\n    catch(error){\n        console.error(error);\n    }\n}\n\ndoChores();"
        },
        "defaultAudioLanguage": "en"
      },
      "contentDetails": {
        "duration": "PT4M39S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": true,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "195990",
        "likeCount": "4539",
        "favoriteCount": "0",
        "commentCount": "100"
      }
    },
    {
      "kind": "youtube#video",
      "etag": "t4gyDPue4Y1YHGrJLC0xS-YXUk8",
      "id": "H7zCdYFKPOI",
      "snippet": {
        "publishedAt": "2021-09-20T15:17:28Z",
        "channelId": "UCbMkG_QV7MoZ3KmcnVmOAwg",
        "title": "react native project create in Visual Studio Code",
        "description": "How to create first project in react native in Visual studio.\n\n# command line use in terminal given below:\n\n    1. npm install -g expo-cli\n    2. expo inti projectname\n    3. cd projectname\n    4. code\n\n    command link -  https://reactnative.dev/docs/environment-setup\n\n# emulator use command:\n\n    1. npm start",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/H7zCdYFKPOI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/H7zCdYFKPOI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/H7zCdYFKPOI/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/H7zCdYFKPOI/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/H7zCdYFKPOI/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "The bro code",
        "tags": [
          "react native",
          "visual studio code",
          "how to create react native project",
          "react native project",
          "beginner react native",
          "start react native project"
        ],
        "categoryId": "26",
        "liveBroadcastContent": "none",
        "defaultLanguage": "en",
        "localized": {
          "title": "react native project create in Visual Studio Code",
          "description": "How to create first project in react native in Visual studio.\n\n# command line use in terminal given below:\n\n    1. npm install -g expo-cli\n    2. expo inti projectname\n    3. cd projectname\n    4. code\n\n    command link -  https://reactnative.dev/docs/environment-setup\n\n# emulator use command:\n\n    1. npm start"
        },
        "defaultAudioLanguage": "hi"
      },
      "contentDetails": {
        "duration": "PT9M12S",
        "dimension": "2d",
        "definition": "hd",
        "caption": "false",
        "licensedContent": false,
        "contentRating": {},
        "projection": "rectangular"
      },
      "statistics": {
        "viewCount": "1044",
        "likeCount": "9",
        "favoriteCount": "0",
        "commentCount": "0"
      }
    }
  ],
  "pageInfo": {
    "totalResults": 15,
    "resultsPerPage": 15
  }
}
","status":200,"url":"https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=uxZZzmeCoLE%2Cyye7rSsiV6k%2CNClmyC6olC0%2CGxmfcnU3feo%2CN3AkSS5hXMA%2CfRRRkognpOs%2CuvEAvxWvwOs%2CFpNfvbNYPsg%2CL-1sP3Ljhsg%2CI5kj-YsmWjM%2CcS4PgI3zBzY%2CSpDG283b4bw%2C89NJdbYTgJ8%2C9j1dZwFEJ-c%2CH7zCdYFKPOI&key=AIzaSyAeZAsOW2kBeNqsdozdSNpajJeUOXsJ2fs"},"revalidate":3600,"tags":[]}