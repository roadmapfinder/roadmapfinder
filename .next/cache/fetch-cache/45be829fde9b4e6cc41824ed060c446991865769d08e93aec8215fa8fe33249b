{"kind":"FETCH","data":{"headers":{"content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Thu, 23 Oct 2025 11:04:13 GMT","server":"scaffolding on HTTPServer2","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"","status":200,"url":"https://www.googleapis.com/youtube/v3/search?part=snippet&q=react+native+complete+course+hindi+tutorial+course+complete+%28%22Chai+aur+Code%22+OR+%22Code+Step+By+Step%22+OR+%22Coder%27s+Gyan%22+OR+%22Apna+College%22+OR+%22Code+with+Sagar%22%29&type=video&videoDuration=medium&videoDefinition=high&relevanceLanguage=hi&order=relevance&maxResults=15&key=AIzaSyAeZAsOW2kBeNqsdozdSNpajJeUOXsJ2fs"},"revalidate":3600,"tags":[]}