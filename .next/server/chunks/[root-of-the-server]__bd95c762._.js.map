{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/api/generate-project/route.js"],"sourcesContent":["// app/api/generate-project/route.js\nimport { NextResponse } from 'next/server';\n\n// Enhanced YouTube API helper function with better search logic\nasync function fetchYouTubeVideos(searchQuery, maxResults = 5) {\n  try {\n    if (!process.env.YOUTUBE_API_KEY) {\n      console.warn('YOUTUBE_API_KEY not set, skipping video fetch');\n      return [];\n    }\n\n    // Enhanced search parameters for better results\n    const searchUrl = `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(searchQuery)}&type=video&maxResults=${maxResults}&order=relevance&videoDuration=medium&videoDefinition=any&key=${process.env.YOUTUBE_API_KEY}`;\n\n    const response = await fetch(searchUrl);\n\n    if (!response.ok) {\n      console.error('YouTube API error:', response.status, await response.text());\n      return [];\n    }\n\n    const data = await response.json();\n\n    if (!data.items || data.items.length === 0) {\n      console.log(`No videos found for query: ${searchQuery}`);\n      return [];\n    }\n\n    // Get additional video details for better filtering\n    const videoIds = data.items.map(item => item.id.videoId).join(',');\n    const detailsUrl = `https://www.googleapis.com/youtube/v3/videos?part=statistics,contentDetails&id=${videoIds}&key=${process.env.YOUTUBE_API_KEY}`;\n\n    const detailsResponse = await fetch(detailsUrl);\n    const detailsData = detailsResponse.ok ? await detailsResponse.json() : { items: [] };\n\n    return data.items.map((item, index) => {\n      const details = detailsData.items?.[index];\n      const viewCount = details?.statistics?.viewCount ? parseInt(details.statistics.viewCount) : 0;\n      const duration = details?.contentDetails?.duration || 'Unknown';\n\n      return {\n        title: item.snippet.title,\n        channel: item.snippet.channelTitle,\n        url: `https://www.youtube.com/watch?v=${item.id.videoId}`,\n        description: item.snippet.description.substring(0, 200) + '...',\n        thumbnail: item.snippet.thumbnails.medium?.url || item.snippet.thumbnails.default?.url,\n        publishedAt: item.snippet.publishedAt,\n        viewCount,\n        duration,\n        relevanceScore: calculateRelevanceScore(item, searchQuery)\n      };\n    }).filter(video => video.relevanceScore > 0.3) // Filter out low relevance videos\n      .sort((a, b) => b.relevanceScore - a.relevanceScore); // Sort by relevance\n\n  } catch (error) {\n    console.error('YouTube API fetch error:', error);\n    return [];\n  }\n}\n\n// Calculate relevance score based on title, description, and channel\nfunction calculateRelevanceScore(video, searchQuery) {\n  const queryTerms = searchQuery.toLowerCase().split(' ').filter(term => term.length > 2);\n  const title = video.snippet.title.toLowerCase();\n  const description = video.snippet.description.toLowerCase();\n  const channel = video.snippet.channelTitle.toLowerCase();\n\n  let score = 0;\n\n  queryTerms.forEach(term => {\n    if (title.includes(term)) score += 1;\n    if (description.includes(term)) score += 0.5;\n    if (channel.includes(term)) score += 0.3;\n  });\n\n  // Bonus for educational channels and tutorial keywords\n  const educationalKeywords = ['tutorial', 'course', 'learn', 'guide', 'how to', 'coding', 'programming'];\n  const educationalChannels = ['freecodecamp', 'traversy', 'net ninja', 'programming with mosh', 'academind', 'codevolution', 'web dev simplified'];\n\n  educationalKeywords.forEach(keyword => {\n    if (title.includes(keyword) || description.includes(keyword)) score += 0.2;\n  });\n\n  educationalChannels.forEach(channelName => {\n    if (channel.includes(channelName)) score += 0.5;\n  });\n\n  return Math.min(score / queryTerms.length, 1); // Normalize to 0-1\n}\n\n// Intelligent YouTube search query generation with project analysis\nasync function generateIntelligentSearchQueries(projectData, projectIdea) {\n  const queries = [];\n\n  // Extract technologies from tech stack\n  const allTechnologies = [];\n  if (projectData.techStack) {\n    Object.values(projectData.techStack).forEach(techArray => {\n      if (Array.isArray(techArray)) {\n        allTechnologies.push(...techArray);\n      }\n    });\n  }\n\n  // Analyze project type and complexity\n  const projectAnalysis = analyzeProject(projectIdea, allTechnologies);\n\n  console.log('Project Analysis:', projectAnalysis);\n\n  // Priority 1: Exact project match tutorials\n  if (projectAnalysis.projectType !== 'generic') {\n    queries.push({\n      query: `${projectAnalysis.projectType} ${allTechnologies.slice(0, 2).join(' ')} tutorial 2024`,\n      priority: 'high',\n      category: 'project-specific'\n    });\n\n    queries.push({\n      query: `build ${projectAnalysis.projectType} ${allTechnologies[0]} step by step`,\n      priority: 'high',\n      category: 'project-specific'\n    });\n  }\n\n  // Priority 2: Technology stack combinations\n  if (allTechnologies.length >= 2) {\n    const mainStack = allTechnologies.slice(0, 3);\n    queries.push({\n      query: `${mainStack.join(' ')} full stack tutorial`,\n      priority: 'high',\n      category: 'tech-stack'\n    });\n\n    // Frontend + Backend combination\n    const frontend = getFrontendTech(allTechnologies);\n    const backend = getBackendTech(allTechnologies);\n    if (frontend && backend) {\n      queries.push({\n        query: `${frontend} ${backend} complete project tutorial`,\n        priority: 'high',\n        category: 'tech-stack'\n      });\n    }\n  }\n\n  // Priority 3: Individual technology deep dives\n  allTechnologies.slice(0, 3).forEach(tech => {\n    queries.push({\n      query: `${tech} crash course 2024 beginners`,\n      priority: 'medium',\n      category: 'individual-tech'\n    });\n  });\n\n  // Priority 4: Domain-specific tutorials\n  projectAnalysis.domains.forEach(domain => {\n    queries.push({\n      query: `${domain} development tutorial ${allTechnologies[0] || 'programming'}`,\n      priority: 'medium',\n      category: 'domain-specific'\n    });\n  });\n\n  // Priority 5: Advanced concepts if detected\n  if (projectAnalysis.complexity === 'advanced') {\n    projectAnalysis.advancedConcepts.forEach(concept => {\n      queries.push({\n        query: `${concept} ${allTechnologies[0]} implementation tutorial`,\n        priority: 'low',\n        category: 'advanced-concepts'\n      });\n    });\n  }\n\n  // Sort by priority and return top queries\n  const priorityOrder = { 'high': 3, 'medium': 2, 'low': 1 };\n  return queries\n    .sort((a, b) => priorityOrder[b.priority] - priorityOrder[a.priority])\n    .slice(0, 6) // Limit to top 6 queries\n    .map(q => q.query);\n}\n\n// Advanced project analysis function\nfunction analyzeProject(projectIdea, technologies) {\n  const ideaLower = projectIdea.toLowerCase();\n  const analysis = {\n    projectType: 'generic',\n    domains: [],\n    complexity: 'beginner',\n    advancedConcepts: []\n  };\n\n  // Project type detection\n  const projectTypes = {\n    'e-commerce': ['shop', 'store', 'marketplace', 'cart', 'payment', 'product'],\n    'social media': ['social', 'chat', 'messaging', 'post', 'feed', 'friend'],\n    'blog': ['blog', 'cms', 'article', 'content', 'publishing'],\n    'dashboard': ['dashboard', 'admin', 'analytics', 'metrics', 'reporting'],\n    'mobile app': ['mobile', 'app', 'ios', 'android', 'native'],\n    'web app': ['web app', 'webapp', 'single page', 'spa'],\n    'api': ['api', 'rest', 'graphql', 'backend', 'service'],\n    'ai app': ['ai', 'ml', 'machine learning', 'neural', 'chatbot'],\n    'game': ['game', 'gaming', 'puzzle', 'arcade'],\n    'portfolio': ['portfolio', 'personal site', 'resume'],\n    'landing page': ['landing', 'marketing', 'promotional']\n  };\n\n  for (const [type, keywords] of Object.entries(projectTypes)) {\n    if (keywords.some(keyword => ideaLower.includes(keyword))) {\n      analysis.projectType = type;\n      break;\n    }\n  }\n\n  // Domain detection\n  const domains = {\n    'web development': ['web', 'website', 'html', 'css', 'javascript'],\n    'mobile development': ['mobile', 'app', 'ios', 'android', 'react native', 'flutter'],\n    'backend development': ['api', 'server', 'database', 'backend'],\n    'ai/ml': ['ai', 'machine learning', 'neural', 'deep learning'],\n    'blockchain': ['blockchain', 'crypto', 'smart contract', 'web3'],\n    'devops': ['deployment', 'docker', 'kubernetes', 'ci/cd'],\n    'data science': ['data', 'analytics', 'visualization', 'statistics']\n  };\n\n  for (const [domain, keywords] of Object.entries(domains)) {\n    if (keywords.some(keyword => ideaLower.includes(keyword) || technologies.some(tech => tech.toLowerCase().includes(keyword)))) {\n      analysis.domains.push(domain);\n    }\n  }\n\n  // Complexity assessment\n  const complexityIndicators = {\n    advanced: ['microservice', 'distributed', 'scalable', 'enterprise', 'real-time', 'machine learning', 'blockchain'],\n    intermediate: ['authentication', 'database', 'api', 'testing', 'deployment'],\n    beginner: ['simple', 'basic', 'learning', 'tutorial']\n  };\n\n  for (const [level, indicators] of Object.entries(complexityIndicators)) {\n    if (indicators.some(indicator => ideaLower.includes(indicator))) {\n      analysis.complexity = level;\n      break;\n    }\n  }\n\n  // Advanced concepts detection\n  const advancedConcepts = ['authentication', 'authorization', 'caching', 'testing', 'deployment', 'optimization', 'security'];\n  analysis.advancedConcepts = advancedConcepts.filter(concept => ideaLower.includes(concept));\n\n  return analysis;\n}\n\n// Helper functions for technology categorization\nfunction getFrontendTech(technologies) {\n  const frontendTechs = ['react', 'vue', 'angular', 'svelte', 'next.js', 'nuxt', 'html', 'css', 'javascript'];\n  return technologies.find(tech => frontendTechs.some(ft => tech.toLowerCase().includes(ft.toLowerCase())));\n}\n\nfunction getBackendTech(technologies) {\n  const backendTechs = ['node.js', 'express', 'django', 'flask', 'spring', 'laravel', 'ruby on rails', 'fastapi'];\n  return technologies.find(tech => backendTechs.some(bt => tech.toLowerCase().includes(bt.toLowerCase())));\n}\n\n// Enhanced video fetching with intelligent search\nasync function fetchProjectRelevantVideos(projectData, projectIdea) {\n  console.log('Starting intelligent video search...');\n\n  const searchQueries = await generateIntelligentSearchQueries(projectData, projectIdea);\n  console.log('Generated search queries:', searchQueries);\n\n  const videosByCategory = {\n    projectSpecific: [],\n    techStack: [],\n    individual: [],\n    general: []\n  };\n\n  // Fetch videos for each query with category tracking\n  for (const query of searchQueries) {\n    try {\n      const videos = await fetchYouTubeVideos(query, 4);\n\n      if (videos.length > 0) {\n        // Categorize videos based on query type\n        if (query.includes('tutorial') && (query.includes('build') || query.includes('project'))) {\n          videosByCategory.projectSpecific.push(...videos);\n        } else if (query.includes('full stack') || query.includes('crash course')) {\n          videosByCategory.techStack.push(...videos);\n        } else {\n          videosByCategory.individual.push(...videos);\n        }\n      }\n\n      // Add delay to avoid rate limiting\n      await new Promise(resolve => setTimeout(resolve, 100));\n    } catch (error) {\n      console.error(`Error fetching videos for query \"${query}\":`, error);\n    }\n  }\n\n  // Combine and prioritize videos\n  let combinedVideos = [\n    ...videosByCategory.projectSpecific.slice(0, 4),\n    ...videosByCategory.techStack.slice(0, 3),\n    ...videosByCategory.individual.slice(0, 2),\n    ...videosByCategory.general.slice(0, 1)\n  ];\n\n  // Remove duplicates based on URL\n  const uniqueVideos = combinedVideos.filter((video, index, self) => \n    index === self.findIndex(v => v.url === video.url)\n  );\n\n  // Final filtering and sorting\n  return uniqueVideos\n    .filter(video => video.viewCount > 1000) // Filter out very low view count videos\n    .sort((a, b) => {\n      // Sort by relevance score first, then by view count\n      if (Math.abs(a.relevanceScore - b.relevanceScore) > 0.1) {\n        return b.relevanceScore - a.relevanceScore;\n      }\n      return b.viewCount - a.viewCount;\n    })\n    .slice(0, 10); // Final limit to 10 videos\n}\n\nexport async function POST(request) {\n  try {\n    const { projectIdea } = await request.json();\n\n    if (!projectIdea || projectIdea.trim().length === 0) {\n      return NextResponse.json({ error: 'Project idea is required' }, { status: 400 });\n    }\n\n    // Validate API keys\n    if (!process.env.GEMINI_API_KEY) {\n      console.error('GEMINI_API_KEY is not set');\n      return NextResponse.json({ error: 'API configuration error' }, { status: 500 });\n    }\n\n    console.log('Making request to Gemini API for project generation...');\n\n    const prompt = `\nYou are an expert full-stack software architect, AI consultant, and technical project planner.\nA user has described their project idea in natural language:\n\n\"${projectIdea}\"\n\nYour task is to deeply analyze this idea — whether it's a simple utility, a full SaaS platform, an AI-driven application, a blockchain dApp, or a UI/UX design system.\nProvide a comprehensive, language-agnostic project breakdown in structured JSON format.\n\n⚠️ You must:\n\nSupport all popular tech stacks: JavaScript/TypeScript, Python, Java, Dart/Flutter, Swift, Solidity, R, Rust, Go, etc.\n\nInclude recommendations for AI/ML, data analytics, blockchain, and design-oriented projects where relevant\n\nRecommend only modern, well-maintained, and production-ready tools and libraries (2024–2025)\n\nEnsure every step is practical, structured, and developer-actionable\n\n**ENHANCED ROADMAP REQUIREMENTS:**\n- Each phase should include detailed terminal commands for package installation\n- Provide actual code snippets for setup and configuration\n- Include file structure examples\n- Add estimated time duration for each phase\n- Include prerequisites and dependencies\n- Provide troubleshooting tips for common issues\n- Add testing commands and validation steps\n\nReturn ONLY a valid JSON object (no extra text), using the following format:\n\n{\n  \"mindMap\": {\n    \"name\": \"Project Name\",\n    \"children\": [\n      {\n        \"name\": \"Major Component 1\",\n        \"children\": [\n          { \"name\": \"Sub-component 1.1\" },\n          { \"name\": \"Sub-component 1.2\" }\n        ]\n      }\n    ]\n  },\n  \"roadmap\": [\n    {\n      \"phase\": \"Phase 1: Project Setup & Environment\",\n      \"description\": \"Set up the development environment and project structure\",\n      \"duration\": \"2-4 hours\",\n      \"difficulty\": \"Beginner\",\n      \"prerequisites\": [\"Node.js v18+\", \"Git\", \"VS Code\"],\n      \"steps\": [\n        {\n          \"title\": \"Initialize Project\",\n          \"description\": \"Create project directory and initialize package.json\",\n          \"type\": \"terminal\",\n          \"commands\": [\n            \"mkdir my-project && cd my-project\",\n            \"npm init -y\",\n            \"git init\"\n          ]\n        },\n        {\n          \"title\": \"Install Dependencies\",\n          \"description\": \"Install core packages and development tools\",\n          \"type\": \"terminal\",\n          \"commands\": [\n            \"npm install next react react-dom\",\n            \"npm install -D tailwindcss postcss autoprefixer\"\n          ]\n        }\n      ],\n      \"troubleshooting\": [\n        \"If Node.js version errors occur, use nvm to switch versions\"\n      ],\n      \"validation\": [\n        \"Project starts without errors\",\n        \"localhost:3000 loads successfully\"\n      ]\n    }\n  ],\n  \"techStack\": {\n    \"frontend\": [\"React\", \"Next.js\", \"Tailwind CSS\"],\n    \"backend\": [\"Node.js\", \"Express\"],\n    \"database\": [\"PostgreSQL\"],\n    \"devops\": [\"Docker\", \"GitHub Actions\"],\n    \"deployment\": [\"Vercel\", \"Railway\"]\n  },\n  \"packages\": {\n    \"npm\": [\"next\", \"react\", \"axios\", \"tailwindcss\"],\n    \"python\": [],\n    \"tools\": [\"VS Code\", \"Postman\", \"Figma\", \"Git\"]\n  },\n  \"documentation\": [\n    {\n      \"title\": \"Next.js Documentation\",\n      \"url\": \"https://nextjs.org/docs\",\n      \"description\": \"Official Next.js guide and API docs\"\n    }\n  ],\n  \"quickStart\": {\n    \"description\": \"Get started with this project in under 5 minutes\",\n    \"commands\": [\n      \"git clone <repository-url>\",\n      \"npm install\",\n      \"npm run dev\"\n    ],\n    \"notes\": [\n      \"Make sure to update environment variables\",\n      \"Visit http://localhost:3000 to see your project\"\n    ]\n  }\n}`;\n\n    // Gemini API request\n    const requestBody = {\n      contents: [{\n        parts: [{\n          text: prompt\n        }]\n      }],\n      generationConfig: {\n        temperature: 0.7,\n        topK: 40,\n        topP: 0.95,\n        maxOutputTokens: 8192,\n        responseMimeType: \"text/plain\"\n      },\n      safetySettings: [\n        {\n          category: \"HARM_CATEGORY_HARASSMENT\",\n          threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n        },\n        {\n          category: \"HARM_CATEGORY_HATE_SPEECH\",\n          threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n        },\n        {\n          category: \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n          threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n        },\n        {\n          category: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n          threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n        }\n      ]\n    };\n\n    const response = await fetch(\n      `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=${process.env.GEMINI_API_KEY}`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      }\n    );\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => null);\n      console.error('Gemini API error:', response.status, errorData);\n\n      if (response.status === 401) {\n        return NextResponse.json({ error: 'Invalid API key configuration' }, { status: 500 });\n      } else if (response.status === 429) {\n        return NextResponse.json({ error: 'API rate limit exceeded. Please try again in a few minutes.' }, { status: 500 });\n      } else if (response.status === 403) {\n        return NextResponse.json({ error: 'API quota exceeded or access denied.' }, { status: 500 });\n      }\n\n      return NextResponse.json({ error: 'Failed to connect to Gemini API' }, { status: 500 });\n    }\n\n    const data = await response.json();\n    console.log('Gemini API response received');\n\n    if (!data.candidates || data.candidates.length === 0) {\n      return NextResponse.json({ error: 'No response from AI model' }, { status: 500 });\n    }\n\n    const content = data.candidates[0].content.parts[0].text;\n\n    // Enhanced JSON extraction\n    let jsonMatch = content.match(/\\{[\\s\\S]*\\}/);\n    if (!jsonMatch) {\n      const codeBlockMatch = content.match(/```(?:json)?\\s*(\\{[\\s\\S]*\\})\\s*```/);\n      if (codeBlockMatch) {\n        jsonMatch = [codeBlockMatch[1]];\n      }\n    }\n\n    if (!jsonMatch) {\n      console.error('No JSON found in AI response');\n      return NextResponse.json({ error: 'Invalid response format from AI service' }, { status: 500 });\n    }\n\n    let projectData;\n    try {\n      projectData = JSON.parse(jsonMatch[0]);\n    } catch (parseError) {\n      console.error('JSON parsing error:', parseError);\n      return NextResponse.json({ error: 'Failed to parse AI response' }, { status: 500 });\n    }\n\n    // Validate required fields\n    const requiredFields = ['mindMap', 'roadmap', 'techStack', 'packages', 'documentation'];\n    for (const field of requiredFields) {\n      if (!projectData[field]) {\n        projectData[field] = getDefaultValue(field);\n      }\n    }\n\n    // **INTELLIGENT YOUTUBE VIDEO FETCHING**\n    console.log('Starting intelligent YouTube video analysis and fetching...');\n    let youtubeResources = [];\n\n    try {\n      youtubeResources = await fetchProjectRelevantVideos(projectData, projectIdea);\n      console.log(`Successfully fetched ${youtubeResources.length} relevant YouTube videos`);\n    } catch (youtubeError) {\n      console.error('YouTube video fetching error:', youtubeError);\n      youtubeResources = [];\n    }\n\n    // Fallback if no videos found\n    if (youtubeResources.length === 0) {\n      console.log('No relevant videos found, creating fallback search links');\n      const fallbackQueries = await generateIntelligentSearchQueries(projectData, projectIdea);\n\n      youtubeResources = fallbackQueries.slice(0, 3).map(query => ({\n        title: `Search: ${query}`,\n        channel: \"YouTube Search\",\n        url: `https://youtube.com/results?search_query=${encodeURIComponent(query)}`,\n        description: `Click to search for tutorials about: ${query}`,\n        thumbnail: null,\n        publishedAt: new Date().toISOString(),\n        viewCount: 0,\n        duration: \"Search\",\n        relevanceScore: 1,\n        isSearchLink: true\n      }));\n    }\n\n    // Enhanced response with metadata\n    const enhancedResponse = {\n      ...projectData,\n      youtubeResources,\n      metadata: {\n        model: 'gemini-2.0-flash-exp',\n        timestamp: new Date().toISOString(),\n        tokens_used: data.usageMetadata?.totalTokenCount || 'N/A',\n        youtube_videos_found: youtubeResources.filter(v => !v.isSearchLink).length,\n        search_queries_generated: (await generateIntelligentSearchQueries(projectData, projectIdea)).length,\n        project_analysis: analyzeProject(projectIdea, Object.values(projectData.techStack || {}).flat())\n      }\n    };\n\n    return NextResponse.json(enhancedResponse);\n\n  } catch (error) {\n    console.error('Project generation API error:', error);\n\n    if (error.name === 'AbortError') {\n      return NextResponse.json({ error: 'Request timeout. Please try again.' }, { status: 500 });\n    }\n\n    return NextResponse.json({\n      error: 'Failed to generate project guide',\n      details: process.env.NODE_ENV === 'development' ? error.message : 'Please try again later'\n    }, { status: 500 });\n  }\n}\n\n// Helper function for default values\nfunction getDefaultValue(field) {\n  const defaults = {\n    mindMap: { name: \"Project\", children: [] },\n    roadmap: [],\n    techStack: {},\n    packages: { npm: [], tools: [] },\n    documentation: [],\n    youtubeResources: [],\n    quickStart: {\n      description: \"Quick setup commands\",\n      commands: [\"npm install\", \"npm run dev\"],\n      notes: [\"Check the documentation for detailed setup\"]\n    }\n  };\n  return defaults[field] || null;\n}"],"names":[],"mappings":"AAAA,oCAAoC;;;;AACpC;;AAEA,gEAAgE;AAChE,eAAe,mBAAmB,WAAW,EAAE,aAAa,CAAC;IAC3D,IAAI;QACF,IAAI,CAAC,QAAQ,GAAG,CAAC,eAAe,EAAE;YAChC,QAAQ,IAAI,CAAC;YACb,OAAO,EAAE;QACX;QAEA,gDAAgD;QAChD,MAAM,YAAY,CAAC,4DAA4D,EAAE,mBAAmB,aAAa,uBAAuB,EAAE,WAAW,8DAA8D,EAAE,QAAQ,GAAG,CAAC,eAAe,EAAE;QAElP,MAAM,WAAW,MAAM,MAAM;QAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,QAAQ,KAAK,CAAC,sBAAsB,SAAS,MAAM,EAAE,MAAM,SAAS,IAAI;YACxE,OAAO,EAAE;QACX;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,MAAM,KAAK,GAAG;YAC1C,QAAQ,GAAG,CAAC,CAAC,2BAA2B,EAAE,aAAa;YACvD,OAAO,EAAE;QACX;QAEA,oDAAoD;QACpD,MAAM,WAAW,KAAK,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,KAAK,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC;QAC9D,MAAM,aAAa,CAAC,+EAA+E,EAAE,SAAS,KAAK,EAAE,QAAQ,GAAG,CAAC,eAAe,EAAE;QAElJ,MAAM,kBAAkB,MAAM,MAAM;QACpC,MAAM,cAAc,gBAAgB,EAAE,GAAG,MAAM,gBAAgB,IAAI,KAAK;YAAE,OAAO,EAAE;QAAC;QAEpF,OAAO,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM;YAC3B,MAAM,UAAU,YAAY,KAAK,EAAE,CAAC,MAAM;YAC1C,MAAM,YAAY,SAAS,YAAY,YAAY,SAAS,QAAQ,UAAU,CAAC,SAAS,IAAI;YAC5F,MAAM,WAAW,SAAS,gBAAgB,YAAY;YAEtD,OAAO;gBACL,OAAO,KAAK,OAAO,CAAC,KAAK;gBACzB,SAAS,KAAK,OAAO,CAAC,YAAY;gBAClC,KAAK,CAAC,gCAAgC,EAAE,KAAK,EAAE,CAAC,OAAO,EAAE;gBACzD,aAAa,KAAK,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,OAAO;gBAC1D,WAAW,KAAK,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,KAAK,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE;gBACnF,aAAa,KAAK,OAAO,CAAC,WAAW;gBACrC;gBACA;gBACA,gBAAgB,wBAAwB,MAAM;YAChD;QACF,GAAG,MAAM,CAAC,CAAA,QAAS,MAAM,cAAc,GAAG,KAAK,kCAAkC;SAC9E,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,cAAc,GAAG,EAAE,cAAc,GAAG,oBAAoB;IAE9E,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,EAAE;IACX;AACF;AAEA,qEAAqE;AACrE,SAAS,wBAAwB,KAAK,EAAE,WAAW;IACjD,MAAM,aAAa,YAAY,WAAW,GAAG,KAAK,CAAC,KAAK,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,GAAG;IACrF,MAAM,QAAQ,MAAM,OAAO,CAAC,KAAK,CAAC,WAAW;IAC7C,MAAM,cAAc,MAAM,OAAO,CAAC,WAAW,CAAC,WAAW;IACzD,MAAM,UAAU,MAAM,OAAO,CAAC,YAAY,CAAC,WAAW;IAEtD,IAAI,QAAQ;IAEZ,WAAW,OAAO,CAAC,CAAA;QACjB,IAAI,MAAM,QAAQ,CAAC,OAAO,SAAS;QACnC,IAAI,YAAY,QAAQ,CAAC,OAAO,SAAS;QACzC,IAAI,QAAQ,QAAQ,CAAC,OAAO,SAAS;IACvC;IAEA,uDAAuD;IACvD,MAAM,sBAAsB;QAAC;QAAY;QAAU;QAAS;QAAS;QAAU;QAAU;KAAc;IACvG,MAAM,sBAAsB;QAAC;QAAgB;QAAY;QAAa;QAAyB;QAAa;QAAgB;KAAqB;IAEjJ,oBAAoB,OAAO,CAAC,CAAA;QAC1B,IAAI,MAAM,QAAQ,CAAC,YAAY,YAAY,QAAQ,CAAC,UAAU,SAAS;IACzE;IAEA,oBAAoB,OAAO,CAAC,CAAA;QAC1B,IAAI,QAAQ,QAAQ,CAAC,cAAc,SAAS;IAC9C;IAEA,OAAO,KAAK,GAAG,CAAC,QAAQ,WAAW,MAAM,EAAE,IAAI,mBAAmB;AACpE;AAEA,oEAAoE;AACpE,eAAe,iCAAiC,WAAW,EAAE,WAAW;IACtE,MAAM,UAAU,EAAE;IAElB,uCAAuC;IACvC,MAAM,kBAAkB,EAAE;IAC1B,IAAI,YAAY,SAAS,EAAE;QACzB,OAAO,MAAM,CAAC,YAAY,SAAS,EAAE,OAAO,CAAC,CAAA;YAC3C,IAAI,MAAM,OAAO,CAAC,YAAY;gBAC5B,gBAAgB,IAAI,IAAI;YAC1B;QACF;IACF;IAEA,sCAAsC;IACtC,MAAM,kBAAkB,eAAe,aAAa;IAEpD,QAAQ,GAAG,CAAC,qBAAqB;IAEjC,4CAA4C;IAC5C,IAAI,gBAAgB,WAAW,KAAK,WAAW;QAC7C,QAAQ,IAAI,CAAC;YACX,OAAO,GAAG,gBAAgB,WAAW,CAAC,CAAC,EAAE,gBAAgB,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,cAAc,CAAC;YAC9F,UAAU;YACV,UAAU;QACZ;QAEA,QAAQ,IAAI,CAAC;YACX,OAAO,CAAC,MAAM,EAAE,gBAAgB,WAAW,CAAC,CAAC,EAAE,eAAe,CAAC,EAAE,CAAC,aAAa,CAAC;YAChF,UAAU;YACV,UAAU;QACZ;IACF;IAEA,4CAA4C;IAC5C,IAAI,gBAAgB,MAAM,IAAI,GAAG;QAC/B,MAAM,YAAY,gBAAgB,KAAK,CAAC,GAAG;QAC3C,QAAQ,IAAI,CAAC;YACX,OAAO,GAAG,UAAU,IAAI,CAAC,KAAK,oBAAoB,CAAC;YACnD,UAAU;YACV,UAAU;QACZ;QAEA,iCAAiC;QACjC,MAAM,WAAW,gBAAgB;QACjC,MAAM,UAAU,eAAe;QAC/B,IAAI,YAAY,SAAS;YACvB,QAAQ,IAAI,CAAC;gBACX,OAAO,GAAG,SAAS,CAAC,EAAE,QAAQ,0BAA0B,CAAC;gBACzD,UAAU;gBACV,UAAU;YACZ;QACF;IACF;IAEA,+CAA+C;IAC/C,gBAAgB,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC,CAAA;QAClC,QAAQ,IAAI,CAAC;YACX,OAAO,GAAG,KAAK,4BAA4B,CAAC;YAC5C,UAAU;YACV,UAAU;QACZ;IACF;IAEA,wCAAwC;IACxC,gBAAgB,OAAO,CAAC,OAAO,CAAC,CAAA;QAC9B,QAAQ,IAAI,CAAC;YACX,OAAO,GAAG,OAAO,sBAAsB,EAAE,eAAe,CAAC,EAAE,IAAI,eAAe;YAC9E,UAAU;YACV,UAAU;QACZ;IACF;IAEA,4CAA4C;IAC5C,IAAI,gBAAgB,UAAU,KAAK,YAAY;QAC7C,gBAAgB,gBAAgB,CAAC,OAAO,CAAC,CAAA;YACvC,QAAQ,IAAI,CAAC;gBACX,OAAO,GAAG,QAAQ,CAAC,EAAE,eAAe,CAAC,EAAE,CAAC,wBAAwB,CAAC;gBACjE,UAAU;gBACV,UAAU;YACZ;QACF;IACF;IAEA,0CAA0C;IAC1C,MAAM,gBAAgB;QAAE,QAAQ;QAAG,UAAU;QAAG,OAAO;IAAE;IACzD,OAAO,QACJ,IAAI,CAAC,CAAC,GAAG,IAAM,aAAa,CAAC,EAAE,QAAQ,CAAC,GAAG,aAAa,CAAC,EAAE,QAAQ,CAAC,EACpE,KAAK,CAAC,GAAG,GAAG,yBAAyB;KACrC,GAAG,CAAC,CAAA,IAAK,EAAE,KAAK;AACrB;AAEA,qCAAqC;AACrC,SAAS,eAAe,WAAW,EAAE,YAAY;IAC/C,MAAM,YAAY,YAAY,WAAW;IACzC,MAAM,WAAW;QACf,aAAa;QACb,SAAS,EAAE;QACX,YAAY;QACZ,kBAAkB,EAAE;IACtB;IAEA,yBAAyB;IACzB,MAAM,eAAe;QACnB,cAAc;YAAC;YAAQ;YAAS;YAAe;YAAQ;YAAW;SAAU;QAC5E,gBAAgB;YAAC;YAAU;YAAQ;YAAa;YAAQ;YAAQ;SAAS;QACzE,QAAQ;YAAC;YAAQ;YAAO;YAAW;YAAW;SAAa;QAC3D,aAAa;YAAC;YAAa;YAAS;YAAa;YAAW;SAAY;QACxE,cAAc;YAAC;YAAU;YAAO;YAAO;YAAW;SAAS;QAC3D,WAAW;YAAC;YAAW;YAAU;YAAe;SAAM;QACtD,OAAO;YAAC;YAAO;YAAQ;YAAW;YAAW;SAAU;QACvD,UAAU;YAAC;YAAM;YAAM;YAAoB;YAAU;SAAU;QAC/D,QAAQ;YAAC;YAAQ;YAAU;YAAU;SAAS;QAC9C,aAAa;YAAC;YAAa;YAAiB;SAAS;QACrD,gBAAgB;YAAC;YAAW;YAAa;SAAc;IACzD;IAEA,KAAK,MAAM,CAAC,MAAM,SAAS,IAAI,OAAO,OAAO,CAAC,cAAe;QAC3D,IAAI,SAAS,IAAI,CAAC,CAAA,UAAW,UAAU,QAAQ,CAAC,WAAW;YACzD,SAAS,WAAW,GAAG;YACvB;QACF;IACF;IAEA,mBAAmB;IACnB,MAAM,UAAU;QACd,mBAAmB;YAAC;YAAO;YAAW;YAAQ;YAAO;SAAa;QAClE,sBAAsB;YAAC;YAAU;YAAO;YAAO;YAAW;YAAgB;SAAU;QACpF,uBAAuB;YAAC;YAAO;YAAU;YAAY;SAAU;QAC/D,SAAS;YAAC;YAAM;YAAoB;YAAU;SAAgB;QAC9D,cAAc;YAAC;YAAc;YAAU;YAAkB;SAAO;QAChE,UAAU;YAAC;YAAc;YAAU;YAAc;SAAQ;QACzD,gBAAgB;YAAC;YAAQ;YAAa;YAAiB;SAAa;IACtE;IAEA,KAAK,MAAM,CAAC,QAAQ,SAAS,IAAI,OAAO,OAAO,CAAC,SAAU;QACxD,IAAI,SAAS,IAAI,CAAC,CAAA,UAAW,UAAU,QAAQ,CAAC,YAAY,aAAa,IAAI,CAAC,CAAA,OAAQ,KAAK,WAAW,GAAG,QAAQ,CAAC,YAAY;YAC5H,SAAS,OAAO,CAAC,IAAI,CAAC;QACxB;IACF;IAEA,wBAAwB;IACxB,MAAM,uBAAuB;QAC3B,UAAU;YAAC;YAAgB;YAAe;YAAY;YAAc;YAAa;YAAoB;SAAa;QAClH,cAAc;YAAC;YAAkB;YAAY;YAAO;YAAW;SAAa;QAC5E,UAAU;YAAC;YAAU;YAAS;YAAY;SAAW;IACvD;IAEA,KAAK,MAAM,CAAC,OAAO,WAAW,IAAI,OAAO,OAAO,CAAC,sBAAuB;QACtE,IAAI,WAAW,IAAI,CAAC,CAAA,YAAa,UAAU,QAAQ,CAAC,aAAa;YAC/D,SAAS,UAAU,GAAG;YACtB;QACF;IACF;IAEA,8BAA8B;IAC9B,MAAM,mBAAmB;QAAC;QAAkB;QAAiB;QAAW;QAAW;QAAc;QAAgB;KAAW;IAC5H,SAAS,gBAAgB,GAAG,iBAAiB,MAAM,CAAC,CAAA,UAAW,UAAU,QAAQ,CAAC;IAElF,OAAO;AACT;AAEA,iDAAiD;AACjD,SAAS,gBAAgB,YAAY;IACnC,MAAM,gBAAgB;QAAC;QAAS;QAAO;QAAW;QAAU;QAAW;QAAQ;QAAQ;QAAO;KAAa;IAC3G,OAAO,aAAa,IAAI,CAAC,CAAA,OAAQ,cAAc,IAAI,CAAC,CAAA,KAAM,KAAK,WAAW,GAAG,QAAQ,CAAC,GAAG,WAAW;AACtG;AAEA,SAAS,eAAe,YAAY;IAClC,MAAM,eAAe;QAAC;QAAW;QAAW;QAAU;QAAS;QAAU;QAAW;QAAiB;KAAU;IAC/G,OAAO,aAAa,IAAI,CAAC,CAAA,OAAQ,aAAa,IAAI,CAAC,CAAA,KAAM,KAAK,WAAW,GAAG,QAAQ,CAAC,GAAG,WAAW;AACrG;AAEA,kDAAkD;AAClD,eAAe,2BAA2B,WAAW,EAAE,WAAW;IAChE,QAAQ,GAAG,CAAC;IAEZ,MAAM,gBAAgB,MAAM,iCAAiC,aAAa;IAC1E,QAAQ,GAAG,CAAC,6BAA6B;IAEzC,MAAM,mBAAmB;QACvB,iBAAiB,EAAE;QACnB,WAAW,EAAE;QACb,YAAY,EAAE;QACd,SAAS,EAAE;IACb;IAEA,qDAAqD;IACrD,KAAK,MAAM,SAAS,cAAe;QACjC,IAAI;YACF,MAAM,SAAS,MAAM,mBAAmB,OAAO;YAE/C,IAAI,OAAO,MAAM,GAAG,GAAG;gBACrB,wCAAwC;gBACxC,IAAI,MAAM,QAAQ,CAAC,eAAe,CAAC,MAAM,QAAQ,CAAC,YAAY,MAAM,QAAQ,CAAC,UAAU,GAAG;oBACxF,iBAAiB,eAAe,CAAC,IAAI,IAAI;gBAC3C,OAAO,IAAI,MAAM,QAAQ,CAAC,iBAAiB,MAAM,QAAQ,CAAC,iBAAiB;oBACzE,iBAAiB,SAAS,CAAC,IAAI,IAAI;gBACrC,OAAO;oBACL,iBAAiB,UAAU,CAAC,IAAI,IAAI;gBACtC;YACF;YAEA,mCAAmC;YACnC,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACnD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,MAAM,EAAE,CAAC,EAAE;QAC/D;IACF;IAEA,gCAAgC;IAChC,IAAI,iBAAiB;WAChB,iBAAiB,eAAe,CAAC,KAAK,CAAC,GAAG;WAC1C,iBAAiB,SAAS,CAAC,KAAK,CAAC,GAAG;WACpC,iBAAiB,UAAU,CAAC,KAAK,CAAC,GAAG;WACrC,iBAAiB,OAAO,CAAC,KAAK,CAAC,GAAG;KACtC;IAED,iCAAiC;IACjC,MAAM,eAAe,eAAe,MAAM,CAAC,CAAC,OAAO,OAAO,OACxD,UAAU,KAAK,SAAS,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK,MAAM,GAAG;IAGnD,8BAA8B;IAC9B,OAAO,aACJ,MAAM,CAAC,CAAA,QAAS,MAAM,SAAS,GAAG,MAAM,wCAAwC;KAChF,IAAI,CAAC,CAAC,GAAG;QACR,oDAAoD;QACpD,IAAI,KAAK,GAAG,CAAC,EAAE,cAAc,GAAG,EAAE,cAAc,IAAI,KAAK;YACvD,OAAO,EAAE,cAAc,GAAG,EAAE,cAAc;QAC5C;QACA,OAAO,EAAE,SAAS,GAAG,EAAE,SAAS;IAClC,GACC,KAAK,CAAC,GAAG,KAAK,2BAA2B;AAC9C;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE1C,IAAI,CAAC,eAAe,YAAY,IAAI,GAAG,MAAM,KAAK,GAAG;YACnD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA2B,GAAG;gBAAE,QAAQ;YAAI;QAChF;QAEA,oBAAoB;QACpB,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;YAC/B,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA0B,GAAG;gBAAE,QAAQ;YAAI;QAC/E;QAEA,QAAQ,GAAG,CAAC;QAEZ,MAAM,SAAS,CAAC;;;;CAInB,EAAE,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2Gd,CAAC;QAEE,qBAAqB;QACrB,MAAM,cAAc;YAClB,UAAU;gBAAC;oBACT,OAAO;wBAAC;4BACN,MAAM;wBACR;qBAAE;gBACJ;aAAE;YACF,kBAAkB;gBAChB,aAAa;gBACb,MAAM;gBACN,MAAM;gBACN,iBAAiB;gBACjB,kBAAkB;YACpB;YACA,gBAAgB;gBACd;oBACE,UAAU;oBACV,WAAW;gBACb;gBACA;oBACE,UAAU;oBACV,WAAW;gBACb;gBACA;oBACE,UAAU;oBACV,WAAW;gBACb;gBACA;oBACE,UAAU;oBACV,WAAW;gBACb;aACD;QACH;QAEA,MAAM,WAAW,MAAM,MACrB,CAAC,iGAAiG,EAAE,QAAQ,GAAG,CAAC,cAAc,EAAE,EAChI;YACE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAGF,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM;YACpD,QAAQ,KAAK,CAAC,qBAAqB,SAAS,MAAM,EAAE;YAEpD,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAAgC,GAAG;oBAAE,QAAQ;gBAAI;YACrF,OAAO,IAAI,SAAS,MAAM,KAAK,KAAK;gBAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAA8D,GAAG;oBAAE,QAAQ;gBAAI;YACnH,OAAO,IAAI,SAAS,MAAM,KAAK,KAAK;gBAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAAuC,GAAG;oBAAE,QAAQ;gBAAI;YAC5F;YAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAkC,GAAG;gBAAE,QAAQ;YAAI;QACvF;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC;QAEZ,IAAI,CAAC,KAAK,UAAU,IAAI,KAAK,UAAU,CAAC,MAAM,KAAK,GAAG;YACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA4B,GAAG;gBAAE,QAAQ;YAAI;QACjF;QAEA,MAAM,UAAU,KAAK,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI;QAExD,2BAA2B;QAC3B,IAAI,YAAY,QAAQ,KAAK,CAAC;QAC9B,IAAI,CAAC,WAAW;YACd,MAAM,iBAAiB,QAAQ,KAAK,CAAC;YACrC,IAAI,gBAAgB;gBAClB,YAAY;oBAAC,cAAc,CAAC,EAAE;iBAAC;YACjC;QACF;QAEA,IAAI,CAAC,WAAW;YACd,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA0C,GAAG;gBAAE,QAAQ;YAAI;QAC/F;QAEA,IAAI;QACJ,IAAI;YACF,cAAc,KAAK,KAAK,CAAC,SAAS,CAAC,EAAE;QACvC,EAAE,OAAO,YAAY;YACnB,QAAQ,KAAK,CAAC,uBAAuB;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA8B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,2BAA2B;QAC3B,MAAM,iBAAiB;YAAC;YAAW;YAAW;YAAa;YAAY;SAAgB;QACvF,KAAK,MAAM,SAAS,eAAgB;YAClC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBACvB,WAAW,CAAC,MAAM,GAAG,gBAAgB;YACvC;QACF;QAEA,yCAAyC;QACzC,QAAQ,GAAG,CAAC;QACZ,IAAI,mBAAmB,EAAE;QAEzB,IAAI;YACF,mBAAmB,MAAM,2BAA2B,aAAa;YACjE,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,iBAAiB,MAAM,CAAC,wBAAwB,CAAC;QACvF,EAAE,OAAO,cAAc;YACrB,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,mBAAmB,EAAE;QACvB;QAEA,8BAA8B;QAC9B,IAAI,iBAAiB,MAAM,KAAK,GAAG;YACjC,QAAQ,GAAG,CAAC;YACZ,MAAM,kBAAkB,MAAM,iCAAiC,aAAa;YAE5E,mBAAmB,gBAAgB,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA,QAAS,CAAC;oBAC3D,OAAO,CAAC,QAAQ,EAAE,OAAO;oBACzB,SAAS;oBACT,KAAK,CAAC,yCAAyC,EAAE,mBAAmB,QAAQ;oBAC5E,aAAa,CAAC,qCAAqC,EAAE,OAAO;oBAC5D,WAAW;oBACX,aAAa,IAAI,OAAO,WAAW;oBACnC,WAAW;oBACX,UAAU;oBACV,gBAAgB;oBAChB,cAAc;gBAChB,CAAC;QACH;QAEA,kCAAkC;QAClC,MAAM,mBAAmB;YACvB,GAAG,WAAW;YACd;YACA,UAAU;gBACR,OAAO;gBACP,WAAW,IAAI,OAAO,WAAW;gBACjC,aAAa,KAAK,aAAa,EAAE,mBAAmB;gBACpD,sBAAsB,iBAAiB,MAAM,CAAC,CAAA,IAAK,CAAC,EAAE,YAAY,EAAE,MAAM;gBAC1E,0BAA0B,CAAC,MAAM,iCAAiC,aAAa,YAAY,EAAE,MAAM;gBACnG,kBAAkB,eAAe,aAAa,OAAO,MAAM,CAAC,YAAY,SAAS,IAAI,CAAC,GAAG,IAAI;YAC/F;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAE/C,IAAI,MAAM,IAAI,KAAK,cAAc;YAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAqC,GAAG;gBAAE,QAAQ;YAAI;QAC1F;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,OAAO;YACP,SAAS,uCAAyC,MAAM,OAAO;QACjE,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF;AAEA,qCAAqC;AACrC,SAAS,gBAAgB,KAAK;IAC5B,MAAM,WAAW;QACf,SAAS;YAAE,MAAM;YAAW,UAAU,EAAE;QAAC;QACzC,SAAS,EAAE;QACX,WAAW,CAAC;QACZ,UAAU;YAAE,KAAK,EAAE;YAAE,OAAO,EAAE;QAAC;QAC/B,eAAe,EAAE;QACjB,kBAAkB,EAAE;QACpB,YAAY;YACV,aAAa;YACb,UAAU;gBAAC;gBAAe;aAAc;YACxC,OAAO;gBAAC;aAA6C;QACvD;IACF;IACA,OAAO,QAAQ,CAAC,MAAM,IAAI;AAC5B","debugId":null}}]
}