{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/api/generate-project/route.js"],"sourcesContent":["// app/api/generate-project/route.js\nimport { NextResponse } from 'next/server';\n\nexport async function POST(request) {\n  try {\n    const { projectIdea } = await request.json();\n\n    if (!projectIdea || projectIdea.trim().length === 0) {\n      return NextResponse.json({ error: 'Project idea is required' }, { status: 400 });\n    }\n\n    // Validate API key exists\n    if (!process.env.OPENROUTER_API_KEY) {\n      console.error('OPENROUTER_API_KEY is not set');\n      return NextResponse.json({ error: 'API configuration error' }, { status: 500 });\n    }\n\n    const prompt = `\nYou are an expert project consultant and technical architect. A user has described their project idea: \"${projectIdea}\"\n\nPlease provide a comprehensive project analysis in the following JSON format. Make sure to return ONLY valid JSON without any additional text:\n\n{\n  \"mindMap\": {\n    \"name\": \"Project Name\",\n    \"children\": [\n      {\n        \"name\": \"Major Component 1\",\n        \"children\": [\n          { \"name\": \"Sub-component 1.1\" },\n          { \"name\": \"Sub-component 1.2\" }\n        ]\n      },\n      {\n        \"name\": \"Major Component 2\",\n        \"children\": [\n          { \"name\": \"Sub-component 2.1\" },\n          { \"name\": \"Sub-component 2.2\" }\n        ]\n      }\n    ]\n  },\n  \"roadmap\": [\n    {\n      \"phase\": \"Phase Name\",\n      \"description\": \"What this phase accomplishes\",\n      \"tasks\": [\"Task 1\", \"Task 2\", \"Task 3\"]\n    }\n  ],\n  \"techStack\": {\n    \"frontend\": [\"React\", \"Next.js\"],\n    \"backend\": [\"Node.js\", \"Express\"],\n    \"database\": [\"PostgreSQL\"],\n    \"deployment\": [\"Vercel\", \"Railway\"]\n  },\n  \"packages\": {\n    \"npm\": [\"next\", \"react\", \"tailwindcss\"],\n    \"tools\": [\"VS Code\", \"Git\", \"Postman\"]\n  },\n  \"documentation\": [\n    {\n      \"title\": \"Next.js Documentation\",\n      \"url\": \"https://nextjs.org/docs\",\n      \"description\": \"Complete guide to Next.js\"\n    }\n  ],\n  \"youtubeResources\": [\n    {\n      \"title\": \"Video Title\",\n      \"channel\": \"Channel Name\",\n      \"url\": \"https://youtube.com/watch?v=example\",\n      \"description\": \"What the video covers\"\n    }\n  ]\n}\n\nMake sure the response is practical, modern, and includes current best practices for 2024-2025. Focus on popular, well-maintained technologies and provide realistic development phases. Return ONLY the JSON object, no additional text.\n`;\n\n    const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}`,\n        'Content-Type': 'application/json',\n        'HTTP-Referer': process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000',\n        'X-Title': 'RoadmapFinder Project Helper Bot',\n      },\n      body: JSON.stringify({\n        model: 'anthropic/claude-3.5-sonnet',\n        messages: [\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        temperature: 0.7,\n        max_tokens: 4000,\n      }),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`OpenRouter API error: ${response.status} - ${errorText}`);\n      return NextResponse.json(\n        { error: `API request failed: ${response.status}` },\n        { status: 500 }\n      );\n    }\n\n    const data = await response.json();\n\n    if (!data.choices || !data.choices[0] || !data.choices[0].message) {\n      console.error('Invalid response structure from OpenRouter API');\n      return NextResponse.json(\n        { error: 'Invalid response from AI service' },\n        { status: 500 }\n      );\n    }\n\n    const content = data.choices[0].message.content;\n\n    // Extract JSON from the response - more robust parsing\n    let jsonMatch = content.match(/\\{[\\s\\S]*\\}/);\n\n    if (!jsonMatch) {\n      // Try to find JSON if it's wrapped in markdown code blocks\n      const codeBlockMatch = content.match(/```(?:json)?\\s*(\\{[\\s\\S]*\\})\\s*```/);\n      if (codeBlockMatch) {\n        jsonMatch = [codeBlockMatch[1]];\n      }\n    }\n\n    if (!jsonMatch) {\n      console.error('No JSON found in AI response:', content);\n      return NextResponse.json(\n        { error: 'Invalid response format from AI service' },\n        { status: 500 }\n      );\n    }\n\n    let projectData;\n    try {\n      projectData = JSON.parse(jsonMatch[0]);\n    } catch (parseError) {\n      console.error('JSON parsing error:', parseError);\n      console.error('Content that failed to parse:', jsonMatch[0]);\n      return NextResponse.json(\n        { error: 'Failed to parse AI response' },\n        { status: 500 }\n      );\n    }\n\n    // Validate the response structure\n    const requiredFields = ['mindMap', 'roadmap', 'techStack', 'packages', 'documentation', 'youtubeResources'];\n    for (const field of requiredFields) {\n      if (!projectData[field]) {\n        console.warn(`Missing field in response: ${field}`);\n        // Set default empty values instead of failing\n        projectData[field] = getDefaultValue(field);\n      }\n    }\n\n    return NextResponse.json(projectData);\n\n  } catch (error) {\n    console.error('Error generating project:', error);\n    return NextResponse.json(\n      { error: 'Failed to generate project guide' },\n      { status: 500 }\n    );\n  }\n}\n\n// Helper function to provide default values for missing fields\nfunction getDefaultValue(field) {\n  const defaults = {\n    mindMap: { name: \"Project\", children: [] },\n    roadmap: [],\n    techStack: {},\n    packages: { npm: [], tools: [] },\n    documentation: [],\n    youtubeResources: []\n  };\n  return defaults[field] || null;\n}"],"names":[],"mappings":"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","debugId":null}}]
}