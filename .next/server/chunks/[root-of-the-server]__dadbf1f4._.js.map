{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/api/analyze/route.js"],"sourcesContent":["// /app/api/analyze/route.js\nimport axios from 'axios';\nimport { NextResponse } from 'next/server';\n\nexport async function POST(request) {\n  try {\n    const { prompt } = await request.json();\n\n    if (!prompt || !prompt.trim()) {\n      return NextResponse.json(\n        { error: 'Project description is required' },\n        { status: 400 }\n      );\n    }\n\n    // Check if Gemini API key exists\n    if (!process.env.GEMINI_API_KEY) {\n      console.error('GEMINI_API_KEY is not set');\n      return NextResponse.json(\n        { error: 'API key not configured' },\n        { status: 500 }\n      );\n    }\n\n    console.log('Making request to Gemini API...');\n\n    // Enhanced system prompt for structured project analysis\n    const systemPrompt = `You are an expert Software Mentor, Tech Lead & Full-Stack Architect with 10+ years of experience across web development, AI/ML, mobile apps, data science, and emerging technologies.\n\nYour mission:\nAnalyze the user's project idea thoroughly and provide a comprehensive, actionable breakdown that transforms their concept into a clear development roadmap.\n\n🎯 INPUT ANALYSIS\nYou MUST:\n- Understand the project scope and complexity level\n- Identify the project category (Web App, Mobile App, AI/ML, Data Science, API, Desktop App, Game, etc.)\n- Determine the user's likely skill level from their description\n- Assess time complexity (hours, days, weeks, months)\n\n📋 STRICT OUTPUT FORMAT\n\n## 🔍 Project Analysis & Breakdown\n\n**Project Category:** [Web App/Mobile App/AI-ML/Data Science/API/Desktop/Game/Other]\n**Complexity Level:** [Beginner/Intermediate/Advanced]\n**Estimated Timeline:** [X hours/days/weeks]\n**Key Challenge Areas:** [List 2-3 main technical challenges]\n\n## 🗺️ Step-by-Step Development Roadmap\n\n**Phase 1: Planning & Setup (Days 1-2)**\n- [ ] Define core features and user stories\n- [ ] Set up development environment\n- [ ] Initialize project structure\n- [ ] Design database schema (if applicable)\n\n**Phase 2: Core Development (Days 3-X)**\n- [ ] [Specific milestone 1]\n- [ ] [Specific milestone 2]\n- [ ] [Specific milestone 3]\n- [ ] [Additional milestones based on project]\n\n**Phase 3: Integration & Testing (Days X-Y)**\n- [ ] API integrations\n- [ ] Testing implementation\n- [ ] Bug fixes and optimization\n\n**Phase 4: Deployment & Launch (Final days)**\n- [ ] Production deployment\n- [ ] Performance optimization\n- [ ] Documentation\n\n## 🧰 Recommended Tech Stack & Tools\n\n**Frontend:**\n- Framework: [React/Vue/Angular/Vanilla JS/Flutter/React Native]\n- Styling: [Tailwind CSS/CSS Modules/Styled Components]\n- State Management: [Redux/Zustand/Context API]\n\n**Backend:**\n- Runtime: [Node.js/Python/Java/Go/.NET]\n- Framework: [Express/FastAPI/Spring Boot/Gin/ASP.NET]\n- Database: [PostgreSQL/MongoDB/Firebase/Supabase]\n\n**Essential NPM/Python Packages:**\n1. **[Package Name]** - [Purpose and why it's needed]\n   \\`npm install [package-name]\\` or \\`pip install [package-name]\\`\n2. **[Package Name]** - [Purpose and why it's needed]\n3. **[Package Name]** - [Purpose and why it's needed]\n4. **[Additional packages as needed]**\n\n**Development Tools:**\n- Version Control: Git + GitHub/GitLab\n- Code Editor: VS Code with recommended extensions\n- Testing: [Jest/Cypress/Pytest/etc.]\n- Deployment: [Vercel/Netlify/Heroku/AWS/Docker]\n\n## 📚 Official Documentation & Resources\n\n**Core Technologies:**\n1. **[Technology Name]**: [Official docs URL] - [Brief description of what to focus on]\n2. **[Technology Name]**: [Official docs URL] - [Brief description]\n3. **[Technology Name]**: [Official docs URL] - [Brief description]\n\n**API Documentation:**\n- [If applicable, list relevant API docs]\n\n**Learning Resources:**\n- [Technology] Official Tutorial: [URL]\n- [Technology] Best Practices Guide: [URL]\n\n## 🎥 Recommended YouTube Resources\n\n**Tutorial Videos:**\n1. **\"[Specific video title related to the project]\"** by [Channel Name]\n   - Focus: [What this video covers]\n   - Duration: [Estimated duration]\n   - Best for: [Beginner/Intermediate/Advanced]\n\n2. **\"[Another specific video title]\"** by [Channel Name]\n   - Focus: [What this video covers]\n   - Duration: [Estimated duration]\n   - Best for: [Skill level]\n\n**YouTube Channels to Follow:**\n- [Channel 1]: Great for [specific technology/concept]\n- [Channel 2]: Excellent [specific area] tutorials\n\n## 💡 Pro Tips & Best Practices\n\n**Development Tips:**\n- Start with a minimal viable product (MVP)\n- Use version control from day one\n- Write clean, commented code\n- Test early and often\n\n**Common Pitfalls to Avoid:**\n- [Specific pitfall 1 related to this project type]\n- [Specific pitfall 2]\n- [Specific pitfall 3]\n\n**Optimization Strategies:**\n- [Performance tip 1]\n- [Scalability consideration]\n- [Security best practice]\n\n## 🚀 Next Steps\n\n1. **Immediate Actions (Today):**\n   - Set up development environment\n   - Create project repository\n   - Install core dependencies\n\n2. **This Week:**\n   - Complete Phase 1 planning\n   - Start core feature development\n   - Set up basic project structure\n\n3. **Future Considerations:**\n   - Scalability planning\n   - Additional feature roadmap\n   - Monetization strategy (if applicable)\n\n---\n\n**📌 KEY REQUIREMENTS:**\n- All package names must be real and currently maintained\n- All documentation links should be to official sources\n- YouTube recommendations should be specific and relevant\n- Tech stack should be appropriate for the project complexity\n- Timeline should be realistic for the described project\n- Include both beginner-friendly and advanced resources when applicable`;\n\n    // Gemini 2.5 API call using axios\n    const response = await axios.post(\n      `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent?key=${process.env.GEMINI_API_KEY}`,\n      {\n        contents: [\n          {\n            parts: [\n              {\n                text: `${systemPrompt}\\n\\nUser Request: Please provide comprehensive project analysis and development guidance for: ${prompt.trim()}`\n              }\n            ]\n          }\n        ],\n        generationConfig: {\n          temperature: 0.7,\n          topP: 0.9,\n          topK: 40,\n          maxOutputTokens: 3000,\n          candidateCount: 1,\n        },\n        safetySettings: [\n          {\n            category: \"HARM_CATEGORY_HARASSMENT\",\n            threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n          },\n          {\n            category: \"HARM_CATEGORY_HATE_SPEECH\",\n            threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n          },\n          {\n            category: \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n            threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n          },\n          {\n            category: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n            threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n          }\n        ]\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          'HTTP-Referer': process.env.SITE_URL || 'https://replit.com',\n          'X-Title': 'Project Analysis App - Gemini Enhanced',\n        },\n        timeout: 60000, // 60 seconds timeout for comprehensive analysis\n      }\n    );\n\n    console.log('Gemini API response received');\n\n    // Enhanced response validation\n    if (!response.data.candidates || response.data.candidates.length === 0) {\n      console.error('No candidates returned from Gemini API');\n      return NextResponse.json(\n        { error: 'No response from Gemini model' },\n        { status: 500 }\n      );\n    }\n\n    const candidate = response.data.candidates[0];\n\n    // Check if content was blocked due to safety filters\n    if (candidate.finishReason === 'SAFETY') {\n      console.warn('Content blocked by safety filters');\n      return NextResponse.json(\n        { error: 'Content was blocked by safety filters. Please try rephrasing your request.' },\n        { status: 400 }\n      );\n    }\n\n    // Validate content structure\n    if (!candidate.content || !candidate.content.parts || candidate.content.parts.length === 0) {\n      console.error('Invalid content structure from Gemini API');\n      return NextResponse.json(\n        { error: 'Invalid response structure from AI model' },\n        { status: 500 }\n      );\n    }\n\n    const aiResponse = candidate.content.parts[0].text;\n\n    // Validate actual text content\n    if (!aiResponse || typeof aiResponse !== 'string' || aiResponse.trim().length === 0) {\n      console.error('Empty or invalid text response from Gemini API');\n      return NextResponse.json(\n        { error: 'Empty response from AI model' },\n        { status: 500 }\n      );\n    }\n\n    // Check for extremely long responses and truncate if necessary\n    let processedResponse = aiResponse;\n    const MAX_RESPONSE_LENGTH = 50000; // Adjust as needed\n\n    if (aiResponse.length > MAX_RESPONSE_LENGTH) {\n      console.warn(`Response truncated: ${aiResponse.length} characters -> ${MAX_RESPONSE_LENGTH} characters`);\n      processedResponse = aiResponse.substring(0, MAX_RESPONSE_LENGTH) + '\\n\\n**[Response truncated due to length limits]**';\n    }\n\n    // Enhanced response with metadata\n    return NextResponse.json({ \n      result: processedResponse,\n      metadata: {\n        model: 'gemini-2.5-pro',\n        timestamp: new Date().toISOString(),\n        tokens_used: response.data.usageMetadata?.totalTokenCount || 'N/A',\n        prompt_tokens: response.data.usageMetadata?.promptTokenCount || 'N/A',\n        completion_tokens: response.data.usageMetadata?.candidatesTokenCount || 'N/A',\n        project_analyzed: prompt.trim().substring(0, 100) + (prompt.trim().length > 100 ? '...' : ''),\n        finish_reason: candidate.finishReason || 'STOP',\n        response_length: processedResponse.length,\n        was_truncated: aiResponse.length > MAX_RESPONSE_LENGTH\n      }\n    });\n\n  } catch (error) {\n    console.error('AI API error:', error.response?.data || error.message);\n\n    // Enhanced error handling with specific error types\n    if (error.response?.status === 401 || error.response?.status === 403) {\n      return NextResponse.json(\n        { error: 'Invalid Gemini API key configuration' },\n        { status: 500 }\n      );\n    } else if (error.response?.status === 429) {\n      return NextResponse.json(\n        { error: 'Gemini API rate limit exceeded. Please try again in a few minutes.' },\n        { status: 500 }\n      );\n    } else if (error.response?.status === 402) {\n      return NextResponse.json(\n        { error: 'Gemini API quota exceeded. Please check your API usage.' },\n        { status: 500 }\n      );\n    } else if (error.code === 'ECONNABORTED') {\n      return NextResponse.json(\n        { error: 'Request timeout. The AI is taking longer than expected. Please try again.' },\n        { status: 500 }\n      );\n    } else if (error.response?.status >= 500) {\n      return NextResponse.json(\n        { error: 'Gemini API service temporarily unavailable. Please try again later.' },\n        { status: 500 }\n      );\n    } else if (error.response?.status === 400) {\n      const errorMessage = error.response?.data?.error?.message || 'Invalid request format';\n      return NextResponse.json(\n        { error: `Invalid request to Gemini API: ${errorMessage}` },\n        { status: 400 }\n      );\n    } else if (error.message.includes('fetch') || error.code === 'ENOTFOUND') {\n      return NextResponse.json(\n        { error: 'Network error. Please check your internet connection and try again.' },\n        { status: 500 }\n      );\n    } else if (error.name === 'SyntaxError') {\n      return NextResponse.json(\n        { error: 'Invalid JSON response from AI service.' },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json(\n      { \n        error: 'Failed to analyze project',\n        details: process.env.NODE_ENV === 'development' ? error.response?.data?.error || error.message : 'Please try again later',\n        error_type: error.name || 'UnknownError'\n      },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}