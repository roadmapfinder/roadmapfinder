{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/api/generate-project/youtube-service.js"],"sourcesContent":["// lib/youtube-service.js\n// Enhanced Multilingual YouTube API Integration Service\n\n/**\n * Deep analysis of project idea using AI-like analysis\n * @param {string} projectIdea - The project idea description\n * @returns {Promise<Object>} Deep analysis object\n */\nasync function deepAnalyzeProjectIdea(projectIdea) {\n  const ideaLower = projectIdea.toLowerCase();\n\n  // Advanced project categorization\n  const projectTypes = {\n    'e-commerce': {\n      keywords: ['shop', 'store', 'marketplace', 'cart', 'payment', 'product', 'checkout', 'inventory', 'order'],\n      complexity: 'intermediate',\n      estimatedDuration: '3-6 months',\n      keyTechnologies: ['payment gateway', 'database', 'authentication', 'cart management']\n    },\n    'social media': {\n      keywords: ['social', 'chat', 'messaging', 'post', 'feed', 'friend', 'follow', 'share', 'comment'],\n      complexity: 'advanced',\n      estimatedDuration: '6-12 months',\n      keyTechnologies: ['real-time communication', 'websockets', 'notification system', 'media handling']\n    },\n    'blog/cms': {\n      keywords: ['blog', 'cms', 'article', 'content', 'publishing', 'editor', 'seo'],\n      complexity: 'intermediate',\n      estimatedDuration: '2-4 months',\n      keyTechnologies: ['rich text editor', 'seo optimization', 'content management']\n    },\n    'dashboard/analytics': {\n      keywords: ['dashboard', 'admin', 'analytics', 'metrics', 'reporting', 'chart', 'graph', 'data'],\n      complexity: 'intermediate',\n      estimatedDuration: '2-5 months',\n      keyTechnologies: ['data visualization', 'charts', 'real-time updates', 'data processing']\n    },\n    'mobile app': {\n      keywords: ['mobile', 'app', 'ios', 'android', 'native', 'react native', 'flutter'],\n      complexity: 'advanced',\n      estimatedDuration: '4-8 months',\n      keyTechnologies: ['mobile ui', 'native features', 'app store deployment']\n    },\n    'ai/ml application': {\n      keywords: ['ai', 'ml', 'machine learning', 'neural', 'chatbot', 'recommendation', 'nlp', 'computer vision'],\n      complexity: 'advanced',\n      estimatedDuration: '4-10 months',\n      keyTechnologies: ['tensorflow', 'pytorch', 'api integration', 'model training']\n    },\n    'blockchain/web3': {\n      keywords: ['blockchain', 'crypto', 'smart contract', 'web3', 'nft', 'defi', 'ethereum'],\n      complexity: 'advanced',\n      estimatedDuration: '6-12 months',\n      keyTechnologies: ['solidity', 'web3.js', 'metamask', 'smart contracts']\n    },\n    'saas platform': {\n      keywords: ['saas', 'subscription', 'multi-tenant', 'billing', 'enterprise', 'platform'],\n      complexity: 'advanced',\n      estimatedDuration: '8-18 months',\n      keyTechnologies: ['multi-tenancy', 'billing system', 'scalable architecture']\n    },\n    'game': {\n      keywords: ['game', 'gaming', 'puzzle', 'arcade', 'multiplayer', 'unity', 'godot'],\n      complexity: 'intermediate',\n      estimatedDuration: '3-8 months',\n      keyTechnologies: ['game engine', 'physics', 'graphics', 'multiplayer networking']\n    },\n    'portfolio/landing': {\n      keywords: ['portfolio', 'personal site', 'resume', 'landing', 'marketing', 'showcase'],\n      complexity: 'beginner',\n      estimatedDuration: '1-2 months',\n      keyTechnologies: ['responsive design', 'seo', 'performance optimization']\n    }\n  };\n\n  let detectedType = 'web application';\n  let typeConfig = {\n    complexity: 'intermediate',\n    estimatedDuration: '3-6 months',\n    keyTechnologies: ['frontend', 'backend', 'database']\n  };\n\n  // Find best matching project type\n  for (const [type, config] of Object.entries(projectTypes)) {\n    const matchCount = config.keywords.filter(keyword => ideaLower.includes(keyword)).length;\n    if (matchCount > 0) {\n      detectedType = type;\n      typeConfig = config;\n      break;\n    }\n  }\n\n  // Extract key features and requirements\n  const featureExtraction = {\n    authentication: ['login', 'signup', 'auth', 'user', 'account', 'profile'],\n    payment: ['payment', 'billing', 'subscription', 'checkout', 'stripe', 'paypal'],\n    realtime: ['realtime', 'live', 'chat', 'notification', 'websocket', 'socket'],\n    search: ['search', 'filter', 'find', 'query', 'elasticsearch'],\n    upload: ['upload', 'file', 'image', 'media', 'document', 'attachment'],\n    api: ['api', 'rest', 'graphql', 'endpoint', 'integration'],\n    admin: ['admin', 'dashboard', 'management', 'control panel'],\n    mobile: ['mobile', 'responsive', 'app', 'native', 'pwa'],\n    seo: ['seo', 'meta', 'sitemap', 'optimization', 'google'],\n    analytics: ['analytics', 'tracking', 'metrics', 'statistics', 'data']\n  };\n\n  const detectedFeatures = [];\n  for (const [feature, keywords] of Object.entries(featureExtraction)) {\n    if (keywords.some(keyword => ideaLower.includes(keyword))) {\n      detectedFeatures.push(feature);\n    }\n  }\n\n  // Detect target platforms\n  const platformDetection = {\n    web: ['website', 'web app', 'browser', 'html', 'css', 'javascript'],\n    mobile: ['mobile app', 'ios', 'android', 'react native', 'flutter'],\n    desktop: ['desktop', 'electron', 'native app', 'windows', 'mac'],\n    api: ['api', 'backend', 'service', 'microservice']\n  };\n\n  const targetPlatforms = [];\n  for (const [platform, keywords] of Object.entries(platformDetection)) {\n    if (keywords.some(keyword => ideaLower.includes(keyword))) {\n      targetPlatforms.push(platform);\n    }\n  }\n\n  if (targetPlatforms.length === 0) {\n    targetPlatforms.push('web'); // Default to web\n  }\n\n  // Advanced complexity analysis\n  const complexityFactors = {\n    beginner: ['simple', 'basic', 'learning', 'tutorial', 'static', 'portfolio'],\n    intermediate: ['dynamic', 'database', 'auth', 'api', 'crud', 'responsive'],\n    advanced: ['realtime', 'microservice', 'scalable', 'enterprise', 'ml', 'blockchain', 'distributed'],\n    expert: ['high-performance', 'distributed system', 'custom engine', 'advanced ai', 'complex algorithm']\n  };\n\n  let finalComplexity = typeConfig.complexity;\n  for (const [level, indicators] of Object.entries(complexityFactors)) {\n    if (indicators.some(indicator => ideaLower.includes(indicator))) {\n      finalComplexity = level;\n    }\n  }\n\n  // Extract user requirements and constraints\n  const userRequirements = {\n    budget: extractBudgetInfo(projectIdea),\n    timeline: extractTimelineInfo(projectIdea),\n    scalability: ideaLower.includes('scalable') || ideaLower.includes('millions') || ideaLower.includes('enterprise'),\n    performance: ideaLower.includes('fast') || ideaLower.includes('performance') || ideaLower.includes('speed'),\n    security: ideaLower.includes('secure') || ideaLower.includes('security') || ideaLower.includes('privacy'),\n    accessibility: ideaLower.includes('accessible') || ideaLower.includes('a11y') || ideaLower.includes('disability')\n  };\n\n  // Technology recommendations based on analysis\n  const recommendedTechnologies = generateTechnologyRecommendations(detectedType, detectedFeatures, targetPlatforms, finalComplexity);\n\n  return {\n    projectType: detectedType,\n    complexity: finalComplexity,\n    estimatedDuration: typeConfig.estimatedDuration,\n    keyFeatures: detectedFeatures,\n    targetPlatforms: targetPlatforms,\n    domains: identifyDomains(detectedFeatures, targetPlatforms),\n    userRequirements: userRequirements,\n    recommendedTechnologies: recommendedTechnologies,\n    searchKeywords: generateSearchKeywords(detectedType, detectedFeatures, recommendedTechnologies),\n    learningPath: generateLearningPath(finalComplexity, detectedFeatures)\n  };\n}\n\n/**\n * Extract budget information from project description\n */\nfunction extractBudgetInfo(projectIdea) {\n  const ideaLower = projectIdea.toLowerCase();\n  if (ideaLower.includes('free') || ideaLower.includes('no budget') || ideaLower.includes('open source')) {\n    return 'minimal';\n  } else if (ideaLower.includes('startup') || ideaLower.includes('mvp')) {\n    return 'low';\n  } else if (ideaLower.includes('enterprise') || ideaLower.includes('commercial')) {\n    return 'high';\n  }\n  return 'moderate';\n}\n\n/**\n * Extract timeline information from project description\n */\nfunction extractTimelineInfo(projectIdea) {\n  const ideaLower = projectIdea.toLowerCase();\n  if (ideaLower.includes('quickly') || ideaLower.includes('asap') || ideaLower.includes('urgent')) {\n    return 'urgent';\n  } else if (ideaLower.includes('long term') || ideaLower.includes('comprehensive')) {\n    return 'extended';\n  }\n  return 'normal';\n}\n\n/**\n * Generate technology recommendations based on project analysis\n */\nfunction generateTechnologyRecommendations(projectType, features, platforms, complexity) {\n  const recommendations = {\n    frontend: [],\n    backend: [],\n    database: [],\n    tools: [],\n    deployment: []\n  };\n\n  // Frontend recommendations\n  if (platforms.includes('web')) {\n    if (complexity === 'beginner') {\n      recommendations.frontend = ['HTML', 'CSS', 'JavaScript', 'Bootstrap'];\n    } else if (complexity === 'intermediate') {\n      recommendations.frontend = ['React', 'Next.js', 'Tailwind CSS', 'TypeScript'];\n    } else {\n      recommendations.frontend = ['React', 'Next.js', 'TypeScript', 'Tailwind CSS', 'Redux Toolkit'];\n    }\n  }\n\n  if (platforms.includes('mobile')) {\n    if (features.includes('realtime') || complexity === 'advanced') {\n      recommendations.frontend.push('React Native', 'Expo');\n    } else {\n      recommendations.frontend.push('Flutter', 'React Native');\n    }\n  }\n\n  // Backend recommendations\n  if (projectType.includes('ai') || features.includes('ml')) {\n    recommendations.backend = ['Python', 'FastAPI', 'TensorFlow', 'PyTorch'];\n  } else if (complexity === 'advanced' || features.includes('realtime')) {\n    recommendations.backend = ['Node.js', 'Express', 'Socket.io', 'TypeScript'];\n  } else {\n    recommendations.backend = ['Node.js', 'Express', 'TypeScript'];\n  }\n\n  // Database recommendations\n  if (features.includes('analytics') || projectType.includes('dashboard')) {\n    recommendations.database = ['PostgreSQL', 'MongoDB', 'Redis'];\n  } else if (complexity === 'advanced' || features.includes('search')) {\n    recommendations.database = ['PostgreSQL', 'Redis', 'Elasticsearch'];\n  } else {\n    recommendations.database = ['PostgreSQL', 'MongoDB'];\n  }\n\n  return recommendations;\n}\n\n/**\n * Identify relevant domains based on features and platforms\n */\nfunction identifyDomains(features, platforms) {\n  const domains = [];\n\n  if (platforms.includes('web')) domains.push('Web Development');\n  if (platforms.includes('mobile')) domains.push('Mobile Development');\n  if (features.includes('api')) domains.push('Backend Development');\n  if (features.includes('analytics')) domains.push('Data Analysis');\n  if (features.includes('ml') || features.includes('ai')) domains.push('Machine Learning');\n  if (features.includes('payment')) domains.push('FinTech');\n  if (features.includes('realtime')) domains.push('Real-time Systems');\n\n  return domains.length > 0 ? domains : ['Web Development'];\n}\n\n/**\n * Generate search keywords for better video discovery\n */\nfunction generateSearchKeywords(projectType, features, technologies) {\n  const keywords = [projectType];\n  keywords.push(...features);\n\n  Object.values(technologies).flat().forEach(tech => {\n    keywords.push(tech.toLowerCase());\n  });\n\n  return [...new Set(keywords)]; // Remove duplicates\n}\n\n/**\n * Generate learning path based on complexity and features\n */\nfunction generateLearningPath(complexity, features) {\n  const basePath = ['HTML/CSS Basics', 'JavaScript Fundamentals'];\n\n  if (complexity === 'intermediate' || complexity === 'advanced') {\n    basePath.push('Framework Learning', 'Database Concepts', 'API Development');\n  }\n\n  if (complexity === 'advanced') {\n    basePath.push('Advanced Architecture', 'Testing', 'Deployment', 'Performance Optimization');\n  }\n\n  if (features.includes('auth')) basePath.push('Authentication & Security');\n  if (features.includes('payment')) basePath.push('Payment Integration');\n  if (features.includes('realtime')) basePath.push('WebSocket & Real-time Communication');\n\n  return basePath;\n}\n\n/**\n * Enhanced YouTube API helper with multilingual support\n * @param {string} searchQuery - The search query string\n * @param {number} maxResults - Maximum number of results to fetch\n * @param {string} language - Language preference ('en', 'hi', 'auto')\n * @param {string} region - Region code for localized results\n * @returns {Promise<Array>} Array of video objects with language detection\n */\nasync function fetchYouTubeVideos(searchQuery, maxResults = 8, language = 'auto', region = 'IN') {\n  try {\n    if (!process.env.YOUTUBE_API_KEY) {\n      console.warn('YOUTUBE_API_KEY not set, skipping video fetch');\n      return [];\n    }\n\n    // Enhanced search parameters for better multilingual results\n    const baseUrl = 'https://www.googleapis.com/youtube/v3/search';\n    const searchParams = new URLSearchParams({\n      part: 'snippet',\n      q: searchQuery,\n      type: 'video',\n      maxResults: maxResults.toString(),\n      order: 'relevance',\n      publishedAfter: getDateOneYearAgo(), // Get recent videos\n      videoDuration: 'medium', // Prefer medium-length tutorials\n      videoDefinition: 'any',\n      regionCode: region,\n      relevanceLanguage: language === 'auto' ? undefined : language,\n      key: process.env.YOUTUBE_API_KEY\n    });\n\n    // Remove undefined parameters\n    Array.from(searchParams.entries()).forEach(([key, value]) => {\n      if (value === undefined) searchParams.delete(key);\n    });\n\n    const searchUrl = `${baseUrl}?${searchParams.toString()}`;\n    console.log('Fetching videos with query:', searchQuery, 'Language:', language);\n\n    const response = await fetch(searchUrl);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('YouTube API error:', response.status, errorText);\n\n      if (response.status === 403) {\n        console.error('YouTube API quota exceeded or access denied');\n      }\n      return [];\n    }\n\n    const data = await response.json();\n\n    if (!data.items || data.items.length === 0) {\n      console.log(`No videos found for query: ${searchQuery}`);\n      return [];\n    }\n\n    // Get additional video details for better filtering\n    const videoIds = data.items.map(item => item.id.videoId).join(',');\n    const detailsUrl = new URL('https://www.googleapis.com/youtube/v3/videos');\n    detailsUrl.searchParams.set('part', 'statistics,contentDetails,localizations');\n    detailsUrl.searchParams.set('id', videoIds);\n    detailsUrl.searchParams.set('key', process.env.YOUTUBE_API_KEY);\n\n    const detailsResponse = await fetch(detailsUrl.toString());\n    const detailsData = detailsResponse.ok ? await detailsResponse.json() : { items: [] };\n\n    // Process and enhance video data\n    const processedVideos = data.items.map((item, index) => {\n      const details = detailsData.items?.[index];\n      const viewCount = details?.statistics?.viewCount ? parseInt(details.statistics.viewCount) : 0;\n      const likeCount = details?.statistics?.likeCount ? parseInt(details.statistics.likeCount) : 0;\n      const duration = details?.contentDetails?.duration || 'Unknown';\n\n      // Detect video language\n      const detectedLanguage = detectVideoLanguage(item, details);\n\n      // Calculate enhanced relevance score\n      const relevanceScore = calculateEnhancedRelevanceScore(item, searchQuery, detectedLanguage, viewCount, likeCount);\n\n      // Calculate quality score\n      const qualityScore = calculateQualityScore(viewCount, likeCount, duration, item.snippet.publishedAt);\n\n      return {\n        title: item.snippet.title,\n        channel: item.snippet.channelTitle,\n        url: `https://www.youtube.com/watch?v=${item.id.videoId}`,\n        description: item.snippet.description.substring(0, 300) + '...',\n        thumbnail: item.snippet.thumbnails.high?.url || item.snippet.thumbnails.medium?.url || item.snippet.thumbnails.default?.url,\n        publishedAt: item.snippet.publishedAt,\n        viewCount,\n        likeCount,\n        duration: formatDuration(duration),\n        language: detectedLanguage,\n        relevanceScore,\n        qualityScore,\n        overallScore: (relevanceScore * 0.6 + qualityScore * 0.4), // Weighted combined score\n        tags: extractVideoTags(item.snippet.title + ' ' + item.snippet.description),\n        isRecent: isVideoRecent(item.snippet.publishedAt),\n        channelReputation: getChannelReputation(item.snippet.channelTitle)\n      };\n    });\n\n    // Enhanced filtering and sorting\n    return processedVideos\n      .filter(video => video.overallScore > 0.3) // Filter out very low quality videos\n      .filter(video => video.viewCount > 500) // Minimum view count threshold\n      .filter(video => !isVideoTooOld(video.publishedAt, 3)) // Not older than 3 years\n      .sort((a, b) => {\n        // Priority sorting: Recent videos with high scores first\n        if (a.isRecent !== b.isRecent) {\n          return b.isRecent - a.isRecent;\n        }\n        return b.overallScore - a.overallScore;\n      })\n      .slice(0, maxResults);\n\n  } catch (error) {\n    console.error('YouTube API fetch error:', error);\n    return [];\n  }\n}\n\n/**\n * Detect video language based on title, description, and channel\n */\nfunction detectVideoLanguage(item, details) {\n  const title = item.snippet.title;\n  const description = item.snippet.description;\n  const channel = item.snippet.channelTitle;\n\n  // Hindi language patterns\n  const hindiPatterns = [\n    /[\\u0900-\\u097F]/, // Devanagari script\n    /\\b(mein|aur|kaise|kya|tutorial|sikhe|seekho|hindi|urdu)\\b/i,\n    /\\b(बनाएं|सीखें|कैसे|क्या|ट्यूटोरियल)\\b/\n  ];\n\n  // English patterns\n  const englishPatterns = [\n    /^[a-zA-Z0-9\\s\\-_.,!?()]+$/,\n    /\\b(tutorial|how to|learn|build|create|step by step|guide|course)\\b/i\n  ];\n\n  const combinedText = `${title} ${description} ${channel}`.toLowerCase();\n\n  // Check for Hindi patterns\n  if (hindiPatterns.some(pattern => pattern.test(combinedText))) {\n    return 'hi';\n  }\n\n  // Check for English patterns\n  if (englishPatterns.some(pattern => pattern.test(combinedText))) {\n    return 'en';\n  }\n\n  // Check channel names for language hints\n  const hindiChannels = ['technical', 'desi', 'hindi', 'bharti', 'indian'];\n  if (hindiChannels.some(hint => channel.toLowerCase().includes(hint))) {\n    return 'hi';\n  }\n\n  // Default to English\n  return 'en';\n}\n\n/**\n * Enhanced relevance score calculation\n */\nfunction calculateEnhancedRelevanceScore(video, searchQuery, language, viewCount, likeCount) {\n  const queryTerms = searchQuery.toLowerCase().split(' ').filter(term => term.length > 2);\n  const title = video.snippet.title.toLowerCase();\n  const description = video.snippet.description.toLowerCase();\n  const channel = video.snippet.channelTitle.toLowerCase();\n\n  let score = 0;\n  let maxPossibleScore = 0;\n\n  // Title matching (highest weight)\n  queryTerms.forEach(term => {\n    maxPossibleScore += 2;\n    if (title.includes(term)) {\n      score += 2;\n    } else if (title.includes(term.substring(0, Math.max(3, term.length - 2)))) {\n      score += 1; // Partial match\n    }\n  });\n\n  // Description matching (medium weight)\n  queryTerms.forEach(term => {\n    maxPossibleScore += 1;\n    if (description.includes(term)) score += 1;\n  });\n\n  // Channel reputation (low weight)\n  const educationalChannels = [\n    'freecodecamp', 'traversy', 'net ninja', 'programming with mosh', \n    'academind', 'codevolution', 'web dev simplified', 'coding train',\n    'technical guruji', 'code with harry', 'apni kaksha', 'physics wallah'\n  ];\n\n  educationalChannels.forEach(channelName => {\n    if (channel.includes(channelName)) {\n      score += 1;\n      maxPossibleScore += 1;\n    }\n  });\n\n  // Educational keywords bonus\n  const educationalKeywords = [\n    'tutorial', 'course', 'learn', 'guide', 'how to', 'step by step',\n    'complete', 'full', 'crash course', 'beginners', 'explained'\n  ];\n\n  let educationalBonus = 0;\n  educationalKeywords.forEach(keyword => {\n    if (title.includes(keyword) || description.includes(keyword)) {\n      educationalBonus += 0.1;\n    }\n  });\n\n  // Engagement bonus (based on like ratio)\n  let engagementBonus = 0;\n  if (viewCount > 0 && likeCount > 0) {\n    const likeRatio = likeCount / viewCount;\n    if (likeRatio > 0.01) engagementBonus = 0.2; // Good like ratio\n    if (likeRatio > 0.02) engagementBonus = 0.3; // Excellent like ratio\n  }\n\n  // Normalize score\n  const normalizedScore = maxPossibleScore > 0 ? score / maxPossibleScore : 0;\n\n  return Math.min(normalizedScore + educationalBonus + engagementBonus, 1);\n}\n\n/**\n * Calculate quality score based on engagement metrics\n */\nfunction calculateQualityScore(viewCount, likeCount, duration, publishedAt) {\n  let score = 0;\n\n  // View count scoring (normalized)\n  if (viewCount > 1000) score += 0.2;\n  if (viewCount > 10000) score += 0.2;\n  if (viewCount > 100000) score += 0.1;\n\n  // Like ratio scoring\n  if (viewCount > 0 && likeCount > 0) {\n    const likeRatio = likeCount / viewCount;\n    if (likeRatio > 0.01) score += 0.2;\n    if (likeRatio > 0.02) score += 0.1;\n  }\n\n  // Duration scoring (prefer medium-length videos)\n  const durationMinutes = parseDurationToMinutes(duration);\n  if (durationMinutes >= 5 && durationMinutes <= 60) score += 0.2;\n  if (durationMinutes >= 10 && durationMinutes <= 30) score += 0.1;\n\n  // Recency bonus\n  if (isVideoRecent(publishedAt, 1)) score += 0.1; // Within last year\n\n  return Math.min(score, 1);\n}\n\n/**\n * Extract relevant tags from video title and description\n */\nfunction extractVideoTags(text) {\n  const techKeywords = [\n    'javascript', 'react', 'nodejs', 'python', 'html', 'css', 'api',\n    'tutorial', 'course', 'guide', 'beginners', 'advanced', 'project'\n  ];\n\n  const lowerText = text.toLowerCase();\n  return techKeywords.filter(keyword => lowerText.includes(keyword));\n}\n\n/**\n * Check if video is recent (within specified years)\n */\nfunction isVideoRecent(publishedAt, years = 2) {\n  const videoDate = new Date(publishedAt);\n  const cutoffDate = new Date();\n  cutoffDate.setFullYear(cutoffDate.getFullYear() - years);\n  return videoDate > cutoffDate;\n}\n\n/**\n * Check if video is too old\n */\nfunction isVideoTooOld(publishedAt, years = 3) {\n  const videoDate = new Date(publishedAt);\n  const cutoffDate = new Date();\n  cutoffDate.setFullYear(cutoffDate.getFullYear() - years);\n  return videoDate < cutoffDate;\n}\n\n/**\n * Get channel reputation score\n */\nfunction getChannelReputation(channelName) {\n  const topChannels = [\n    'freecodecamp', 'traversy media', 'the net ninja', 'programming with mosh',\n    'code with harry', 'technical guruji', 'apni kaksha'\n  ];\n\n  return topChannels.some(channel => \n    channelName.toLowerCase().includes(channel.toLowerCase())\n  ) ? 1 : 0.5;\n}\n\n/**\n * Parse YouTube duration format to minutes\n */\nfunction parseDurationToMinutes(duration) {\n  if (!duration || duration === 'Unknown') return 0;\n\n  // Parse ISO 8601 duration format (PT1H2M3S)\n  const match = duration.match(/PT(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?/);\n  if (!match) return 0;\n\n  const hours = parseInt(match[1] || '0');\n  const minutes = parseInt(match[2] || '0');\n  const seconds = parseInt(match[3] || '0');\n\n  return hours * 60 + minutes + seconds / 60;\n}\n\n/**\n * Format duration for display\n */\nfunction formatDuration(duration) {\n  const minutes = parseDurationToMinutes(duration);\n  if (minutes < 1) return 'Short';\n  if (minutes < 60) return `${Math.round(minutes)}m`;\n  return `${Math.floor(minutes / 60)}h ${Math.round(minutes % 60)}m`;\n}\n\n/**\n * Get date one year ago for recent video filtering\n */\nfunction getDateOneYearAgo() {\n  const date = new Date();\n  date.setFullYear(date.getFullYear() - 1);\n  return date.toISOString();\n}\n\n/**\n * Advanced multilingual search query generation\n * @param {Object} projectData - Project data object\n * @param {string} projectIdea - Original project idea\n * @param {Object} projectAnalysis - Deep project analysis\n * @returns {Promise<Array>} Array of multilingual search queries\n */\nasync function generateIntelligentSearchQueries(projectData, projectIdea, projectAnalysis) {\n  const queries = [];\n  const technologies = [];\n\n  // Extract technologies from project data\n  if (projectData.techStack) {\n    Object.values(projectData.techStack).forEach(techArray => {\n      if (Array.isArray(techArray)) {\n        technologies.push(...techArray.slice(0, 2)); // Top 2 from each category\n      }\n    });\n  }\n\n  // Add technologies from analysis\n  if (projectAnalysis.recommendedTechnologies) {\n    Object.values(projectAnalysis.recommendedTechnologies).forEach(techs => {\n      technologies.push(...techs.slice(0, 2));\n    });\n  }\n\n  // Remove duplicates and limit\n  const uniqueTechs = [...new Set(technologies)].slice(0, 4);\n\n  // Generate English queries\n  const englishQueries = [\n    // Project-specific queries\n    `${projectAnalysis.projectType} tutorial ${uniqueTechs.slice(0, 2).join(' ')} 2024`,\n    `build ${projectAnalysis.projectType} ${uniqueTechs[0]} complete guide`,\n    `${uniqueTechs.slice(0, 2).join(' ')} ${projectAnalysis.projectType} step by step`,\n\n    // Technology-focused queries\n    `${uniqueTechs[0]} crash course beginners 2024`,\n    `${uniqueTechs.slice(0, 2).join(' ')} full stack project`,\n\n    // Feature-specific queries\n    ...projectAnalysis.keyFeatures.slice(0, 2).map(feature => \n      `${feature} implementation ${uniqueTechs[0]} tutorial`\n    ),\n  ];\n\n  // Generate Hindi queries\n  const hindiQueries = [\n    `${projectAnalysis.projectType} tutorial hindi ${uniqueTechs[0]}`,\n    `${uniqueTechs[0]} सीखें hindi tutorial`,\n    `web development hindi course ${uniqueTechs.slice(0, 2).join(' ')}`,\n    `${projectAnalysis.projectType} banane ka tarika ${uniqueTechs[0]}`,\n    `hindi tutorial ${uniqueTechs[0]} complete course`,\n  ];\n\n  // Combine and prioritize queries\n  const allQueries = [\n    ...englishQueries.map(q => ({ query: q, language: 'en', priority: 'high' })),\n    ...hindiQueries.map(q => ({ query: q, language: 'hi', priority: 'medium' }))\n  ];\n\n  // Sort by priority and return\n  return allQueries\n    .sort((a, b) => {\n      const priorities = { high: 3, medium: 2, low: 1 };\n      return priorities[b.priority] - priorities[a.priority];\n    })\n    .slice(0, 10); // Top 10 queries\n}\n\n/**\n * Enhanced video fetching with intelligent multilingual search\n * @param {Object} projectData - Project data object\n * @param {string} projectIdea - Original project idea\n * @param {Object} projectAnalysis - Deep project analysis\n * @returns {Promise<Array>} Array of relevant YouTube videos in multiple languages\n */\nasync function fetchProjectRelevantVideos(projectData, projectIdea, projectAnalysis) {\n  console.log('Starting enhanced multilingual video search...');\n\n  const searchQueries = await generateIntelligentSearchQueries(projectData, projectIdea, projectAnalysis);\n  console.log('Generated search queries:', searchQueries.length);\n\n  const videosByLanguage = {\n    english: [],\n    hindi: [],\n    mixed: []\n  };\n\n  // Fetch videos for each query with language-specific handling\n  for (const queryObj of searchQueries) {\n    try {\n      const videos = await fetchYouTubeVideos(\n        queryObj.query, \n        6, // Fetch more videos per query\n        queryObj.language, \n        'IN' // India region for better Hindi content\n      );\n\n      if (videos.length > 0) {\n        // Categorize by detected language\n        videos.forEach(video => {\n          if (video.language === 'hi') {\n            videosByLanguage.hindi.push({ ...video, searchQuery: queryObj.query });\n          } else if (video.language === 'en') {\n            videosByLanguage.english.push({ ...video, searchQuery: queryObj.query });\n          } else {\n            videosByLanguage.mixed.push({ ...video, searchQuery: queryObj.query });\n          }\n        });\n      }\n\n      // Rate limiting to avoid API quota issues\n      await new Promise(resolve => setTimeout(resolve, 200));\n    } catch (error) {\n      console.error(`Error fetching videos for query \"${queryObj.query}\":`, error);\n    }\n  }\n\n  // Intelligent combination of results\n  let combinedVideos = [\n    ...videosByLanguage.hindi.slice(0, 5), // Priority to Hindi content\n    ...videosByLanguage.english.slice(0, 5), // English content\n    ...videosByLanguage.mixed.slice(0, 2) // Mixed language content\n  ];\n\n  // Remove duplicates based on video ID from URL\n  const uniqueVideos = combinedVideos.filter((video, index, self) => {\n    const videoId = video.url.split('v=')[1]?.split('&')[0];\n    return index === self.findIndex(v => {\n      const vId = v.url.split('v=')[1]?.split('&')[0];\n      return vId === videoId;\n    });\n  });\n\n  // Final filtering and intelligent sorting\n  const filteredVideos = uniqueVideos\n    .filter(video => video.overallScore > 0.4) // Higher quality threshold\n    .filter(video => video.viewCount > 1000) // Minimum engagement\n    .filter(video => {\n      // Filter out very generic or unrelated content\n      const title = video.title.toLowerCase();\n      const relevantKeywords = projectAnalysis.searchKeywords.slice(0, 5);\n      return relevantKeywords.some(keyword => \n        title.includes(keyword.toLowerCase()) || \n        video.tags.includes(keyword.toLowerCase())\n      );\n    });\n\n  // Smart sorting algorithm\n  const sortedVideos = filteredVideos.sort((a, b) => {\n    // 1. Prioritize recent videos\n    if (a.isRecent !== b.isRecent) {\n      return b.isRecent - a.isRecent;\n    }\n\n    // 2. Prioritize by overall quality score\n    if (Math.abs(a.overallScore - b.overallScore) > 0.1) {\n      return b.overallScore - a.overallScore;\n    }\n\n    // 3. Balance languages (slight preference to Hindi for Indian users)\n    if (a.language === 'hi' && b.language === 'en') return -1;\n    if (a.language === 'en' && b.language === 'hi') return 1;\n\n    // 4. Finally by view count\n    return b.viewCount - a.viewCount;\n  });\n\n  console.log(`Final video selection: ${sortedVideos.length} videos`);\n  console.log(`Hindi videos: ${sortedVideos.filter(v => v.language === 'hi').length}`);\n  console.log(`English videos: ${sortedVideos.filter(v => v.language === 'en').length}`);\n\n  return sortedVideos.slice(0, 12); // Return top 12 videos\n}\n\n/**\n * Enhanced fallback search links with multilingual support\n * @param {Object} projectData - Project data object\n * @param {string} projectIdea - Original project idea\n * @param {Object} projectAnalysis - Deep project analysis\n * @returns {Promise<Array>} Array of fallback search links\n */\nasync function createFallbackSearchLinks(projectData, projectIdea, projectAnalysis) {\n  console.log('Creating enhanced multilingual fallback search links');\n\n  const fallbackQueries = await generateIntelligentSearchQueries(projectData, projectIdea, projectAnalysis);\n  const topQueries = fallbackQueries.slice(0, 4);\n\n  return topQueries.map((queryObj, index) => ({\n    title: `${queryObj.language === 'hi' ? '🇮🇳' : '🇺🇸'} Search: ${queryObj.query}`,\n    channel: `YouTube Search (${queryObj.language.toUpperCase()})`,\n    url: `https://youtube.com/results?search_query=${encodeURIComponent(queryObj.query)}`,\n    description: `Click to search for ${queryObj.language === 'hi' ? 'Hindi' : 'English'} tutorials about: ${queryObj.query}`,\n    thumbnail: null,\n    publishedAt: new Date().toISOString(),\n    viewCount: 0,\n    likeCount: 0,\n    duration: \"Search\",\n    language: queryObj.language,\n    relevanceScore: 1,\n    qualityScore: 0.5,\n    overallScore: 0.7,\n    isSearchLink: true,\n    priority: queryObj.priority\n  }));\n}\n\n// Export all functions\nexport {\n  deepAnalyzeProjectIdea,\n  fetchYouTubeVideos,\n  calculateEnhancedRelevanceScore,\n  analyzeProject,\n  generateIntelligentSearchQueries,\n  fetchProjectRelevantVideos,\n  createFallbackSearchLinks,\n  detectVideoLanguage,\n  calculateQualityScore\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1151, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/api/generate-project/route.js"],"sourcesContent":["// app/api/generate-project/route.js\nimport { NextResponse } from 'next/server';\nimport {\n  fetchProjectRelevantVideos,\n  createFallbackSearchLinks,\n  generateIntelligentSearchQueries,\n  analyzeProject,\n  deepAnalyzeProjectIdea\n} from './youtube-service.js';\n\n/**\n * Main POST handler for project generation with enhanced analysis\n * @param {Request} request - The incoming request object\n * @returns {Promise<NextResponse>} The response with generated project data\n */\nexport async function POST(request) {\n  try {\n    const { projectIdea } = await request.json();\n\n    if (!projectIdea || projectIdea.trim().length === 0) {\n      return NextResponse.json({ error: 'Project idea is required' }, { status: 400 });\n    }\n\n    // Validate API keys\n    if (!process.env.GEMINI_API_KEY) {\n      console.error('GEMINI_API_KEY is not set');\n      return NextResponse.json({ error: 'API configuration error' }, { status: 500 });\n    }\n\n    console.log('Making request to Gemini API for enhanced project generation...');\n\n    // Deep analysis of project idea before generation\n    const projectAnalysis = await deepAnalyzeProjectIdea(projectIdea);\n    console.log('Deep project analysis completed:', projectAnalysis);\n\n    // Generate comprehensive project data using enhanced Gemini AI\n    const projectData = await generateProjectWithGemini(projectIdea, projectAnalysis);\n\n    // **ENHANCED MULTILINGUAL YOUTUBE VIDEO FETCHING**\n    console.log('Starting enhanced multilingual YouTube video analysis and fetching...');\n    let youtubeResources = [];\n\n    try {\n      youtubeResources = await fetchProjectRelevantVideos(projectData, projectIdea, projectAnalysis);\n      console.log(`Successfully fetched ${youtubeResources.length} relevant YouTube videos in multiple languages`);\n    } catch (youtubeError) {\n      console.error('YouTube video fetching error:', youtubeError);\n      youtubeResources = [];\n    }\n\n    // Enhanced fallback with better search links\n    if (youtubeResources.length === 0) {\n      youtubeResources = await createFallbackSearchLinks(projectData, projectIdea, projectAnalysis);\n    }\n\n    // Enhanced response with comprehensive metadata\n    const enhancedResponse = {\n      ...projectData,\n      youtubeResources,\n      projectAnalysis, // Include deep analysis in response\n      metadata: {\n        model: 'gemini-2.0-flash-exp',\n        timestamp: new Date().toISOString(),\n        tokens_used: projectData.tokens_used || 'N/A',\n        youtube_videos_found: youtubeResources.filter(v => !v.isSearchLink).length,\n        hindi_videos_count: youtubeResources.filter(v => v.language === 'hi').length,\n        english_videos_count: youtubeResources.filter(v => v.language === 'en').length,\n        search_queries_generated: (await generateIntelligentSearchQueries(projectData, projectIdea, projectAnalysis)).length,\n        project_complexity: projectAnalysis.complexity,\n        project_domains: projectAnalysis.domains,\n        estimated_duration: projectAnalysis.estimatedDuration\n      }\n    };\n\n    return NextResponse.json(enhancedResponse);\n\n  } catch (error) {\n    console.error('Enhanced project generation API error:', error);\n\n    if (error.name === 'AbortError') {\n      return NextResponse.json({ error: 'Request timeout. Please try again.' }, { status: 500 });\n    }\n\n    return NextResponse.json({\n      error: 'Failed to generate project guide',\n      details: process.env.NODE_ENV === 'development' ? error.message : 'Please try again later'\n    }, { status: 500 });\n  }\n}\n\n/**\n * Enhanced project generation with deeper analysis using Gemini AI\n * @param {string} projectIdea - The project idea description\n * @param {Object} projectAnalysis - Deep analysis of the project\n * @returns {Promise<Object>} The generated project data\n */\nasync function generateProjectWithGemini(projectIdea, projectAnalysis) {\n  const prompt = `\nYou are an expert full-stack software architect, AI consultant, and technical project planner with deep knowledge of modern development practices across all major programming languages and frameworks.\n\nUser's Project Idea:\n\"${projectIdea}\"\n\nDeep Project Analysis:\n- Project Type: ${projectAnalysis.projectType}\n- Domains: ${projectAnalysis.domains.join(', ')}\n- Complexity: ${projectAnalysis.complexity}\n- Estimated Duration: ${projectAnalysis.estimatedDuration}\n- Key Features: ${projectAnalysis.keyFeatures.join(', ')}\n- Target Platforms: ${projectAnalysis.targetPlatforms.join(', ')}\n- User Requirements: ${JSON.stringify(projectAnalysis.userRequirements)}\n\nBased on this comprehensive analysis, create an extremely detailed, production-ready project breakdown that considers:\n\n1. **Technology Stack Optimization**: Choose the most suitable and modern tech stack based on project requirements\n2. **Scalability Considerations**: Design for future growth and maintainability\n3. **Best Practices**: Include industry-standard practices, security, testing, and deployment\n4. **Performance Optimization**: Consider caching, optimization, and efficiency\n5. **User Experience**: Focus on usability and accessibility\n6. **Development Workflow**: Include proper development, staging, and production environments\n\n⚠️ Enhanced Requirements:\n\n- Support ALL modern tech stacks with justification for choices\n- Include comprehensive security implementations\n- Provide detailed testing strategies (unit, integration, e2e)\n- Add performance monitoring and optimization steps\n- Include internationalization if applicable\n- Provide detailed deployment strategies\n- Add comprehensive error handling and logging\n- Include database design and optimization\n- Provide API documentation standards\n- Add CI/CD pipeline configurations\n\n**ULTRA-DETAILED ROADMAP REQUIREMENTS:**\n- Each phase should include exact terminal commands with explanations\n- Provide complete code snippets with comments\n- Include detailed file structures with explanations\n- Add precise time estimates with difficulty levels\n- Include comprehensive prerequisites and setup instructions\n- Provide extensive troubleshooting guides\n- Add validation steps for each phase\n- Include performance benchmarks and optimization tips\n- Add security checkpoints and best practices\n- Include testing commands and quality assurance steps\n\nReturn ONLY a valid JSON object with this enhanced structure:\n\n{\n  \"projectOverview\": {\n    \"name\": \"Enhanced Project Name\",\n    \"description\": \"Detailed project description with scope and objectives\",\n    \"version\": \"1.0.0\",\n    \"license\": \"MIT\",\n    \"author\": \"Generated by AI Assistant\",\n    \"keywords\": [\"keyword1\", \"keyword2\"],\n    \"estimatedCost\": \"Free / $X per month\",\n    \"targetAudience\": \"Description of target users\",\n    \"marketAnalysis\": \"Brief market analysis and competitive landscape\"\n  },\n  \"mindMap\": {\n    \"name\": \"Project Architecture\",\n    \"children\": [\n      {\n        \"name\": \"Frontend Layer\",\n        \"children\": [\n          { \"name\": \"User Interface\", \"description\": \"Component-based architecture\" },\n          { \"name\": \"State Management\", \"description\": \"Global state handling\" },\n          { \"name\": \"Routing\", \"description\": \"Navigation and page management\" },\n          { \"name\": \"API Integration\", \"description\": \"Backend communication layer\" }\n        ]\n      },\n      {\n        \"name\": \"Backend Layer\",\n        \"children\": [\n          { \"name\": \"API Gateway\", \"description\": \"Request routing and validation\" },\n          { \"name\": \"Business Logic\", \"description\": \"Core application logic\" },\n          { \"name\": \"Database Layer\", \"description\": \"Data persistence and management\" },\n          { \"name\": \"Authentication\", \"description\": \"User security and authorization\" }\n        ]\n      },\n      {\n        \"name\": \"Infrastructure\",\n        \"children\": [\n          { \"name\": \"Deployment\", \"description\": \"Cloud hosting and CI/CD\" },\n          { \"name\": \"Monitoring\", \"description\": \"Performance and error tracking\" },\n          { \"name\": \"Security\", \"description\": \"Data protection and compliance\" },\n          { \"name\": \"Scaling\", \"description\": \"Load balancing and optimization\" }\n        ]\n      }\n    ]\n  },\n  \"roadmap\": [\n    {\n      \"phase\": \"Phase 1: Project Foundation & Environment Setup\",\n      \"description\": \"Establish development environment, project structure, and core dependencies\",\n      \"duration\": \"4-8 hours\",\n      \"difficulty\": \"Beginner to Intermediate\",\n      \"prerequisites\": [\"Node.js v18+ or Python 3.9+\", \"Git\", \"VS Code or preferred IDE\", \"Package manager (npm/yarn/pip)\"],\n      \"learningObjectives\": [\"Understanding project structure\", \"Development environment setup\", \"Version control basics\"],\n      \"steps\": [\n        {\n          \"title\": \"Development Environment Setup\",\n          \"description\": \"Configure your local development environment with all necessary tools\",\n          \"type\": \"setup\",\n          \"estimatedTime\": \"30-60 minutes\",\n          \"commands\": [\n            {\n              \"command\": \"node --version && npm --version\",\n              \"description\": \"Verify Node.js and npm installation\",\n              \"expected_output\": \"v18.x.x or higher\"\n            },\n            {\n              \"command\": \"git --version\",\n              \"description\": \"Verify Git installation\",\n              \"expected_output\": \"git version 2.x.x\"\n            }\n          ],\n          \"files_to_create\": [\n            {\n              \"path\": \".gitignore\",\n              \"content\": \"node_modules/\\\\n.env\\\\n.env.local\\\\ndist/\\\\nbuild/\\\\n*.log\",\n              \"description\": \"Git ignore file for common artifacts\"\n            }\n          ]\n        },\n        {\n          \"title\": \"Project Initialization\",\n          \"description\": \"Create project directory and initialize with proper configuration\",\n          \"type\": \"terminal\",\n          \"estimatedTime\": \"15-30 minutes\",\n          \"commands\": [\n            {\n              \"command\": \"mkdir enhanced-project && cd enhanced-project\",\n              \"description\": \"Create and navigate to project directory\"\n            },\n            {\n              \"command\": \"npm init -y\",\n              \"description\": \"Initialize package.json with default settings\"\n            },\n            {\n              \"command\": \"git init\",\n              \"description\": \"Initialize Git repository\"\n            }\n          ],\n          \"configuration\": [\n            {\n              \"file\": \"package.json\",\n              \"updates\": {\n                \"scripts\": {\n                  \"dev\": \"next dev\",\n                  \"build\": \"next build\",\n                  \"start\": \"next start\",\n                  \"lint\": \"eslint . --ext .js,.jsx,.ts,.tsx\",\n                  \"test\": \"jest\",\n                  \"test:watch\": \"jest --watch\"\n                }\n              }\n            }\n          ]\n        }\n      ],\n      \"troubleshooting\": [\n        {\n          \"issue\": \"Node.js version compatibility\",\n          \"solution\": \"Use nvm (Node Version Manager) to switch to correct version: nvm install 18 && nvm use 18\"\n        },\n        {\n          \"issue\": \"Permission errors during npm install\",\n          \"solution\": \"Configure npm to use different directory: npm config set prefix ~/.npm-global\"\n        }\n      ],\n      \"validation\": [\n        {\n          \"check\": \"Project structure created\",\n          \"command\": \"ls -la\",\n          \"expected\": \"package.json, .git folder, node_modules\"\n        },\n        {\n          \"check\": \"Development server starts\",\n          \"command\": \"npm run dev\",\n          \"expected\": \"Server running on localhost:3000\"\n        }\n      ],\n      \"security_notes\": [\n        \"Never commit .env files to version control\",\n        \"Use environment variables for sensitive configuration\"\n      ]\n    }\n  ],\n  \"techStack\": {\n    \"frontend\": {\n      \"primary\": [\"React 18\", \"Next.js 14\"],\n      \"styling\": [\"Tailwind CSS\", \"Styled Components\"],\n      \"state\": [\"Zustand\", \"React Query\"],\n      \"testing\": [\"Jest\", \"React Testing Library\"]\n    },\n    \"backend\": {\n      \"runtime\": [\"Node.js\", \"Express.js\"],\n      \"database\": [\"PostgreSQL\", \"Redis\"],\n      \"orm\": [\"Prisma\", \"TypeORM\"],\n      \"testing\": [\"Supertest\", \"Jest\"]\n    },\n    \"devops\": {\n      \"containerization\": [\"Docker\", \"Docker Compose\"],\n      \"ci_cd\": [\"GitHub Actions\", \"GitLab CI\"],\n      \"deployment\": [\"Vercel\", \"AWS\", \"Railway\"],\n      \"monitoring\": [\"Sentry\", \"LogRocket\"]\n    },\n    \"tools\": {\n      \"development\": [\"VS Code\", \"Postman\", \"Figma\"],\n      \"version_control\": [\"Git\", \"GitHub\"],\n      \"project_management\": [\"Linear\", \"Notion\"]\n    }\n  },\n  \"architecture\": {\n    \"pattern\": \"Microservices / Monolith\",\n    \"database_design\": \"Normalized relational with caching layer\",\n    \"api_design\": \"RESTful with GraphQL consideration\",\n    \"authentication\": \"JWT with refresh tokens\",\n    \"caching_strategy\": \"Redis for session, CDN for static assets\",\n    \"security_measures\": [\"Input validation\", \"Rate limiting\", \"CORS\", \"Helmet.js\"]\n  },\n  \"packages\": {\n    \"npm\": [\n      {\n        \"name\": \"next\",\n        \"version\": \"^14.0.0\",\n        \"purpose\": \"React framework for production\"\n      },\n      {\n        \"name\": \"@prisma/client\",\n        \"version\": \"^5.0.0\",\n        \"purpose\": \"Type-safe database client\"\n      }\n    ],\n    \"dev_dependencies\": [\n      {\n        \"name\": \"eslint\",\n        \"version\": \"^8.0.0\",\n        \"purpose\": \"Code linting and quality\"\n      }\n    ],\n    \"python\": [],\n    \"tools\": [\"VS Code\", \"Postman\", \"Figma\", \"Git\", \"Docker\"]\n  },\n  \"database_schema\": {\n    \"tables\": [\n      {\n        \"name\": \"users\",\n        \"columns\": [\"id\", \"email\", \"password_hash\", \"created_at\", \"updated_at\"],\n        \"relationships\": [\"one-to-many with posts\"]\n      }\n    ],\n    \"indexes\": [\"email_unique\", \"created_at_btree\"],\n    \"migrations\": [\"Initial schema\", \"Add user profiles\"]\n  },\n  \"api_endpoints\": [\n    {\n      \"method\": \"POST\",\n      \"path\": \"/api/auth/login\",\n      \"description\": \"User authentication\",\n      \"parameters\": [\"email\", \"password\"],\n      \"response\": \"JWT token and user data\"\n    }\n  ],\n  \"testing_strategy\": {\n    \"unit_tests\": \"Jest for business logic\",\n    \"integration_tests\": \"Supertest for API endpoints\",\n    \"e2e_tests\": \"Playwright for user workflows\",\n    \"coverage_target\": \"80%+\"\n  },\n  \"deployment\": {\n    \"development\": {\n      \"environment\": \"Local development server\",\n      \"database\": \"Local PostgreSQL instance\",\n      \"commands\": [\"npm run dev\"]\n    },\n    \"staging\": {\n      \"environment\": \"Staging server for testing\",\n      \"database\": \"Staging database\",\n      \"url\": \"https://staging.yourapp.com\"\n    },\n    \"production\": {\n      \"environment\": \"Production server\",\n      \"database\": \"Production database with backups\",\n      \"url\": \"https://yourapp.com\",\n      \"monitoring\": \"Full observability stack\"\n    }\n  },\n  \"documentation\": [\n    {\n      \"title\": \"API Documentation\",\n      \"url\": \"https://docs.yourapi.com\",\n      \"description\": \"Complete API reference with examples\"\n    },\n    {\n      \"title\": \"Developer Guide\",\n      \"url\": \"https://github.com/yourrepo/wiki\",\n      \"description\": \"Setup and development guidelines\"\n    }\n  ],\n  \"quickStart\": {\n    \"description\": \"Get your project running in under 10 minutes\",\n    \"commands\": [\n      \"git clone <repository-url>\",\n      \"npm install\",\n      \"cp .env.example .env\",\n      \"npm run db:migrate\",\n      \"npm run dev\"\n    ],\n    \"notes\": [\n      \"Update environment variables in .env file\",\n      \"Run database migrations before starting\",\n      \"Visit http://localhost:3000 to see your project\",\n      \"Check the logs for any startup errors\"\n    ],\n    \"first_time_setup\": [\n      \"Create accounts for third-party services (if needed)\",\n      \"Configure environment variables\",\n      \"Set up database connections\",\n      \"Run initial data seeds\"\n    ]\n  },\n  \"performance_optimization\": {\n    \"frontend\": [\"Code splitting\", \"Image optimization\", \"Lazy loading\"],\n    \"backend\": [\"Database indexing\", \"Query optimization\", \"Caching\"],\n    \"deployment\": [\"CDN\", \"Compression\", \"Minification\"]\n  },\n  \"security_checklist\": [\n    \"Environment variables secured\",\n    \"Input validation implemented\",\n    \"Rate limiting configured\",\n    \"HTTPS enforced\",\n    \"Security headers added\"\n  ],\n  \"monitoring_and_analytics\": {\n    \"error_tracking\": \"Sentry for error monitoring\",\n    \"performance\": \"Web Vitals and custom metrics\",\n    \"user_analytics\": \"Privacy-compliant analytics\",\n    \"uptime_monitoring\": \"Health check endpoints\"\n  }\n}`;\n\n  // Enhanced Gemini API request configuration\n  const requestBody = {\n    contents: [{\n      parts: [{\n        text: prompt\n      }]\n    }],\n    generationConfig: {\n      temperature: 0.3, // Lower temperature for more consistent, technical responses\n      topK: 40,\n      topP: 0.8,\n      maxOutputTokens: 8192,\n      responseMimeType: \"text/plain\"\n    },\n    safetySettings: [\n      {\n        category: \"HARM_CATEGORY_HARASSMENT\",\n        threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n      },\n      {\n        category: \"HARM_CATEGORY_HATE_SPEECH\",\n        threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n      },\n      {\n        category: \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n        threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n      },\n      {\n        category: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n        threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n      }\n    ]\n  };\n\n  // Make request to Gemini API with retry logic\n  let response;\n  let attempts = 0;\n  const maxAttempts = 3;\n\n  while (attempts < maxAttempts) {\n    try {\n      response = await fetch(\n        `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent?key=${process.env.GEMINI_API_KEY}`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(requestBody),\n        }\n      );\n\n      if (response.ok) break;\n\n      attempts++;\n      if (attempts < maxAttempts) {\n        console.log(`Attempt ${attempts} failed, retrying...`);\n        await new Promise(resolve => setTimeout(resolve, 1000 * attempts));\n      }\n    } catch (error) {\n      attempts++;\n      if (attempts >= maxAttempts) throw error;\n      await new Promise(resolve => setTimeout(resolve, 1000 * attempts));\n    }\n  }\n\n  // Handle API response errors with detailed feedback\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => null);\n    console.error('Gemini API error:', response.status, errorData);\n\n    if (response.status === 401) {\n      throw new Error('Invalid API key configuration');\n    } else if (response.status === 429) {\n      throw new Error('API rate limit exceeded. Please try again in a few minutes.');\n    } else if (response.status === 403) {\n      throw new Error('API quota exceeded or access denied.');\n    }\n\n    throw new Error(`Failed to connect to Gemini API: ${response.status}`);\n  }\n\n  const data = await response.json();\n  console.log('Enhanced Gemini API response received');\n\n  if (!data.candidates || data.candidates.length === 0) {\n    throw new Error('No response from AI model');\n  }\n\n  const content = data.candidates[0].content.parts[0].text;\n\n  // Enhanced JSON extraction with better error handling\n  let jsonMatch = content.match(/\\{[\\s\\S]*\\}/);\n  if (!jsonMatch) {\n    const codeBlockMatch = content.match(/```(?:json)?\\s*(\\{[\\s\\S]*\\})\\s*```/);\n    if (codeBlockMatch) {\n      jsonMatch = [codeBlockMatch[1]];\n    }\n  }\n\n  if (!jsonMatch) {\n    console.error('No JSON found in AI response');\n    console.error('Raw response:', content);\n    throw new Error('Invalid response format from AI service');\n  }\n\n  let projectData;\n  try {\n    // Clean up common JSON formatting issues\n    let cleanedJson = jsonMatch[0]\n      .replace(/,(\\s*[}\\]])/g, '$1') // Remove trailing commas\n      .replace(/(['\"])?([a-zA-Z0-9_]+)(['\"])?:/g, '\"$2\":'); // Ensure proper key quoting\n\n    projectData = JSON.parse(cleanedJson);\n  } catch (parseError) {\n    console.error('JSON parsing error:', parseError);\n    console.error('Attempted to parse:', jsonMatch[0]);\n    throw new Error('Failed to parse AI response - invalid JSON format');\n  }\n\n  // Enhanced validation with detailed fallbacks\n  const requiredFields = ['projectOverview', 'mindMap', 'roadmap', 'techStack', 'packages', 'documentation'];\n  for (const field of requiredFields) {\n    if (!projectData[field]) {\n      console.warn(`Missing required field: ${field}, using default`);\n      projectData[field] = getDefaultValue(field);\n    }\n  }\n\n  // Add comprehensive metadata\n  projectData.tokens_used = data.usageMetadata?.totalTokenCount || 'N/A';\n  projectData.generation_timestamp = new Date().toISOString();\n  projectData.model_version = 'gemini-2.0-flash-exp';\n\n  return projectData;\n}\n\n/**\n * Enhanced helper function for default values with better structure\n * @param {string} field - The field name\n * @returns {*} Default value for the field\n */\nfunction getDefaultValue(field) {\n  const defaults = {\n    projectOverview: {\n      name: \"Generated Project\",\n      description: \"A modern web application\",\n      version: \"1.0.0\",\n      license: \"MIT\",\n      keywords: [\"web\", \"development\"],\n      estimatedCost: \"Free to start\",\n      targetAudience: \"General users\"\n    },\n    mindMap: { \n      name: \"Project Architecture\", \n      children: [\n        {\n          name: \"Frontend\",\n          children: [\n            { name: \"User Interface\" },\n            { name: \"State Management\" }\n          ]\n        },\n        {\n          name: \"Backend\",\n          children: [\n            { name: \"API Layer\" },\n            { name: \"Database\" }\n          ]\n        }\n      ]\n    },\n    roadmap: [\n      {\n        phase: \"Phase 1: Setup\",\n        description: \"Initial project setup\",\n        duration: \"2-4 hours\",\n        difficulty: \"Beginner\",\n        steps: []\n      }\n    ],\n    techStack: {\n      frontend: [\"React\", \"Next.js\"],\n      backend: [\"Node.js\"],\n      database: [\"PostgreSQL\"],\n      deployment: [\"Vercel\"]\n    },\n    packages: { \n      npm: [\"next\", \"react\", \"react-dom\"], \n      tools: [\"VS Code\", \"Git\"] \n    },\n    documentation: [\n      {\n        title: \"Getting Started\",\n        url: \"#\",\n        description: \"Basic setup guide\"\n      }\n    ],\n    quickStart: {\n      description: \"Quick setup commands\",\n      commands: [\"npm install\", \"npm run dev\"],\n      notes: [\"Check the documentation for detailed setup\"]\n    }\n  };\n  return defaults[field] || null;\n}"],"names":[],"mappings":"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","debugId":null}}]
}