{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/api/generate-roadmap/route.js"],"sourcesContent":["// app/api/generate-roadmap/route.js\n// Production-ready Next.js 13+ App Router API\n\nimport { NextResponse } from 'next/server';\n\n// Rate limiting map (use Redis in production)\nconst rateLimitMap = new Map();\n\n// Rate limiter helper\nfunction checkRateLimit(identifier, limit = 10, windowMs = 60000) {\n  const now = Date.now();\n  const userRequests = rateLimitMap.get(identifier) || [];\n\n  // Filter out old requests outside the window\n  const recentRequests = userRequests.filter(time => now - time < windowMs);\n\n  if (recentRequests.length >= limit) {\n    return false;\n  }\n\n  recentRequests.push(now);\n  rateLimitMap.set(identifier, recentRequests);\n\n  // Cleanup old entries periodically\n  if (Math.random() < 0.01) {\n    for (const [key, times] of rateLimitMap.entries()) {\n      const validTimes = times.filter(time => now - time < windowMs);\n      if (validTimes.length === 0) {\n        rateLimitMap.delete(key);\n      } else {\n        rateLimitMap.set(key, validTimes);\n      }\n    }\n  }\n\n  return true;\n}\n\n// System prompt for AI\nconst SYSTEM_PROMPT = `You are an AI Roadmap Generator expert that creates detailed, production-level structured learning roadmaps for 2025.\n\nCRITICAL: You MUST respond with ONLY valid JSON. No markdown, no code blocks, no explanations - just pure JSON.\n\nAnalyze the user's query to understand:\n- Their current skillset and experience level\n- Their desired role or career goal\n- Any specific technologies or domains mentioned\n\nGenerate a comprehensive 2025-ready roadmap with modern frameworks, tools, and best practices.\n\nReturn EXACTLY this JSON structure (with real content):\n\n{\n  \"phases\": [\n    {\n      \"id\": 1,\n      \"title\": \"Foundation Phase\",\n      \"subtitle\": \"Master the Fundamentals\",\n      \"description\": \"Build a solid foundation with core concepts and essential skills\",\n      \"color\": \"bg-purple-600\",\n      \"sections\": [\n        {\n          \"title\": \"Core Concepts\",\n          \"items\": [\n            \"Concept 1 with brief description\",\n            \"Concept 2 with brief description\",\n            \"Concept 3 with brief description\"\n          ]\n        },\n        {\n          \"title\": \"Essential Tools\",\n          \"items\": [\n            \"Tool 1 and why it matters\",\n            \"Tool 2 and its purpose\"\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": 2,\n      \"title\": \"Intermediate Phase\",\n      \"subtitle\": \"Deepen Your Knowledge\",\n      \"description\": \"Advanced concepts and practical applications\",\n      \"color\": \"bg-pink-600\",\n      \"sections\": [\n        {\n          \"title\": \"Advanced Topics\",\n          \"items\": [\"Topic 1\", \"Topic 2\"]\n        }\n      ]\n    },\n    {\n      \"id\": 3,\n      \"title\": \"Advanced Phase\",\n      \"subtitle\": \"Master Advanced Techniques\",\n      \"description\": \"Expert-level skills and real-world projects\",\n      \"color\": \"bg-amber-600\",\n      \"sections\": [\n        {\n          \"title\": \"Expert Skills\",\n          \"items\": [\"Skill 1\", \"Skill 2\"]\n        }\n      ]\n    },\n    {\n      \"id\": 4,\n      \"title\": \"Specialization Phase\",\n      \"subtitle\": \"Career-Ready Skills\",\n      \"description\": \"Industry-specific expertise and portfolio building\",\n      \"color\": \"bg-green-600\",\n      \"sections\": [\n        {\n          \"title\": \"Specializations\",\n          \"items\": [\"Area 1\", \"Area 2\"]\n        }\n      ]\n    }\n  ],\n  \"projects\": [\n    {\n      \"id\": 1,\n      \"title\": \"Project Name\",\n      \"level\": \"Beginner\",\n      \"description\": \"Detailed project description explaining what to build\",\n      \"skills\": [\"Skill 1\", \"Skill 2\", \"Skill 3\"],\n      \"duration\": \"1-2 weeks\",\n      \"features\": [\n        \"Feature 1 to implement\",\n        \"Feature 2 to implement\",\n        \"Feature 3 to implement\"\n      ],\n      \"learningOutcomes\": [\n        \"What you'll learn from this project\",\n        \"Key concepts mastered\"\n      ]\n    }\n  ],\n  \"resources\": {\n    \"youtubeChannels\": [\n      {\n        \"name\": \"Channel Name\",\n        \"url\": \"https://youtube.com/@channelname\",\n        \"description\": \"What makes this channel valuable\",\n        \"bestFor\": \"Beginners/Intermediate/Advanced\"\n      }\n    ],\n    \"courses\": [\n      {\n        \"name\": \"Course Name\",\n        \"platform\": \"Udemy/Coursera/YouTube/etc\",\n        \"url\": \"Course URL\",\n        \"price\": \"Free/Paid/$XX\",\n        \"description\": \"Course content overview\",\n        \"level\": \"Beginner/Intermediate/Advanced\"\n      }\n    ],\n    \"documentation\": [\n      {\n        \"name\": \"Official Docs\",\n        \"url\": \"https://docs.example.com\",\n        \"description\": \"Why this documentation is essential\"\n      }\n    ],\n    \"books\": [\n      {\n        \"title\": \"Book Title\",\n        \"author\": \"Author Name\",\n        \"description\": \"What you'll gain from this book\",\n        \"level\": \"Beginner/Intermediate/Advanced\"\n      }\n    ],\n    \"communities\": [\n      {\n        \"name\": \"Community Name\",\n        \"platform\": \"Discord/Reddit/Forum\",\n        \"url\": \"Community URL\",\n        \"description\": \"Why join this community\"\n      }\n    ],\n    \"tools\": [\n      {\n        \"name\": \"Tool Name\",\n        \"category\": \"Development/Design/Testing/etc\",\n        \"url\": \"Tool URL\",\n        \"description\": \"How this tool helps\",\n        \"pricing\": \"Free/Freemium/Paid\"\n      }\n    ]\n  },\n  \"learningPathData\": {\n    \"coreFrameworks\": [\"Framework 1\", \"Framework 2\", \"Framework 3\"],\n    \"essentialTools\": [\"Tool 1\", \"Tool 2\", \"Tool 3\"],\n    \"keyTechnologies\": [\"Tech 1\", \"Tech 2\", \"Tech 3\"],\n    \"certifications\": [\"Cert 1\", \"Cert 2\"],\n    \"practiceWebsites\": [\"Website 1 - description\", \"Website 2 - description\"]\n  },\n  \"timelineData\": [\n    { \"phase\": \"Foundation Phase\", \"months\": \"2-3 months\" },\n    { \"phase\": \"Intermediate Phase\", \"months\": \"3-4 months\" },\n    { \"phase\": \"Advanced Phase\", \"months\": \"4-5 months\" },\n    { \"phase\": \"Specialization Phase\", \"months\": \"3-4 months\" }\n  ],\n  \"finalTips\": [\n    \"Build projects while learning - theory alone isn't enough\",\n    \"Join communities and network with professionals in the field\",\n    \"Contribute to open-source projects to gain real-world experience\",\n    \"Create a portfolio showcasing your best work\",\n    \"Stay updated with latest industry trends and technologies\",\n    \"Practice coding daily to build consistency and muscle memory\"\n  ]\n}\n\nIMPORTANT RULES:\n\n1. **Phases (3-5 phases)**:\n   - Use these exact color codes: bg-purple-600, bg-pink-600, bg-amber-600, bg-green-600\n   - Each phase should have 2-4 sections\n   - Each section should have 3-6 items\n   - Make content specific to 2025 technologies\n\n2. **Projects (9-10 projects)**:\n   - Include 3 Beginner projects\n   - Include 3-4 Intermediate projects\n   - Include 3 Advanced/Industry-Ready projects\n   - Each project must have: title, level, description, skills, duration, features, learningOutcomes\n   - Projects should progressively build complexity\n   - Include real-world, portfolio-worthy projects\n\n3. **Resources**:\n   - **YouTube Channels**: 5-8 best channels (include FreeCodeCamp, Traversy Media, Net Ninja, Web Dev Simplified, etc. when relevant)\n   - **Courses**: 5-7 top courses (include Udemy bestsellers, Coursera specializations, free YouTube playlists)\n   - **Documentation**: Official docs for main technologies\n   - **Books**: 3-5 highly recommended books\n   - **Communities**: Discord servers, Reddit communities, forums\n   - **Tools**: Development tools, IDEs, extensions, AI assistants\n\n4. **Content Quality**:\n   - Use 2025 current frameworks and best practices\n   - Include AI tools (Cursor, GitHub Copilot, ChatGPT, Claude, etc.)\n   - Modern stack preferences (Next.js over CRA, Vite, Bun, etc.)\n   - Include DevOps, testing, and deployment practices\n   - Mention trending technologies (AI/ML integration, Web3 if relevant, Edge computing, etc.)\n\n5. **Timeline**:\n   - Total 12-18 months for career transition\n   - Realistic time estimates per phase\n   - Account for full-time vs part-time learning\n\n6. **Output Format**:\n   - Return ONLY the JSON object\n   - No markdown code blocks\n   - No additional text or explanations\n   - Ensure valid JSON syntax\n\nEXAMPLE PROJECT STRUCTURE:\n{\n  \"id\": 1,\n  \"title\": \"Personal Portfolio Website\",\n  \"level\": \"Beginner\",\n  \"description\": \"Create a responsive portfolio website to showcase your projects and skills using HTML, CSS, and vanilla JavaScript\",\n  \"skills\": [\"HTML5\", \"CSS3\", \"JavaScript\", \"Responsive Design\", \"Git\"],\n  \"duration\": \"1-2 weeks\",\n  \"features\": [\n    \"Responsive navigation bar with smooth scrolling\",\n    \"Hero section with animated introduction\",\n    \"Projects showcase with filtering\",\n    \"Contact form with validation\",\n    \"Dark/Light theme toggle\"\n  ],\n  \"learningOutcomes\": [\n    \"Master HTML semantic elements and accessibility\",\n    \"Create responsive layouts with CSS Grid and Flexbox\",\n    \"Implement DOM manipulation and event handling\",\n    \"Deploy website using GitHub Pages or Netlify\"\n  ]\n}\n\nEXAMPLE YOUTUBE CHANNEL STRUCTURE:\n{\n  \"name\": \"Traversy Media\",\n  \"url\": \"https://youtube.com/@TraversyMedia\",\n  \"description\": \"Comprehensive web development tutorials covering modern frameworks, tools, and best practices with project-based learning\",\n  \"bestFor\": \"Beginner to Intermediate\"\n}\n\nEXAMPLE COURSE STRUCTURE:\n{\n  \"name\": \"The Complete 2025 Web Development Bootcamp\",\n  \"platform\": \"Udemy\",\n  \"url\": \"https://www.udemy.com/course/the-complete-web-development-bootcamp/\",\n  \"price\": \"Paid ($15-20 on sale)\",\n  \"description\": \"Full-stack web development course covering HTML, CSS, JavaScript, React, Node.js, and MongoDB with 60+ hours of content\",\n  \"level\": \"Beginner to Intermediate\"\n}`;\n\n// Validate roadmap structure\nfunction validateRoadmap(roadmap) {\n  if (!roadmap || typeof roadmap !== 'object') {\n    return { valid: false, error: 'Roadmap must be an object' };\n  }\n\n  if (!Array.isArray(roadmap.phases)) {\n    return { valid: false, error: 'Phases must be an array' };\n  }\n\n  if (roadmap.phases.length === 0) {\n    return { valid: false, error: 'Roadmap must have at least one phase' };\n  }\n\n  for (const phase of roadmap.phases) {\n    if (!phase.id || !phase.title || !phase.color) {\n      return { valid: false, error: 'Each phase must have id, title, and color' };\n    }\n\n    if (!Array.isArray(phase.sections)) {\n      return { valid: false, error: 'Each phase must have sections array' };\n    }\n  }\n\n  return { valid: true };\n}\n\n// Main POST handler\nexport async function POST(request) {\n  try {\n    // Get client IP for rate limiting\n    const forwarded = request.headers.get('x-forwarded-for');\n    const ip = forwarded ? forwarded.split(',')[0] : 'unknown';\n\n    // Rate limiting (10 requests per minute per IP)\n    if (!checkRateLimit(ip, 10, 60000)) {\n      return NextResponse.json(\n        { error: 'Too many requests. Please try again later.' },\n        { status: 429 }\n      );\n    }\n\n    // Parse request body with error handling\n    let body;\n    try {\n      body = await request.json();\n    } catch (parseError) {\n      return NextResponse.json(\n        { error: 'Invalid JSON in request body' },\n        { status: 400 }\n      );\n    }\n\n    const { query } = body;\n\n    // Validate input\n    if (!query || typeof query !== 'string') {\n      return NextResponse.json(\n        { error: 'Query is required and must be a string' },\n        { status: 400 }\n      );\n    }\n\n    const trimmedQuery = query.trim();\n\n    if (trimmedQuery.length === 0) {\n      return NextResponse.json(\n        { error: 'Query cannot be empty' },\n        { status: 400 }\n      );\n    }\n\n    if (trimmedQuery.length > 2000) {\n      return NextResponse.json(\n        { error: 'Query is too long. Maximum 2000 characters.' },\n        { status: 400 }\n      );\n    }\n\n    // Check for API key\n    const apiKey = process.env.OPENROUTER_API_KEY;\n    if (!apiKey) {\n      console.error('OPENROUTER_API_KEY is not configured');\n      return NextResponse.json(\n        { error: 'Server configuration error. Please contact support.' },\n        { status: 500 }\n      );\n    }\n\n    // Call OpenRouter API with timeout\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 60000); // 60s timeout\n\n    let aiResponse;\n    try {\n      aiResponse = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json',\n          'HTTP-Referer': process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000',\n          'X-Title': 'AI Roadmap Generator'\n        },\n        body: JSON.stringify({\n          model: 'anthropic/claude-3.5-sonnet',\n          messages: [\n            { role: 'system', content: SYSTEM_PROMPT },\n            { role: 'user', content: `Create a detailed learning roadmap for: ${trimmedQuery}` }\n          ],\n          temperature: 0.7,\n          max_tokens: 4000\n        }),\n        signal: controller.signal\n      });\n    } catch (fetchError) {\n      clearTimeout(timeoutId);\n\n      if (fetchError.name === 'AbortError') {\n        return NextResponse.json(\n          { error: 'Request timeout. Please try again.' },\n          { status: 408 }\n        );\n      }\n\n      console.error('OpenRouter API fetch error:', fetchError);\n      return NextResponse.json(\n        { error: 'Failed to connect to AI service' },\n        { status: 503 }\n      );\n    }\n\n    clearTimeout(timeoutId);\n\n    // Handle API error responses\n    if (!aiResponse.ok) {\n      let errorData;\n      try {\n        errorData = await aiResponse.json();\n      } catch {\n        errorData = { error: 'Unknown error' };\n      }\n\n      console.error('OpenRouter API Error:', {\n        status: aiResponse.status,\n        error: errorData\n      });\n\n      // Handle specific error codes\n      if (aiResponse.status === 401) {\n        return NextResponse.json(\n          { error: 'API authentication failed' },\n          { status: 500 }\n        );\n      }\n\n      if (aiResponse.status === 429) {\n        return NextResponse.json(\n          { error: 'AI service rate limit exceeded. Please try again later.' },\n          { status: 429 }\n        );\n      }\n\n      return NextResponse.json(\n        { \n          error: 'Failed to generate roadmap',\n          details: errorData.error?.message || 'Unknown error from AI service'\n        },\n        { status: aiResponse.status }\n      );\n    }\n\n    // Parse AI response\n    let data;\n    try {\n      data = await aiResponse.json();\n    } catch (jsonError) {\n      console.error('Failed to parse AI response:', jsonError);\n      return NextResponse.json(\n        { error: 'Invalid response from AI service' },\n        { status: 500 }\n      );\n    }\n\n    // Extract content\n    const content = data.choices?.[0]?.message?.content;\n\n    if (!content) {\n      console.error('No content in AI response:', data);\n      return NextResponse.json(\n        { error: 'No content received from AI service' },\n        { status: 500 }\n      );\n    }\n\n    // Parse JSON content (handle markdown code blocks)\n    let roadmap;\n    try {\n      const cleanedContent = content\n        .replace(/```json\\s*/g, '')\n        .replace(/```\\s*/g, '')\n        .trim();\n\n      roadmap = JSON.parse(cleanedContent);\n    } catch (parseError) {\n      console.error('JSON parse error:', parseError);\n      console.error('Content received:', content.substring(0, 500));\n      return NextResponse.json(\n        { error: 'Failed to parse AI response. Please try again.' },\n        { status: 500 }\n      );\n    }\n\n    // Validate roadmap structure\n    const validation = validateRoadmap(roadmap);\n    if (!validation.valid) {\n      console.error('Invalid roadmap structure:', validation.error);\n      return NextResponse.json(\n        { error: `Invalid roadmap structure: ${validation.error}` },\n        { status: 500 }\n      );\n    }\n\n    // Build validated response with defaults\n    const validatedRoadmap = {\n      phases: roadmap.phases || [],\n      projects: roadmap.projects || [],\n      resources: roadmap.resources || {\n        youtubeChannels: [],\n        courses: [],\n        documentation: [],\n        books: [],\n        communities: [],\n        tools: []\n      },\n      learningPathData: {\n        coreFrameworks: roadmap.learningPathData?.coreFrameworks || [],\n        essentialTools: roadmap.learningPathData?.essentialTools || [],\n        keyTechnologies: roadmap.learningPathData?.keyTechnologies || [],\n        certifications: roadmap.learningPathData?.certifications || [],\n        practiceWebsites: roadmap.learningPathData?.practiceWebsites || []\n      },\n      timelineData: roadmap.timelineData || [],\n      finalTips: roadmap.finalTips || []\n    };\n\n    // Return successful response\n    return NextResponse.json(validatedRoadmap, { \n      status: 200,\n      headers: {\n        'Cache-Control': 'no-store, max-age=0',\n      }\n    });\n\n  } catch (error) {\n    // Catch-all error handler\n    console.error('Unexpected error in API route:', error);\n\n    return NextResponse.json(\n      { \n        error: 'Internal server error',\n        details: process.env.NODE_ENV === 'development' ? error.message : undefined\n      },\n      { status: 500 }\n    );\n  }\n}\n\n// Handle other HTTP methods\nexport async function GET() {\n  return NextResponse.json(\n    { error: 'Method not allowed. Use POST.' },\n    { status: 405 }\n  );\n}\n\n// Export route config\nexport const runtime = 'nodejs'; // or 'edge' for edge runtime\nexport const dynamic = 'force-dynamic'; // Disable caching for this route"],"names":[],"mappings":"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","debugId":null}}]
}