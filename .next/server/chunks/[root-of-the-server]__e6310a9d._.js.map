{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/api/generate-roadmap/route.js"],"sourcesContent":["// pages/api/generate-roadmap.js\n// Production-ready backend API for AI Roadmap Generator\n\nexport default async function handler(req, res) {\n  // Only allow POST requests\n  if (req.method !== 'POST') {\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n\n  const { query } = req.body;\n\n  // Validate input\n  if (!query || typeof query !== 'string' || query.trim().length === 0) {\n    return res.status(400).json({ error: 'Query is required and must be a non-empty string' });\n  }\n\n  if (query.length > 2000) {\n    return res.status(400).json({ error: 'Query is too long. Maximum 2000 characters.' });\n  }\n\n  // Check for API key\n  if (!process.env.OPENROUTER_API_KEY) {\n    console.error('OPENROUTER_API_KEY is not set');\n    return res.status(500).json({ error: 'Server configuration error' });\n  }\n\n  const systemPrompt = `You are an AI Roadmap Generator expert that creates detailed, production-level structured learning roadmaps for 2025.\n\nCRITICAL: You MUST respond with ONLY valid JSON. No markdown, no code blocks, no explanations - just pure JSON.\n\nAnalyze the user's query to understand:\n- Their current skillset and experience level\n- Their desired role or career goal\n- Any specific technologies or domains mentioned\n\nGenerate a comprehensive 2025-ready roadmap with modern frameworks, tools, and best practices.\n\nReturn EXACTLY this JSON structure (with real content):\n\n{\n  \"phases\": [\n    {\n      \"id\": \"phase1\",\n      \"title\": \"Foundation Phase\",\n      \"subtitle\": \"Master the Fundamentals\",\n      \"description\": \"Build a solid foundation with core concepts and essential skills\",\n      \"color\": \"#8B5CF6\",\n      \"sections\": [\n        {\n          \"title\": \"Core Concepts\",\n          \"items\": [\n            \"Concept 1 with brief description\",\n            \"Concept 2 with brief description\",\n            \"Concept 3 with brief description\"\n          ]\n        },\n        {\n          \"title\": \"Essential Tools\",\n          \"items\": [\n            \"Tool 1 and why it matters\",\n            \"Tool 2 and its purpose\"\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"phase2\",\n      \"title\": \"Intermediate Phase\",\n      \"subtitle\": \"Deepen Your Knowledge\",\n      \"description\": \"Advanced concepts and practical applications\",\n      \"color\": \"#EC4899\",\n      \"sections\": [\n        {\n          \"title\": \"Advanced Topics\",\n          \"items\": [\"Topic 1\", \"Topic 2\"]\n        }\n      ]\n    },\n    {\n      \"id\": \"phase3\",\n      \"title\": \"Advanced Phase\",\n      \"subtitle\": \"Master Advanced Techniques\",\n      \"description\": \"Expert-level skills and real-world projects\",\n      \"color\": \"#F59E0B\",\n      \"sections\": [\n        {\n          \"title\": \"Expert Skills\",\n          \"items\": [\"Skill 1\", \"Skill 2\"]\n        }\n      ]\n    },\n    {\n      \"id\": \"phase4\",\n      \"title\": \"Specialization Phase\",\n      \"subtitle\": \"Career-Ready Skills\",\n      \"description\": \"Industry-specific expertise and portfolio building\",\n      \"color\": \"#10B981\",\n      \"sections\": [\n        {\n          \"title\": \"Specializations\",\n          \"items\": [\"Area 1\", \"Area 2\"]\n        }\n      ]\n    }\n  ],\n  \"learningPathData\": {\n    \"coreFrameworks\": [\"Framework 1\", \"Framework 2\", \"Framework 3\"],\n    \"essentialTools\": [\"Tool 1\", \"Tool 2\", \"Tool 3\"],\n    \"keyTechnologies\": [\"Tech 1\", \"Tech 2\", \"Tech 3\"],\n    \"recommendedProjects\": [\"Project 1 - description\", \"Project 2 - description\"],\n    \"certifications\": [\"Cert 1\", \"Cert 2\"],\n    \"learningResources\": [\"Resource 1\", \"Resource 2\"]\n  },\n  \"timelineData\": [\n    { \"phase\": \"Foundation Phase\", \"months\": \"2-3 months\" },\n    { \"phase\": \"Intermediate Phase\", \"months\": \"3-4 months\" },\n    { \"phase\": \"Advanced Phase\", \"months\": \"4-5 months\" },\n    { \"phase\": \"Specialization Phase\", \"months\": \"3-4 months\" }\n  ],\n  \"finalTips\": [\n    \"Build projects while learning - theory alone isn't enough\",\n    \"Join communities and network with professionals in the field\",\n    \"Contribute to open-source projects to gain real-world experience\",\n    \"Create a portfolio showcasing your best work\",\n    \"Stay updated with latest industry trends and technologies\",\n    \"Practice coding daily to build consistency and muscle memory\"\n  ]\n}\n\nIMPORTANT RULES:\n1. Use these exact color codes for phases: #8B5CF6, #EC4899, #F59E0B, #10B981\n2. Create 3-5 phases based on the learning journey complexity\n3. Each phase should have 2-4 sections\n4. Each section should have 3-6 items\n5. Make content specific to 2025 technologies and best practices\n6. Include modern frameworks, AI tools, and current industry standards\n7. Timeline should be realistic (total 12-18 months for career transition)\n8. Return ONLY the JSON object, no other text`;\n\n  try {\n    // Call OpenRouter API\n    const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}`,\n        'Content-Type': 'application/json',\n        'HTTP-Referer': process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000',\n        'X-Title': 'AI Roadmap Generator'\n      },\n      body: JSON.stringify({\n        model: 'anthropic/claude-3.5-sonnet', // or 'openai/gpt-4-turbo'\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: `Create a detailed learning roadmap for: ${query}` }\n        ],\n        temperature: 0.7,\n        max_tokens: 4000\n      })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      console.error('OpenRouter API Error:', errorData);\n      return res.status(response.status).json({ \n        error: 'Failed to generate roadmap from AI service',\n        details: errorData.error?.message || 'Unknown error'\n      });\n    }\n\n    const data = await response.json();\n\n    // Extract content from response\n    const content = data.choices?.[0]?.message?.content;\n\n    if (!content) {\n      console.error('No content in API response:', data);\n      return res.status(500).json({ error: 'No content received from AI service' });\n    }\n\n    // Parse JSON (handle potential markdown code blocks)\n    let roadmap;\n    try {\n      // Remove markdown code blocks if present\n      const cleanedContent = content\n        .replace(/```json\\s*/g, '')\n        .replace(/```\\s*/g, '')\n        .trim();\n\n      roadmap = JSON.parse(cleanedContent);\n    } catch (parseError) {\n      console.error('JSON Parse Error:', parseError);\n      console.error('Content received:', content);\n      return res.status(500).json({ \n        error: 'Failed to parse AI response',\n        details: 'The AI returned invalid JSON format'\n      });\n    }\n\n    // Validate roadmap structure\n    if (!roadmap.phases || !Array.isArray(roadmap.phases)) {\n      console.error('Invalid roadmap structure:', roadmap);\n      return res.status(500).json({ error: 'Invalid roadmap structure received' });\n    }\n\n    // Ensure all required fields exist\n    const validatedRoadmap = {\n      phases: roadmap.phases || [],\n      learningPathData: roadmap.learningPathData || {},\n      timelineData: roadmap.timelineData || [],\n      finalTips: roadmap.finalTips || []\n    };\n\n    // Return the generated roadmap\n    return res.status(200).json(validatedRoadmap);\n\n  } catch (error) {\n    console.error('Error generating roadmap:', error);\n\n    // Return appropriate error response\n    if (error.name === 'AbortError') {\n      return res.status(408).json({ error: 'Request timeout' });\n    }\n\n    return res.status(500).json({ \n      error: 'Internal server error',\n      details: process.env.NODE_ENV === 'development' ? error.message : undefined\n    });\n  }\n}\n\n// Optional: Add rate limiting for production\n// You can use packages like 'express-rate-limit' or implement custom logic\n\n// Export config for API route (Next.js specific)\nexport const config = {\n  api: {\n    bodyParser: {\n      sizeLimit: '1mb',\n    },\n    responseLimit: '8mb',\n  },\n};"],"names":[],"mappings":"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","debugId":null}}]
}