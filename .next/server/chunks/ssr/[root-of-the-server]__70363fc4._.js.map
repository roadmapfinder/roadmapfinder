{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Java/roadmapData.js"],"sourcesContent":["export const phases = [\n  {\n    id: 1,\n    title: \"Foundations — Beginner\",\n    subtitle: \"0–2 months\",\n    description: \"Learn core Java syntax, basic OOP thinking, and write small programs you understand end-to-end\",\n    color: \"bg-green-500\",\n    sections: [\n      {\n        title: \"Must-Know Topics\",\n        items: [\n          \"Java basics: variables, primitives, operators, control flow (if/switch, loops)\",\n          \"Data types & String API\",\n          \"Methods, parameters, return values, varargs\",\n          \"Object-Oriented Programming: classes, objects, fields, methods, constructors, this\",\n          \"Encapsulation, access modifiers (public, private, protected, package)\",\n          \"Inheritance, super, method overriding\",\n          \"Polymorphism & dynamic dispatch, interfaces, default methods\",\n          \"Exception handling: try/catch/finally, checked vs unchecked exceptions, custom exceptions\",\n          \"Collections basics: List, Set, Map, Queue and when to use each\",\n          \"Generics fundamentals\",\n          \"Basic I/O (files, InputStream/OutputStream, Reader/Writer)\",\n          \"Simple debugging: using an IDE debugger, reading stack traces\",\n          \"Basic terminal/git skills: git init, git add/commit/push, GitHub repo\"\n        ]\n      },\n      {\n        title: \"Actionable Practice\",\n        items: [\n          \"Solve tiny problems: implement factorial, Fibonacci, reverse string, file line counter\",\n          \"Build a CLI tool (e.g., a Todo list persisted to a JSON/text file)\",\n          \"Keep code on GitHub — learn branching and meaningful commit messages\"\n        ]\n      },\n      {\n        title: \"Mastery Checklist\",\n        items: [\n          \"Can design small classes and use OOP well\",\n          \"Can use collections and generics comfortably\",\n          \"Can debug and read stack traces\",\n          \"Have 2–3 small projects on GitHub\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 2,\n    title: \"Core Java & Tooling — Solid Intermediate\",\n    subtitle: \"2–4 months\",\n    description: \"Master language features, deeper libraries, and the Java toolchain\",\n    color: \"bg-yellow-500\",\n    sections: [\n      {\n        title: \"Must-Know Topics\",\n        items: [\n          \"Java versions & features (lambda expressions, streams, Optional, var, records, modules)\",\n          \"Streams API and functional-style programming patterns\",\n          \"Advanced Collections (concurrent collections, Collections utilities)\",\n          \"Concurrency basics: threads, Runnable/Callable, synchronized, volatile\",\n          \"Executors, thread pools, Future, CompletableFuture\",\n          \"Java Memory Model basics: heap vs stack, GC concept\",\n          \"I/O & NIO (non-blocking I/O basics, Path, Files)\",\n          \"Serialization (JSON libraries: Jackson/Gson)\",\n          \"Build tools: Maven or Gradle (dependency management, lifecycle, plugins)\",\n          \"Unit testing: JUnit 5, parameterized tests, test structure\",\n          \"Mocking: Mockito\",\n          \"Logging: SLF4J + Logback/Log4j2\",\n          \"Debugging & tooling: jstack, jmap, jstat (basics), IDE features (IntelliJ/Eclipse)\",\n          \"Basic profiling: VisualVM, Java Flight Recorder (concepts)\"\n        ]\n      },\n      {\n        title: \"Actionable Practice\",\n        items: [\n          \"Re-implement a small project using Streams & lambdas\",\n          \"Write comprehensive unit tests; aim for logical coverage, not fake coverage\",\n          \"Configure Maven/Gradle builds, include test and shade plugins\",\n          \"Add logging at appropriate levels, and show log rotation\"\n        ]\n      },\n      {\n        title: \"Mastery Checklist\",\n        items: [\n          \"Comfortable with lambdas/streams and when not to overuse them\",\n          \"Understand thread pools and can use CompletableFuture\",\n          \"Can create CI-friendly builds (Maven/Gradle) and run automated tests\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 3,\n    title: \"Backend Development & Frameworks — Advanced\",\n    subtitle: \"4–8 months\",\n    description: \"Build production-quality backend services using mainstream Java frameworks and persistence\",\n    color: \"bg-orange-500\",\n    sections: [\n      {\n        title: \"Must-Know Topics\",\n        items: [\n          \"Spring ecosystem: Spring Boot, Spring MVC, Spring Data JPA, Spring Security basics\",\n          \"REST API design: resource modelling, HTTP verbs/status codes, content negotiation\",\n          \"Persistence: JDBC, JPA/Hibernate, entity mapping, relationships, transactions\",\n          \"Database fundamentals: SQL (joins, indexes), ACID, normalization, schema migration (Flyway/Liquibase)\",\n          \"DTOs, mapping (MapStruct or manual), validation (javax.validation / jakarta.validation)\",\n          \"API versioning, API documentation (OpenAPI / Swagger)\",\n          \"Integration testing: @SpringBootTest, Testcontainers (for DB integration)\",\n          \"Caching basics (Redis), connection pools (HikariCP)\",\n          \"Build & Packaging: fat jars, executable jars, native images (optional)\",\n          \"Basic HTTP client libraries: HttpClient, RestTemplate / WebClient (reactive)\",\n          \"Security: basic auth, OAuth2, JWT, protecting endpoints, common vulnerabilities (OWASP top 10)\"\n        ]\n      },\n      {\n        title: \"Actionable Practice\",\n        items: [\n          \"Build a Spring Boot REST API with CRUD operations, JPA, and migrations\",\n          \"Add authentication (JWT or OAuth2 via OAuth provider)\",\n          \"Write integration tests using Testcontainers + JUnit\",\n          \"Add caching with Redis and profile endpoints\"\n        ]\n      },\n      {\n        title: \"Mastery Checklist\",\n        items: [\n          \"You can design and implement a secure REST API with persistence, validation, and error handling\",\n          \"You know how to test the app fully (unit + integration)\",\n          \"App can be built and deployed as artifact (jar/docker)\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 4,\n    title: \"Distributed Systems & Production Readiness\",\n    subtitle: \"8–12 months\",\n    description: \"Build, deploy, operate and scale services; understand production concerns\",\n    color: \"bg-blue-500\",\n    sections: [\n      {\n        title: \"Must-Know Topics\",\n        items: [\n          \"Microservices basics vs monoliths; when to choose which\",\n          \"Spring Cloud / alternatives: service discovery, config server, circuit breakers (concepts)\",\n          \"API gateways, load balancing, service-to-service communication patterns (HTTP, gRPC)\",\n          \"Messaging & event-driven systems: Kafka, RabbitMQ; topics vs queues, partitions, consumer groups\",\n          \"Observability: structured logging, correlation IDs, distributed tracing (OpenTelemetry / Zipkin / Jaeger)\",\n          \"Monitoring & metrics: Prometheus metrics, Grafana dashboards, alerts\",\n          \"Containerization: Dockerfile best practices, multi-stage builds\",\n          \"Orchestration: Kubernetes basics (pods, deployments, services, ingress, configmaps, secrets)\",\n          \"CI/CD pipelines: GitHub Actions/Jenkins/GitLab CI for build/test/deploy\",\n          \"Performance tuning: JVM options, GCs (G1, ZGC concepts), memory sizing, thread dumps analysis\",\n          \"Security in production: TLS/HTTPS, secrets management, role-based access control\",\n          \"Reliability patterns: retries, backoff, bulkhead, idempotency\"\n        ]\n      },\n      {\n        title: \"Actionable Practice\",\n        items: [\n          \"Containerize your Spring Boot service and run in Docker Compose\",\n          \"Deploy a service on a Kubernetes cluster (minikube/k3s or a cloud provider)\",\n          \"Connect a simple microservice pair using Kafka to exchange events; instrument tracing\",\n          \"Add Prometheus instrumentation and a basic Grafana dashboard\",\n          \"Create a CI pipeline that runs tests and publishes Docker image to registry\"\n        ]\n      },\n      {\n        title: \"Mastery Checklist\",\n        items: [\n          \"Can design a production deployment architecture (CI/CD, monitoring, scaling)\",\n          \"Can analyze performance issues using profiler/heap dumps and resolve common bottlenecks\",\n          \"Understands distributed system tradeoffs (consistency, partition tolerance, latency)\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 5,\n    title: \"Expert / Mastery — Architect & Lead Developer\",\n    subtitle: \"12+ months\",\n    description: \"Lead design of scalable systems, deep JVM mastery, advanced performance and architecture\",\n    color: \"bg-purple-500\",\n    sections: [\n      {\n        title: \"Must-Know Topics\",\n        items: [\n          \"Deep JVM internals: classloading, bytecode, classfile structure, JIT compilation, hotspot internals\",\n          \"Advanced GC tuning and scenarios; native memory issues; memory leak hunting with MAT\",\n          \"Advanced concurrency: lock-free algorithms, java.util.concurrent internals, Unsafe (conceptual), VarHandle\",\n          \"Reactive programming: Project Reactor, reactive streams, backpressure patterns (where appropriate)\",\n          \"Distributed data stores & CAP tradeoffs; advanced Kafka design (exactly-once semantics, compacted topics)\",\n          \"Design for scale: partitioning, sharding, CQRS, event sourcing (use where appropriate), database scaling patterns\",\n          \"System design at scale: load patterns, caches, CDN, multi-region architecture, cost optimization\",\n          \"Performance engineering: benchmarking (JMH), load testing (Gatling/JMeter), profiling (async-profiler), tuning pipelines\",\n          \"Observability at scale: sampling, log retention, cost tradeoffs, SLOs and SLIs, error budgets\",\n          \"Leading teams: code reviews, design docs, mentoring, architecture decision records (ADR)\"\n        ]\n      },\n      {\n        title: \"Actionable Practice\",\n        items: [\n          \"Implement a high-throughput service and benchmark with JMH\",\n          \"Prototype an event-sourced feature using Kafka + compacted topics or an event store\",\n          \"Do a system design write-up for a large-scale use case (e.g., real-time analytics pipeline)\"\n        ]\n      },\n      {\n        title: \"Mastery Checklist\",\n        items: [\n          \"Able to write/design systems for high throughput / low latency\",\n          \"Can diagnose and fix production-level JVM and concurrency problems\",\n          \"Can drive architecture decisions and mentor other engineers\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 6,\n    title: \"Project Ideas — Mapped to Stages\",\n    subtitle: \"Build These Projects\",\n    description: \"Progressive complexity to solidify your skills\",\n    color: \"bg-red-500\",\n    sections: [\n      {\n        title: \"Beginner Projects\",\n        items: [\n          \"CLI Todo app (file persistence)\",\n          \"Text analyzer (word frequency)\",\n          \"Simple banking console app\"\n        ]\n      },\n      {\n        title: \"Intermediate Projects\",\n        items: [\n          \"RESTful Bookstore (Spring Boot + JPA + unit tests)\",\n          \"Chat CLI with sockets\",\n          \"CSV ETL tool\"\n        ]\n      },\n      {\n        title: \"Advanced Projects\",\n        items: [\n          \"Full e-commerce microservice (orders, catalog, payments stub) with Spring Boot + Kafka + Postgres + Redis + Swagger + Auth; dockerized + k8s manifest\"\n        ]\n      },\n      {\n        title: \"Production/Expert Projects\",\n        items: [\n          \"Real-time analytics pipeline: ingest events → Kafka → stream processing (Kafka Streams or Flink) → materialized view in Cassandra/ClickHouse → dashboard. Include tracing and autoscaling\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 7,\n    title: \"Practical Habit & Study Plan\",\n    subtitle: \"How to Practice Well\",\n    description: \"Build consistent learning habits\",\n    color: \"bg-indigo-500\",\n    sections: [\n      {\n        title: \"Study Routine\",\n        items: [\n          \"Daily: 30–60 min coding or reading; alternate between DS/algorithms and systems topics\",\n          \"Weekly: Ship a small feature or PR; write tests and CI for it\",\n          \"Monthly: Build & deploy a small project end-to-end (from code → container → cluster)\",\n          \"Always write small, focused README and architecture notes for every project\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 8,\n    title: \"Interview & Hiring Prep\",\n    subtitle: \"What Employers Expect\",\n    description: \"Prepare for Java backend interviews\",\n    color: \"bg-pink-500\",\n    sections: [\n      {\n        title: \"Coding Interview Topics\",\n        items: [\n          \"Arrays, strings, two-pointers, sliding window, hashing\",\n          \"Trees (BFS/DFS), heaps, graphs (shortest path, BFS)\",\n          \"Dynamic programming basics\",\n          \"Practice problems end-to-end with clean code and tests\"\n        ]\n      },\n      {\n        title: \"System Design Topics\",\n        items: [\n          \"Design APIs, think about scale, data model, caching, replication, partitioning\",\n          \"Practice 4–6 designs: URL shortener, chat system, ride-hailing core, e-commerce checkout\"\n        ]\n      },\n      {\n        title: \"Behavioral Questions\",\n        items: [\n          \"Prepare STAR stories around projects, incidents, and learning\"\n        ]\n      },\n      {\n        title: \"Common Technical Questions\",\n        items: [\n          \"Explain GC and different collectors\",\n          \"Difference between processes and threads\",\n          \"How to handle DB migrations\",\n          \"How you instrument apps\",\n          \"Tradeoffs in microservices vs monolith\",\n          \"Details about Spring Boot lifecycle\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 9,\n    title: \"Tools, Libraries & Cheat-List\",\n    subtitle: \"Essential Ecosystem\",\n    description: \"Must-know tools and libraries\",\n    color: \"bg-teal-500\",\n    sections: [\n      {\n        title: \"Core Tools\",\n        items: [\n          \"JDK (11+; pick LTS like 17 or later)\",\n          \"Maven or Gradle\",\n          \"IntelliJ IDEA (recommended)\"\n        ]\n      },\n      {\n        title: \"Frameworks & Libraries\",\n        items: [\n          \"Spring Boot, Spring Data JPA, Spring Security\",\n          \"Jackson, MapStruct, Lombok (optional)\",\n          \"JUnit 5, Mockito, Testcontainers\"\n        ]\n      },\n      {\n        title: \"Infrastructure & DevOps\",\n        items: [\n          \"Docker, kubectl, Helm (basics)\",\n          \"Kafka (or RabbitMQ), Redis, PostgreSQL, MongoDB (knowledge)\",\n          \"Prometheus, Grafana, ELK (or Loki)\",\n          \"GitHub Actions / Jenkins, SonarQube / SpotBugs / Checkstyle\"\n        ]\n      },\n      {\n        title: \"Profiling & Performance\",\n        items: [\n          \"VisualVM, Java Flight Recorder\",\n          \"async-profiler\",\n          \"JMH for microbenchmarks\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 10,\n    title: \"Learning Resources\",\n    subtitle: \"High-Value Materials\",\n    description: \"Curated books, docs, and practice sites\",\n    color: \"bg-cyan-500\",\n    sections: [\n      {\n        title: \"Essential Books\",\n        items: [\n          \"Effective Java (Joshua Bloch) — essential\",\n          \"Java Concurrency in Practice (Brian Goetz) — concurrency fundamentals\",\n          \"Clean Code (Robert C. Martin) — coding discipline\"\n        ]\n      },\n      {\n        title: \"Online Resources\",\n        items: [\n          \"Spring official docs + guides (get hands-on)\",\n          \"Baeldung (good concise articles)\",\n          \"Official Oracle/OpenJDK docs\"\n        ]\n      },\n      {\n        title: \"Practice Platforms\",\n        items: [\n          \"LeetCode / HackerRank / Codeforces (for DS/algorithms)\"\n        ]\n      },\n      {\n        title: \"Open Source Learning\",\n        items: [\n          \"GitHub: read production-grade open-source projects (Spring PetClinic, etc.)\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 11,\n    title: \"Progress Milestones\",\n    subtitle: \"How to Measure Progress\",\n    description: \"Track your learning journey\",\n    color: \"bg-lime-500\",\n    sections: [\n      {\n        title: \"Key Milestones\",\n        items: [\n          \"Foundations: Can implement OOP projects, tests, and GitHub repos\",\n          \"Core Java: Fluent with lambdas, streams, concurrency basics; testable code & CI\",\n          \"Backend: A deployed REST service with DB, tests, and auth\",\n          \"Production: Deployed on Docker/K8s, observability, messaging, and autoscaling demo\",\n          \"Mastery: Can design a large-scale system, tune JVM, and mentor others\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 12,\n    title: \"Common Mistakes & How to Avoid Them\",\n    subtitle: \"Learn from Others\",\n    description: \"Anti-patterns and best practices\",\n    color: \"bg-amber-500\",\n    sections: [\n      {\n        title: \"Common Pitfalls\",\n        items: [\n          \"Premature optimization — profile first\",\n          \"Overuse of frameworks without understanding Java core\",\n          \"Neglecting testing & CI — always write tests\",\n          \"Not using proper error handling or logging with correlation IDs\",\n          \"Designing microservices for everything — start with a modular monolith if small team\"\n        ]\n      }\n    ]\n  }\n];"],"names":[],"mappings":";;;AAAO,MAAM,SAAS;IACpB;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;CACD","debugId":null}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Java/docs.jsx"],"sourcesContent":["import React from \"react\";\nimport { ExternalLink } from \"lucide-react\";\n\nconst docsList = [\n  // Core Java & JVM\n  {\n    title: \"Java SE Documentation\",\n    description:\n      \"The official resource for Java Standard Edition, including tutorials, API documentation, and developer guides.\",\n    url: \"https://docs.oracle.com/en/java/\",\n    citation: \"Oracle\",\n  },\n  {\n    title: \"Java Tutorials\",\n    description:\n      \"Beginner-friendly tutorials covering Java basics, object-oriented programming, and more.\",\n    url: \"https://docs.oracle.com/javase/tutorial/\",\n    citation: \"Oracle\",\n  },\n  {\n    title: \"Java Platform, Standard Edition API Specification\",\n    description:\n      \"Detailed API documentation for Java SE classes and interfaces.\",\n    url: \"https://docs.oracle.com/en/java/javase/\",\n    citation: \"Oracle\",\n  },\n\n  // Build Tools\n  {\n    title: \"Apache Maven Documentation\",\n    description:\n      \"Comprehensive guide to using Maven for project management and build automation.\",\n    url: \"https://maven.apache.org/guides/\",\n    citation: \"Apache Maven\",\n  },\n  {\n    title: \"Gradle Documentation\",\n    description:\n      \"Official documentation for Gradle, a modern build automation tool.\",\n    url: \"https://docs.gradle.org/current/userguide/\",\n    citation: \"Gradle\",\n  },\n\n  // Testing Frameworks\n  {\n    title: \"JUnit 5 User Guide\",\n    description:\n      \"Official guide for JUnit 5, the most widely used testing framework in Java.\",\n    url: \"https://docs.junit.org/current/user-guide/\",\n    citation: \"JUnit\",\n  },\n  {\n    title: \"Mockito Documentation\",\n    description:\n      \"Comprehensive documentation for Mockito, a popular mocking framework for unit tests.\",\n    url: \"https://site.mockito.org/\",\n    citation: \"Mockito\",\n  },\n\n  // Web Development Frameworks\n  {\n    title: \"Spring Framework Documentation\",\n    description:\n      \"Official documentation for the Spring Framework, covering core concepts, data access, and more.\",\n    url: \"https://docs.spring.io/spring-framework/reference/index.html\",\n    citation: \"Spring\",\n  },\n  {\n    title: \"Spring Boot Documentation\",\n    description:\n      \"Guides and reference material for building production-ready applications with Spring Boot.\",\n    url: \"https://docs.spring.io/spring-boot/docs/current/reference/html/\",\n    citation: \"Spring Boot\",\n  },\n  {\n    title: \"Hibernate ORM Documentation\",\n    description:\n      \"Official documentation for Hibernate ORM, a framework for object-relational mapping.\",\n    url: \"https://hibernate.org/orm/documentation/\",\n    citation: \"Hibernate\",\n  },\n\n  // Cloud & Deployment\n  {\n    title: \"Docker Documentation\",\n    description:\n      \"Official documentation for Docker, a platform for developing, shipping, and running applications.\",\n    url: \"https://docs.docker.com\",\n    citation: \"Docker\",\n  },\n  {\n    title: \"Kubernetes Documentation\",\n    description:\n      \"Comprehensive guide to Kubernetes, an open-source system for automating deployment, scaling, and management of containerized applications.\",\n    url: \"https://kubernetes.io/docs/\",\n    citation: \"Kubernetes\",\n  },\n\n  // Additional Learning Resources\n  {\n    title: \"Dev.java Learn\",\n    description:\n      \"Interactive tutorials and resources for learning Java, including setting up the JDK and writing your first Java application.\",\n    url: \"https://dev.java/learn/\",\n    citation: \"Dev.java\",\n  },\n  {\n    title: \"Spring Guides\",\n    description:\n      \"Hands-on guides to help you learn and use the Spring Framework.\",\n    url: \"https://spring.io/guides\",\n    citation: \"Spring\",\n  },\n];\n\nexport default function Docs() {\n  return (\n    <section className=\"px-6 py-12 bg-gray-50 min-h-screen\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">\n          📘 Java Documentation Sites\n        </h1>\n        <p className=\"text-gray-600 mb-10\">\n          Official and popular Java documentation links that every learner should know in 2025.\n        </p>\n\n        {/* Cards */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {docsList.map((doc) => (\n            <a\n              key={doc.title}\n              href={doc.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"group bg-white border border-gray-200 rounded-2xl p-6 shadow-sm hover:shadow-lg transition transform hover:-translate-y-1\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900 group-hover:text-blue-600\">\n                  {doc.title}\n                </h3>\n                <ExternalLink\n                  size={18}\n                  className=\"text-gray-400 group-hover:text-blue-600\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n              <p className=\"mt-3 text-sm text-gray-600\">{doc.description}</p>\n              <p className=\"mt-4 text-xs text-indigo-600 font-medium\">\n                {doc.citation}\n              </p>\n            </a>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,WAAW;IACf,kBAAkB;IAClB;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IAEA,cAAc;IACd;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IAEA,qBAAqB;IACrB;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IAEA,6BAA6B;IAC7B;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IAEA,qBAAqB;IACrB;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IAEA,gCAAgC;IAChC;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;CACD;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAG,WAAU;8BAAwC;;;;;;8BAGtD,8OAAC;oBAAE,WAAU;8BAAsB;;;;;;8BAKnC,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,oBACb,8OAAC;4BAEC,MAAM,IAAI,GAAG;4BACb,QAAO;4BACP,KAAI;4BACJ,WAAU;;8CAEV,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDACX,IAAI,KAAK;;;;;;sDAEZ,8OAAC,sNAAA,CAAA,eAAY;4CACX,MAAM;4CACN,WAAU;4CACV,eAAY;;;;;;;;;;;;8CAGhB,8OAAC;oCAAE,WAAU;8CAA8B,IAAI,WAAW;;;;;;8CAC1D,8OAAC;oCAAE,WAAU;8CACV,IAAI,QAAQ;;;;;;;2BAlBV,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;AA0B5B","debugId":null}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Java/projects.jsx"],"sourcesContent":["import React from \"react\";\n\nconst projects = [\n  // ---------- BEGINNER PROJECTS ----------\n  {\n    id: \"java-bank-management\",\n    level: \"Java — Beginner\",\n    title: \"Bank Management System\",\n    description:\n      \"A console-based application simulating basic banking operations like account creation, deposits, withdrawals, and balance inquiries.\",\n    url: \"https://www.youtube.com/watch?v=wY0fUVH-8TE\"\n  },\n  {\n    id: \"java-temp-converter\",\n    level: \"Java — Beginner\",\n    title: \"Temperature Converter\",\n    description:\n      \"A GUI application to convert temperatures between Celsius, Fahrenheit, and Kelvin.\",\n    url: \"https://www.youtube.com/watch?v=CEG5qkRPqCU\"\n  },\n  {\n    id: \"java-student-management\",\n    level: \"Java — Beginner\",\n    title: \"Student Management System\",\n    description:\n      \"A system to manage student records, including adding, updating, and deleting information.\",\n    url: \"https://www.youtube.com/watch?v=_8nW0YYSpIY\"\n  },\n  {\n    id: \"java-library-management\",\n    level: \"Java — Beginner\",\n    title: \"Library Management System\",\n    description:\n      \"An application to manage book inventories, issue/return books, and track due dates.\",\n    url: \"https://www.youtube.com/watch?v=KtDcPQkHU7o\"\n  },\n  {\n    id: \"java-inventory-management\",\n    level: \"Java — Beginner\",\n    title: \"Inventory Management System\",\n    description:\n      \"A system to track product stock, manage orders, and generate reports.\",\n    url: \"https://www.youtube.com/watch?v=QoBzRvut0HA\"\n  },\n  {\n    id: \"java-online-quiz\",\n    level: \"Java — Beginner\",\n    title: \"Online Quiz Application\",\n    description:\n      \"A web-based quiz application with multiple-choice questions, timers, and score tracking.\",\n    url: \"https://www.youtube.com/watch?v=5P8lCgteYKQ\"\n  },\n  {\n    id: \"java-ecommerce-website\",\n    level: \"Java — Intermediate\",\n    title: \"E-commerce Website\",\n    description:\n      \"A platform for users to browse products, add to cart, and make purchases.\",\n    url: \"https://www.youtube.com/watch?v=m559BxR30ls\"\n  },\n  {\n    id: \"java-weather-app\",\n    level: \"Java — Intermediate\",\n    title: \"Weather Forecasting Application\",\n    description:\n      \"An application to fetch and display weather data using APIs.\",\n    url: \"https://www.youtube.com/watch?v=8ZcEYv2ezWc\"\n  }\n];\n\nexport default function Projects() {\n  return (\n    <section className=\"bg-gray-50 py-12 min-h-screen\">\n      <div className=\"max-w-6xl mx-auto px-6\">\n        <header className=\"mb-8 text-center\">\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">\n            🧑‍💻 Java Project Roadmap\n          </h2>\n          <p className=\"mt-2 text-gray-600\">\n            From beginner apps to intermediate projects — each project includes latest YouTube tutorials (Hindi & English, 2025).\n          </p>\n        </header>\n\n        <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n          {projects.map((p) => (\n            <article\n              key={p.id}\n              className=\"group bg-white border border-gray-200 rounded-2xl p-6 shadow-sm hover:shadow-lg hover:-translate-y-1 transition-transform\"\n              aria-labelledby={`${p.id}-title`}\n            >\n              <span className=\"inline-block text-xs font-medium bg-indigo-100 text-indigo-800 px-2 py-1 rounded-full\">\n                {p.level}\n              </span>\n              <h3\n                id={`${p.id}-title`}\n                className=\"mt-4 text-lg font-semibold text-gray-900 group-hover:text-indigo-600\"\n              >\n                {p.title}\n              </h3>\n              <p className=\"mt-2 text-gray-600 text-sm\">{p.description}</p>\n              <a\n                href={p.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mt-4 inline-block text-indigo-600 font-medium hover:underline\"\n              >\n                Watch Tutorial ▶\n              </a>\n            </article>\n          ))}\n        </div>\n\n        <footer className=\"mt-10 text-sm text-gray-500 text-center\">\n          Start small, master the foundations, and scale up to advanced Java projects 🚀\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,WAAW;IACf,0CAA0C;IAC1C;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;CACD;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCAGtD,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;;8BAKpC,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,kBACb,8OAAC;4BAEC,WAAU;4BACV,mBAAiB,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;;8CAEhC,8OAAC;oCAAK,WAAU;8CACb,EAAE,KAAK;;;;;;8CAEV,8OAAC;oCACC,IAAI,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;oCACnB,WAAU;8CAET,EAAE,KAAK;;;;;;8CAEV,8OAAC;oCAAE,WAAU;8CAA8B,EAAE,WAAW;;;;;;8CACxD,8OAAC;oCACC,MAAM,EAAE,GAAG;oCACX,QAAO;oCACP,KAAI;oCACJ,WAAU;8CACX;;;;;;;2BAnBI,EAAE,EAAE;;;;;;;;;;8BA0Bf,8OAAC;oBAAO,WAAU;8BAA0C;;;;;;;;;;;;;;;;;AAMpE","debugId":null}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Java/faq.jsx"],"sourcesContent":["// components/Faq.jsx\nimport React from \"react\";\n\nconst faqs = [\n  {\n    question: \"Do I need to learn Data Structures and Algorithms (DSA) for Java backend development?\",\n    answer:\n      \"Yes, but focus on understanding how DSA applies in real-world Java problems — collections, searching, sorting, and optimization. You don’t need to master competitive programming, but a strong grasp of logic and efficiency helps you write scalable backend code.\",\n  },\n  {\n    question: \"Which Java version should I learn in 2025?\",\n    answer:\n      \"Start with Java 17 (LTS) or later. Most companies are moving toward Java 17 or Java 21. The syntax and performance improvements are modern while keeping long-term stability and support.\",\n  },\n  {\n    question: \"How important is Spring Boot for getting a Java developer job?\",\n    answer:\n      \"Very important. Spring Boot is the industry standard for building backend APIs and microservices. Mastering it — along with Spring Data JPA, Security, and Testing — will open most Java backend roles for you.\",\n  },\n  {\n    question: \"Should I learn Hibernate before Spring Data JPA?\",\n    answer:\n      \"Not necessarily. Spring Data JPA abstracts most Hibernate complexities, but understanding Hibernate concepts like entity lifecycle, caching, and relationships will help you debug and optimize effectively.\",\n  },\n  {\n    question: \"What database should I use for my Java projects?\",\n    answer:\n      \"Start with PostgreSQL or MySQL for relational databases. Learn to integrate using JPA/Hibernate. Later, explore Redis for caching and MongoDB for NoSQL scenarios like analytics or document storage.\",\n  },\n  {\n    question: \"How do I test my Java applications properly?\",\n    answer:\n      \"Use JUnit 5 for unit testing and Mockito for mocking dependencies. For integration tests, use @SpringBootTest or Testcontainers to test against real databases or services.\",\n  },\n  {\n    question: \"When should I learn Docker and Kubernetes as a Java developer?\",\n    answer:\n      \"After you’re comfortable building Spring Boot APIs and using databases. Docker helps you package and deploy your apps consistently, and Kubernetes comes next for orchestrating microservices in production.\",\n  },\n  {\n    question: \"Is learning Microservices mandatory for Java developers?\",\n    answer:\n      \"No, but it’s highly valuable. Start with monolithic applications to learn core backend principles. Once confident, learn microservices, Kafka, and distributed communication to move into enterprise-level systems.\",\n  },\n  {\n    question: \"What’s the best way to practice Java backend skills?\",\n    answer:\n      \"Build projects end-to-end — from API design to database integration, security, testing, and deployment. Each project should solve a real problem and include documentation, CI/CD, and Docker setup. Avoid only tutorials — build, break, and fix your code.\",\n  },\n  {\n    question: \"Can I become a Java developer without knowing frontend technologies?\",\n    answer:\n      \"Yes. Many backend engineers specialize in APIs and system design. However, knowing basic HTML, CSS, and JavaScript helps you test your APIs and collaborate better with frontend teams.\",\n  },\n  {\n    question: \"How do I make my Java projects stand out to recruiters?\",\n    answer:\n      \"Host your projects on GitHub, write clear README files, and deploy at least one live demo using Render, Railway, or Docker Hub. Add tests, CI/CD pipelines, and proper API documentation (Swagger/OpenAPI).\",\n  },\n];\n\nexport default function Faq() {\n  return (\n    <section className=\"bg-white py-16 min-h-screen\">\n      <div className=\"max-w-4xl mx-auto px-6\">\n        <header className=\"mb-10 text-center\">\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">💡 Java Developer FAQ</h2>\n          <p className=\"mt-2 text-gray-600\">\n            Common questions answered to guide you from beginner to industry-ready Java backend developer.\n          </p>\n        </header>\n\n        <div className=\"space-y-6\">\n          {faqs.map((faq, index) => (\n            <details\n              key={index}\n              className=\"group border border-gray-200 rounded-xl p-5 shadow-sm hover:shadow-md transition-shadow\"\n            >\n              <summary className=\"cursor-pointer flex justify-between items-center\">\n                <h3 className=\"text-lg font-medium text-gray-900 group-hover:text-yellow-700\">\n                  {faq.question}\n                </h3>\n                <span className=\"text-yellow-600 font-bold group-open:rotate-180 transition-transform\">\n                  ▼\n                </span>\n              </summary>\n              <p className=\"mt-3 text-gray-600 text-sm leading-relaxed\">{faq.answer}</p>\n            </details>\n          ))}\n        </div>\n\n        <footer className=\"mt-12 text-sm text-gray-500 text-center\">\n          Keep learning, building, and iterating — that’s how Java mastery happens ☕🚀\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACrB;;;AAEA,MAAM,OAAO;IACX;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;CACD;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;;8BAKpC,8OAAC;oBAAI,WAAU;8BACZ,KAAK,GAAG,CAAC,CAAC,KAAK,sBACd,8OAAC;4BAEC,WAAU;;8CAEV,8OAAC;oCAAQ,WAAU;;sDACjB,8OAAC;4CAAG,WAAU;sDACX,IAAI,QAAQ;;;;;;sDAEf,8OAAC;4CAAK,WAAU;sDAAuE;;;;;;;;;;;;8CAIzF,8OAAC;oCAAE,WAAU;8CAA8C,IAAI,MAAM;;;;;;;2BAXhE;;;;;;;;;;8BAgBX,8OAAC;oBAAO,WAAU;8BAA0C;;;;;;;;;;;;;;;;;AAMpE","debugId":null}},
    {"offset": {"line": 995, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Java/downloadPdf.jsx"],"sourcesContent":["import React from 'react';\nimport { Document, Page, Text, View, StyleSheet, PDFDownloadLink, pdf } from '@react-pdf/renderer';\nimport { saveAs } from 'file-saver';\n\n// Define styles for the PDF\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#f8fafc',\n    padding: 30,\n    fontFamily: 'Helvetica',\n  },\n  header: {\n    marginBottom: 30,\n    textAlign: 'center',\n    paddingBottom: 20,\n    borderBottomWidth: 2,\n    borderBottomColor: '#3b82f6',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6b7280',\n    fontWeight: 'normal',\n  },\n  phaseContainer: {\n    marginBottom: 25,\n    backgroundColor: '#ffffff',\n    borderRadius: 8,\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#e5e7eb',\n  },\n  phaseHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  phaseNumber: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: '#3b82f6',\n    color: '#ffffff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    lineHeight: 40,\n    marginRight: 15,\n  },\n  phaseTitleContainer: {\n    flex: 1,\n  },\n  phaseTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 2,\n  },\n  phaseSubtitle: {\n    fontSize: 12,\n    color: '#6b7280',\n    marginBottom: 2,\n  },\n  phaseDescription: {\n    fontSize: 14,\n    color: '#374151',\n    fontWeight: 'normal',\n  },\n  sectionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 15,\n  },\n  section: {\n    flex: '1 1 45%',\n    backgroundColor: '#f8fafc',\n    borderRadius: 6,\n    padding: 15,\n    borderLeftWidth: 4,\n    borderLeftColor: '#3b82f6',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#3b82f6',\n    marginBottom: 10,\n  },\n  itemsList: {\n    gap: 6,\n  },\n  item: {\n    fontSize: 11,\n    color: '#374151',\n    lineHeight: 1.4,\n    paddingLeft: 12,\n    marginBottom: 4,\n  },\n  itemNumber: {\n    fontWeight: 'bold',\n    color: '#1f2937',\n  },\n  phaseConnector: {\n    alignSelf: 'center',\n    marginVertical: 15,\n    paddingVertical: 8,\n    paddingHorizontal: 20,\n    backgroundColor: '#f3f4f6',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n  },\n  connectorText: {\n    fontSize: 12,\n    color: '#6b7280',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  footer: {\n    marginTop: 30,\n    padding: 20,\n    backgroundColor: '#ecfdf5',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#10b981',\n    textAlign: 'center',\n  },\n  footerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#065f46',\n    marginBottom: 8,\n  },\n  footerText: {\n    fontSize: 14,\n    color: '#047857',\n    lineHeight: 1.5,\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 10,\n    bottom: 20,\n    right: 30,\n    color: '#6b7280',\n  },\n  watermark: {\n    position: 'absolute',\n    top: 50,\n    right: 30,\n    fontSize: 8,\n    color: '#d1d5db',\n    opacity: 0.5,\n  }\n});\n\n// PDF Document Component\nconst RoadmapPDFDocument = ({ phases }) => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {/* Header */}\n      <View style={styles.header}>\n        <Text style={styles.title}>Java Developer Roadmap</Text>\n        <Text style={styles.subtitle}>Your Complete Journey from Beginner to Professional</Text>\n      </View>\n\n      {/* Watermark */}\n      <Text style={styles.watermark}>Java-Roadmap.com</Text>\n\n      {/* Phases */}\n      {phases.map((phase, index) => (\n        <View key={phase.id} wrap={false}>\n          <View style={styles.phaseContainer}>\n            {/* Phase Header */}\n            <View style={styles.phaseHeader}>\n              <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                {phase.id}\n              </Text>\n              <View style={styles.phaseTitleContainer}>\n                <Text style={styles.phaseTitle}>{phase.title}</Text>\n                <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                <Text style={styles.phaseDescription}>{phase.description}</Text>\n              </View>\n            </View>\n\n            {/* Sections */}\n            <View style={styles.sectionsContainer}>\n              {phase.sections.map((section, sectionIndex) => (\n                <View key={sectionIndex} style={styles.section}>\n                  <Text style={styles.sectionTitle}>{section.title}</Text>\n                  <View style={styles.itemsList}>\n                    {section.items.map((item, itemIndex) => (\n                      <Text key={itemIndex} style={styles.item}>\n                        <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                      </Text>\n                    ))}\n                  </View>\n                </View>\n              ))}\n            </View>\n          </View>\n\n          {/* Phase Connector */}\n          {index < phases.length - 1 && (\n            <View style={styles.phaseConnector}>\n              <Text style={styles.connectorText}>\n                ↓ Next: Phase {phase.id + 1}\n              </Text>\n            </View>\n          )}\n        </View>\n      ))}\n\n\n\n      {/* Page Number */}\n      <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n        `${pageNumber} / ${totalPages}`\n      )} fixed />\n    </Page>\n  </Document>\n);\n\n// Helper function to convert Tailwind colors to hex\nconst getPhaseColor = (tailwindColor) => {\n  const colorMap = {\n    'bg-blue-500': '#3b82f6',\n    'bg-purple-500': '#8b5cf6',\n    'bg-green-500': '#10b981',\n    'bg-orange-500': '#f59e0b',\n    'bg-red-500': '#ef4444',\n  };\n  return colorMap[tailwindColor] || '#3b82f6';\n};\n\n// Main download function\nexport const downloadRoadmapPDF = async (phases) => {\n  try {\n    // Create the PDF blob\n    const blob = await pdf(<RoadmapPDFDocument phases={phases} />).toBlob();\n\n    // Generate filename with current date\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `Java-Developer-roadmap-${currentDate}.pdf`;\n\n    // Save the file\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating PDF:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// React Component for PDF Download Link (alternative approach)\nexport const PDFDownloadButton = ({ phases, className = \"\", children = \"Download PDF\" }) => (\n  <PDFDownloadLink\n    document={<RoadmapPDFDocument phases={phases} />}\n    fileName={`Java-roadmap-${new Date().toISOString().split('T')[0]}.pdf`}\n    className={className}\n  >\n    {({ blob, url, loading, error }) => {\n      if (loading) return 'Generating PDF...';\n      if (error) return 'Error generating PDF';\n      return children;\n    }}\n  </PDFDownloadLink>\n  );\n\n// Advanced PDF generation with custom options\nexport const downloadAdvancedRoadmapPDF = async (phases, options = {}) => {\n  const {\n    includeWatermark = true,\n    customTitle = \"Javascript Developer Roadmap\",\n    customSubtitle = \"Your Complete Journey from Beginner to Professional\",\n    pageSize = \"A4\",\n    orientation = \"portrait\"\n  } = options;\n\n  try {\n    const AdvancedPDFDocument = () => (\n      <Document>\n        <Page size={pageSize} orientation={orientation} style={styles.page}>\n          {/* Custom Header */}\n          <View style={styles.header}>\n            <Text style={styles.title}>{customTitle}</Text>\n            <Text style={styles.subtitle}>{customSubtitle}</Text>\n          </View>\n\n\n\n          {/* Content remains the same */}\n          {phases.map((phase, index) => (\n            <View key={phase.id} wrap={false}>\n              <View style={styles.phaseContainer}>\n                <View style={styles.phaseHeader}>\n                  <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                    {phase.id}\n                  </Text>\n                  <View style={styles.phaseTitleContainer}>\n                    <Text style={styles.phaseTitle}>{phase.title}</Text>\n                    <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                    <Text style={styles.phaseDescription}>{phase.description}</Text>\n                  </View>\n                </View>\n\n                <View style={styles.sectionsContainer}>\n                  {phase.sections.map((section, sectionIndex) => (\n                    <View key={sectionIndex} style={styles.section}>\n                      <Text style={styles.sectionTitle}>{section.title}</Text>\n                      <View style={styles.itemsList}>\n                        {section.items.map((item, itemIndex) => (\n                          <Text key={itemIndex} style={styles.item}>\n                            <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                          </Text>\n                        ))}\n                      </View>\n                    </View>\n                  ))}\n                </View>\n              </View>\n\n              {index < phases.length - 1 && (\n                <View style={styles.phaseConnector}>\n                  <Text style={styles.connectorText}>\n                    ↓ Next: Phase {phase.id + 1}\n                  </Text>\n                </View>\n              )}\n            </View>\n          ))}\n\n          <View style={styles.footer}>\n            <Text style={styles.footerTitle}>🎉 Congratulations!</Text>\n            <Text style={styles.footerText}>\n              You've completed the Java Developer Roadmap and are now ready to take on professional  challenges.\n            </Text>\n          </View>\n\n          <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n            `${pageNumber} / ${totalPages}`\n          )} fixed />\n        </Page>\n      </Document>\n    );\n\n    const blob = await pdf(<AdvancedPDFDocument />).toBlob();\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `${customTitle.toLowerCase().replace(/\\s+/g, '-')}-${currentDate}.pdf`;\n\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating advanced PDF:', error);\n    return { success: false, error: error.message };\n  }\n};"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;;;;;;AAEA,4BAA4B;AAC5B,MAAM,SAAS,oJAAA,CAAA,aAAU,CAAC,MAAM,CAAC;IAC/B,MAAM;QACJ,eAAe;QACf,iBAAiB;QACjB,SAAS;QACT,YAAY;IACd;IACA,QAAQ;QACN,cAAc;QACd,WAAW;QACX,eAAe;QACf,mBAAmB;QACnB,mBAAmB;IACrB;IACA,OAAO;QACL,UAAU;QACV,YAAY;QACZ,OAAO;QACP,cAAc;IAChB;IACA,UAAU;QACR,UAAU;QACV,OAAO;QACP,YAAY;IACd;IACA,gBAAgB;QACd,cAAc;QACd,iBAAiB;QACjB,cAAc;QACd,SAAS;QACT,aAAa;QACb,aAAa;IACf;IACA,aAAa;QACX,eAAe;QACf,YAAY;QACZ,cAAc;IAChB;IACA,aAAa;QACX,OAAO;QACP,QAAQ;QACR,cAAc;QACd,iBAAiB;QACjB,OAAO;QACP,UAAU;QACV,YAAY;QACZ,WAAW;QACX,YAAY;QACZ,aAAa;IACf;IACA,qBAAqB;QACnB,MAAM;IACR;IACA,YAAY;QACV,UAAU;QACV,YAAY;QACZ,OAAO;QACP,cAAc;IAChB;IACA,eAAe;QACb,UAAU;QACV,OAAO;QACP,cAAc;IAChB;IACA,kBAAkB;QAChB,UAAU;QACV,OAAO;QACP,YAAY;IACd;IACA,mBAAmB;QACjB,eAAe;QACf,UAAU;QACV,KAAK;IACP;IACA,SAAS;QACP,MAAM;QACN,iBAAiB;QACjB,cAAc;QACd,SAAS;QACT,iBAAiB;QACjB,iBAAiB;QACjB,cAAc;IAChB;IACA,cAAc;QACZ,UAAU;QACV,YAAY;QACZ,OAAO;QACP,cAAc;IAChB;IACA,WAAW;QACT,KAAK;IACP;IACA,MAAM;QACJ,UAAU;QACV,OAAO;QACP,YAAY;QACZ,aAAa;QACb,cAAc;IAChB;IACA,YAAY;QACV,YAAY;QACZ,OAAO;IACT;IACA,gBAAgB;QACd,WAAW;QACX,gBAAgB;QAChB,iBAAiB;QACjB,mBAAmB;QACnB,iBAAiB;QACjB,cAAc;QACd,aAAa;QACb,aAAa;IACf;IACA,eAAe;QACb,UAAU;QACV,OAAO;QACP,WAAW;QACX,YAAY;IACd;IACA,QAAQ;QACN,WAAW;QACX,SAAS;QACT,iBAAiB;QACjB,cAAc;QACd,aAAa;QACb,aAAa;QACb,WAAW;IACb;IACA,aAAa;QACX,UAAU;QACV,YAAY;QACZ,OAAO;QACP,cAAc;IAChB;IACA,YAAY;QACV,UAAU;QACV,OAAO;QACP,YAAY;IACd;IACA,YAAY;QACV,UAAU;QACV,UAAU;QACV,QAAQ;QACR,OAAO;QACP,OAAO;IACT;IACA,WAAW;QACT,UAAU;QACV,KAAK;QACL,OAAO;QACP,UAAU;QACV,OAAO;QACP,SAAS;IACX;AACF;AAEA,yBAAyB;AACzB,MAAM,qBAAqB,CAAC,EAAE,MAAM,EAAE,iBACpC,8OAAC,oJAAA,CAAA,WAAQ;kBACP,cAAA,8OAAC,oJAAA,CAAA,OAAI;YAAC,MAAK;YAAK,OAAO,OAAO,IAAI;;8BAEhC,8OAAC,oJAAA,CAAA,OAAI;oBAAC,OAAO,OAAO,MAAM;;sCACxB,8OAAC,oJAAA,CAAA,OAAI;4BAAC,OAAO,OAAO,KAAK;sCAAE;;;;;;sCAC3B,8OAAC,oJAAA,CAAA,OAAI;4BAAC,OAAO,OAAO,QAAQ;sCAAE;;;;;;;;;;;;8BAIhC,8OAAC,oJAAA,CAAA,OAAI;oBAAC,OAAO,OAAO,SAAS;8BAAE;;;;;;gBAG9B,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC,oJAAA,CAAA,OAAI;wBAAgB,MAAM;;0CACzB,8OAAC,oJAAA,CAAA,OAAI;gCAAC,OAAO,OAAO,cAAc;;kDAEhC,8OAAC,oJAAA,CAAA,OAAI;wCAAC,OAAO,OAAO,WAAW;;0DAC7B,8OAAC,oJAAA,CAAA,OAAI;gDAAC,OAAO;oDAAC,OAAO,WAAW;oDAAE;wDAAE,iBAAiB,cAAc,MAAM,KAAK;oDAAE;iDAAE;0DAC/E,MAAM,EAAE;;;;;;0DAEX,8OAAC,oJAAA,CAAA,OAAI;gDAAC,OAAO,OAAO,mBAAmB;;kEACrC,8OAAC,oJAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,UAAU;kEAAG,MAAM,KAAK;;;;;;kEAC5C,8OAAC,oJAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,aAAa;kEAAG,MAAM,QAAQ;;;;;;kEAClD,8OAAC,oJAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,gBAAgB;kEAAG,MAAM,WAAW;;;;;;;;;;;;;;;;;;kDAK5D,8OAAC,oJAAA,CAAA,OAAI;wCAAC,OAAO,OAAO,iBAAiB;kDAClC,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,6BAC5B,8OAAC,oJAAA,CAAA,OAAI;gDAAoB,OAAO,OAAO,OAAO;;kEAC5C,8OAAC,oJAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,YAAY;kEAAG,QAAQ,KAAK;;;;;;kEAChD,8OAAC,oJAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,SAAS;kEAC1B,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,0BACxB,8OAAC,oJAAA,CAAA,OAAI;gEAAiB,OAAO,OAAO,IAAI;;kFACtC,8OAAC,oJAAA,CAAA,OAAI;wEAAC,OAAO,OAAO,UAAU;;4EAAG,YAAY;4EAAE;;;;;;;oEAAQ;oEAAE;;+DADhD;;;;;;;;;;;+CAJN;;;;;;;;;;;;;;;;4BAehB,QAAQ,OAAO,MAAM,GAAG,mBACvB,8OAAC,oJAAA,CAAA,OAAI;gCAAC,OAAO,OAAO,cAAc;0CAChC,cAAA,8OAAC,oJAAA,CAAA,OAAI;oCAAC,OAAO,OAAO,aAAa;;wCAAE;wCAClB,MAAM,EAAE,GAAG;;;;;;;;;;;;;uBAnCvB,MAAM,EAAE;;;;;8BA6CrB,8OAAC,oJAAA,CAAA,OAAI;oBAAC,OAAO,OAAO,UAAU;oBAAE,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,GACjE,GAAG,WAAW,GAAG,EAAE,YAAY;oBAC9B,KAAK;;;;;;;;;;;;;;;;;AAKd,oDAAoD;AACpD,MAAM,gBAAgB,CAAC;IACrB,MAAM,WAAW;QACf,eAAe;QACf,iBAAiB;QACjB,gBAAgB;QAChB,iBAAiB;QACjB,cAAc;IAChB;IACA,OAAO,QAAQ,CAAC,cAAc,IAAI;AACpC;AAGO,MAAM,qBAAqB,OAAO;IACvC,IAAI;QACF,sBAAsB;QACtB,MAAM,OAAO,MAAM,CAAA,GAAA,oJAAA,CAAA,MAAG,AAAD,gBAAE,8OAAC;YAAmB,QAAQ;;;;;kBAAY,MAAM;QAErE,sCAAsC;QACtC,MAAM,cAAc,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QAC1D,MAAM,WAAW,CAAC,uBAAuB,EAAE,YAAY,IAAI,CAAC;QAE5D,gBAAgB;QAChB,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QAEb,OAAO;YAAE,SAAS;YAAM;QAAS;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IAChD;AACF;AAGO,MAAM,oBAAoB,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,WAAW,cAAc,EAAE,iBACrF,8OAAC,oJAAA,CAAA,kBAAe;QACd,wBAAU,8OAAC;YAAmB,QAAQ;;;;;;QACtC,UAAU,CAAC,aAAa,EAAE,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;QACtE,WAAW;kBAEV,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE;YAC7B,IAAI,SAAS,OAAO;YACpB,IAAI,OAAO,OAAO;YAClB,OAAO;QACT;;;;;;AAKG,MAAM,6BAA6B,OAAO,QAAQ,UAAU,CAAC,CAAC;IACnE,MAAM,EACJ,mBAAmB,IAAI,EACvB,cAAc,8BAA8B,EAC5C,iBAAiB,qDAAqD,EACtE,WAAW,IAAI,EACf,cAAc,UAAU,EACzB,GAAG;IAEJ,IAAI;QACF,MAAM,sBAAsB,kBAC1B,8OAAC,oJAAA,CAAA,WAAQ;0BACP,cAAA,8OAAC,oJAAA,CAAA,OAAI;oBAAC,MAAM;oBAAU,aAAa;oBAAa,OAAO,OAAO,IAAI;;sCAEhE,8OAAC,oJAAA,CAAA,OAAI;4BAAC,OAAO,OAAO,MAAM;;8CACxB,8OAAC,oJAAA,CAAA,OAAI;oCAAC,OAAO,OAAO,KAAK;8CAAG;;;;;;8CAC5B,8OAAC,oJAAA,CAAA,OAAI;oCAAC,OAAO,OAAO,QAAQ;8CAAG;;;;;;;;;;;;wBAMhC,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC,oJAAA,CAAA,OAAI;gCAAgB,MAAM;;kDACzB,8OAAC,oJAAA,CAAA,OAAI;wCAAC,OAAO,OAAO,cAAc;;0DAChC,8OAAC,oJAAA,CAAA,OAAI;gDAAC,OAAO,OAAO,WAAW;;kEAC7B,8OAAC,oJAAA,CAAA,OAAI;wDAAC,OAAO;4DAAC,OAAO,WAAW;4DAAE;gEAAE,iBAAiB,cAAc,MAAM,KAAK;4DAAE;yDAAE;kEAC/E,MAAM,EAAE;;;;;;kEAEX,8OAAC,oJAAA,CAAA,OAAI;wDAAC,OAAO,OAAO,mBAAmB;;0EACrC,8OAAC,oJAAA,CAAA,OAAI;gEAAC,OAAO,OAAO,UAAU;0EAAG,MAAM,KAAK;;;;;;0EAC5C,8OAAC,oJAAA,CAAA,OAAI;gEAAC,OAAO,OAAO,aAAa;0EAAG,MAAM,QAAQ;;;;;;0EAClD,8OAAC,oJAAA,CAAA,OAAI;gEAAC,OAAO,OAAO,gBAAgB;0EAAG,MAAM,WAAW;;;;;;;;;;;;;;;;;;0DAI5D,8OAAC,oJAAA,CAAA,OAAI;gDAAC,OAAO,OAAO,iBAAiB;0DAClC,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,6BAC5B,8OAAC,oJAAA,CAAA,OAAI;wDAAoB,OAAO,OAAO,OAAO;;0EAC5C,8OAAC,oJAAA,CAAA,OAAI;gEAAC,OAAO,OAAO,YAAY;0EAAG,QAAQ,KAAK;;;;;;0EAChD,8OAAC,oJAAA,CAAA,OAAI;gEAAC,OAAO,OAAO,SAAS;0EAC1B,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,0BACxB,8OAAC,oJAAA,CAAA,OAAI;wEAAiB,OAAO,OAAO,IAAI;;0FACtC,8OAAC,oJAAA,CAAA,OAAI;gFAAC,OAAO,OAAO,UAAU;;oFAAG,YAAY;oFAAE;;;;;;;4EAAQ;4EAAE;;uEADhD;;;;;;;;;;;uDAJN;;;;;;;;;;;;;;;;oCAchB,QAAQ,OAAO,MAAM,GAAG,mBACvB,8OAAC,oJAAA,CAAA,OAAI;wCAAC,OAAO,OAAO,cAAc;kDAChC,cAAA,8OAAC,oJAAA,CAAA,OAAI;4CAAC,OAAO,OAAO,aAAa;;gDAAE;gDAClB,MAAM,EAAE,GAAG;;;;;;;;;;;;;+BAhCvB,MAAM,EAAE;;;;;sCAuCrB,8OAAC,oJAAA,CAAA,OAAI;4BAAC,OAAO,OAAO,MAAM;;8CACxB,8OAAC,oJAAA,CAAA,OAAI;oCAAC,OAAO,OAAO,WAAW;8CAAE;;;;;;8CACjC,8OAAC,oJAAA,CAAA,OAAI;oCAAC,OAAO,OAAO,UAAU;8CAAE;;;;;;;;;;;;sCAKlC,8OAAC,oJAAA,CAAA,OAAI;4BAAC,OAAO,OAAO,UAAU;4BAAE,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,GACjE,GAAG,WAAW,GAAG,EAAE,YAAY;4BAC9B,KAAK;;;;;;;;;;;;;;;;;QAKd,MAAM,OAAO,MAAM,CAAA,GAAA,oJAAA,CAAA,MAAG,AAAD,gBAAE,8OAAC;;;;kBAAwB,MAAM;QACtD,MAAM,cAAc,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QAC1D,MAAM,WAAW,GAAG,YAAY,WAAW,GAAG,OAAO,CAAC,QAAQ,KAAK,CAAC,EAAE,YAAY,IAAI,CAAC;QAEvF,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QAEb,OAAO;YAAE,SAAS;YAAM;QAAS;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IAChD;AACF","debugId":null}},
    {"offset": {"line": 1679, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Java/page.jsx"],"sourcesContent":["\"use client\"\nimport React, { useState } from 'react';\nimport { ChevronDown, Download, FileText, FolderOpen, Map, Menu, X, Loader2, HelpCircle } from 'lucide-react';\nimport { phases } from './roadmapData';\nimport Docs from './docs';\nimport Projects from './projects';\nimport FAQ from './faq';\nimport { downloadRoadmapPDF } from './downloadPdf';\n\nconst JavaRoadmap = () => {\n  const [activeTab, setActiveTab] = useState('roadmap');\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  // Handle PDF download with loading state\n  const handlePDFDownload = async () => {\n    setIsDownloading(true);\n    try {\n      const result = await downloadRoadmapPDF(phases);\n      if (result.success) {\n        console.log(`PDF downloaded successfully: ${result.filename}`);\n      } else {\n        console.error('PDF download failed:', result.error);\n      }\n    } catch (error) {\n      console.error('PDF download error:', error);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'documentation':\n        return <Docs />;\n      case 'projects':\n        return <Projects />;\n      case 'faq':\n        return <FAQ />;\n      default:\n        return (\n          <div className=\"relative\">\n            {/* Timeline */}\n            <div className=\"flex flex-col space-y-8 md:space-y-12\">\n              {phases.map((phase, index) => (\n                <div key={phase.id} className=\"relative\">\n                  {/* Connection Line */}\n                  {index < phases.length - 1 && (\n                    <div className=\"absolute left-1/2 transform -translate-x-1/2 top-full h-8 md:h-12 w-0.5 md:w-1 bg-gray-300 z-10\"></div>\n                  )}\n\n                  {/* Phase Card */}\n                  <div className=\"flex flex-col items-center\">\n                    {/* Phase Header */}\n                    <div className=\"text-center mb-4 md:mb-6 px-4\">\n                      <div className={`inline-block ${phase.color} text-white px-4 md:px-6 py-2 md:py-3 rounded-lg font-semibold text-base md:text-lg mb-2`}>\n                        Phase {phase.id}: {phase.title}\n                      </div>\n                      <p className=\"text-gray-600 text-xs md:text-sm\">{phase.subtitle}</p>\n                      <p className=\"text-gray-800 font-medium mt-1 text-sm md:text-base\">{phase.description}</p>\n                    </div>\n\n                    {/* Phase Content */}\n                    <div className=\"w-full max-w-5xl px-4\">\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 md:gap-6\">\n                        {phase.sections.map((section, sectionIndex) => (\n                          <div\n                            key={sectionIndex}\n                            className=\"bg-white rounded-lg border-2 border-blue-200 p-4 md:p-6 shadow-sm hover:shadow-md transition-shadow\"\n                          >\n                            <h3 className=\"text-blue-600 font-semibold text-base md:text-lg mb-3 md:mb-4\">\n                              {section.title}\n                            </h3>\n                            <ol className=\"space-y-2\">\n                              {section.items.map((item, itemIndex) => (\n                                <li key={itemIndex} className=\"text-gray-700 text-xs md:text-sm leading-relaxed\">\n                                  <span className=\"font-medium text-gray-900\">{itemIndex + 1}.</span> {item}\n                                </li>\n                              ))}\n                            </ol>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Step Indicators */}\n                    {index < phases.length - 1 && (\n                      <div className=\"mt-6 md:mt-8 flex items-center space-x-2 md:space-x-4\">\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform -rotate-12\">\n                          Phase {phase.id}\n                        </div>\n                        <ChevronDown className=\"text-gray-400\" size={20} />\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform rotate-12\">\n                          Phase {phase.id + 1}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Final Message */}\n            <div className=\"text-center mt-8 md:mt-12 mx-4 p-6 md:p-8 bg-gradient-to-r from-green-50 to-purple-50 rounded-lg border border-green-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                🎉 Congratulations! You're a java Developer\n              </h2>\n              <p className=\"text-gray-700 text-base md:text-lg\">\n                You've mastered the complet java Go Lang Roadmap and are now ready to build scalable, high-performance applications.\n              </p>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 md:px-6 py-4 md:py-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6 md:mb-8\">\n          <div className=\"flex items-center space-x-2 md:space-x-4\">\n            <h1 className=\"text-xl md:text-3xl font-bold text-gray-900\">\n              Java <span className=\"text-blue-600\">Mastery Roadmap 2025</span>\n            </h1>\n          </div>\n\n          {/* Desktop Download Button */}\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"hidden md:flex bg-red-500 hover:bg-red-600 disabled:bg-red-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg items-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n\n          {/* Mobile Menu Button */}\n          <button \n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            className=\"md:hidden bg-blue-500 hover:bg-blue-600 text-white p-2 rounded-lg transition-colors\"\n          >\n            {mobileMenuOpen ? <X size={20} /> : <Menu size={20} />}\n          </button>\n        </div>\n\n        {/* Mobile Download Button */}\n        <div className=\"md:hidden mb-4\">\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"w-full bg-red-500 hover:bg-red-600 disabled:bg-red-400 disabled:cursor-not-allowed text-white px-4 py-3 rounded-lg flex items-center justify-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className={`${mobileMenuOpen ? 'block' : 'hidden'} md:block mb-6 md:mb-8`}>\n          <div className=\"flex flex-col md:flex-row space-y-1 md:space-y-0 md:space-x-1 bg-white p-1 rounded-lg shadow-sm w-full md:w-fit\">\n            <button\n              onClick={() => {\n                setActiveTab('roadmap');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'roadmap'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <Map size={18} className=\"mr-2\" />\n              Roadmap\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('documentation');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'documentation'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FileText size={18} className=\"mr-2\" />\n              Documentation\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('projects');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'projects'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FolderOpen size={18} className=\"mr-2\" />\n              Projects\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('faq');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'faq'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <HelpCircle size={18} className=\"mr-2\" />\n              FAQ\n            </button>\n          </div>\n        </div>\n\n        {/* Content */}\n        {renderContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default JavaRoadmap;"],"names":[],"mappings":"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","debugId":null}}]
}