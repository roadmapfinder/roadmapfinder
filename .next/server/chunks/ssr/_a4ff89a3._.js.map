{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/CareerGuidance/page.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Search, Loader2, Send, BookOpen, Target, Code, Briefcase, TrendingUp, Award, ExternalLink, Clock, DollarSign, Star, Users, Github, Twitter } from 'lucide-react';\n\nexport default function CareerGuidanceApp() {\n  const [prompt, setPrompt] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [aiResponse, setAiResponse] = useState(null);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!prompt.trim()) return;\n\n    setIsLoading(true);\n    setError('');\n    setAiResponse(null);\n\n    try {\n      const response = await fetch('/api/career', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ prompt: prompt.trim() }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to get career guidance');\n      }\n\n      setAiResponse(data.result);\n    } catch (err) {\n      setError(err.message || 'An error occurred while getting career guidance');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const parseAIResponse = (response) => {\n    if (!response) return null;\n\n    // Parse the structured response into sections\n    const sections = {};\n    const lines = response.split('\\n');\n    let currentSection = '';\n    let content = '';\n\n    lines.forEach(line => {\n      if (line.includes('üß© 0. Assumed Context') || line.includes('Assumed Context')) {\n        currentSection = 'context';\n        content = '';\n      } else if (line.includes('üîç Skill Gap') || line.includes('Skill Gap')) {\n        currentSection = 'skillGap';\n        content = '';\n      } else if (line.includes('üìÖ Graph-Structured') || line.includes('Roadmap')) {\n        currentSection = 'roadmap';\n        content = '';\n      } else if (line.includes('üß∞ Technology Stack') || line.includes('Technology Stack')) {\n        currentSection = 'techStack';\n        content = '';\n      } else if (line.includes('üéì One Best') || line.includes('Course')) {\n        currentSection = 'course';\n        content = '';\n      } else if (line.includes('üìö Curated Resources') || line.includes('Resources')) {\n        currentSection = 'resources';\n        content = '';\n      } else if (line.includes('üíº Real Projects') || line.includes('Projects')) {\n        currentSection = 'projects';\n        content = '';\n      } else if (line.includes('üöÄ Career Track') || line.includes('Salary')) {\n        currentSection = 'salary';\n        content = '';\n      } else if (line.includes('üß† Bonus') || line.includes('Mentorship')) {\n        currentSection = 'mentorship';\n        content = '';\n      } else {\n        content += line + '\\n';\n      }\n\n      if (currentSection) {\n        sections[currentSection] = content.trim();\n      }\n    });\n\n    return sections;\n  };\n\n  const parsedResponse = parseAIResponse(aiResponse);\n\n  const extractRoadmapNodes = (roadmapText) => {\n    if (!roadmapText) return [];\n\n    const nodes = [];\n    const lines = roadmapText.split('\\n');\n    let currentNode = null;\n\n    lines.forEach(line => {\n      if (line.includes('Node') && line.includes(':')) {\n        if (currentNode) nodes.push(currentNode);\n        currentNode = {\n          title: line.split(':')[1]?.trim() || 'Learning Phase',\n          topics: [],\n          tools: [],\n          projects: []\n        };\n      } else if (line.includes('What to Learn:')) {\n        if (currentNode) currentNode.topics.push(line.replace('What to Learn:', '').trim());\n      } else if (line.includes('Tools:')) {\n        if (currentNode) currentNode.tools.push(line.replace('Tools:', '').trim());\n      } else if (line.includes('Projects:')) {\n        if (currentNode) currentNode.projects.push(line.replace('Projects:', '').trim());\n      } else if (line.trim() && currentNode && !line.includes('üì¶') && !line.includes('üìö') && !line.includes('üîß') && !line.includes('üí°')) {\n        // Add other content to topics\n        if (line.trim().length > 5) {\n          currentNode.topics.push(line.trim());\n        }\n      }\n    });\n\n    if (currentNode) nodes.push(currentNode);\n    return nodes.length > 0 ? nodes : [\n      { title: 'Foundation', topics: ['Core concepts and basics'], tools: ['Essential tools'], projects: ['Beginner projects'] },\n      { title: 'Intermediate', topics: ['Advanced concepts'], tools: ['Professional tools'], projects: ['Real-world projects'] },\n      { title: 'Advanced', topics: ['Expert level skills'], tools: ['Industry tools'], projects: ['Portfolio projects'] },\n      { title: 'Mastery', topics: ['Leadership and specialization'], tools: ['Cutting-edge tools'], projects: ['Innovation projects'] }\n    ];\n  };\n\n  const getSectionColor = (idx) => {\n    const colors = [\n      'from-blue-500 to-blue-600',\n      'from-purple-500 to-purple-600',\n      'from-orange-500 to-orange-600',\n      'from-green-500 to-green-600'\n    ];\n    return colors[idx % colors.length];\n  };\n\n  const extractSalaryInfo = (salaryText) => {\n    if (!salaryText) return null;\n\n    const inrMatch = salaryText.match(/INR[:\\s]*([0-9,\\-\\s]+)/i);\n    const usdMatch = salaryText.match(/USD[:\\s]*([0-9,\\$\\-\\s]+)/i);\n\n    return {\n      inr: inrMatch ? inrMatch[1].trim() : 'Not specified',\n      usd: usdMatch ? usdMatch[1].trim() : 'Not specified'\n    };\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-50 via-white to-blue-50 font-sans\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"p-2 bg-gradient-to-r from-purple-500 to-blue-500 rounded-lg\">\n                <Target className=\"w-6 h-6 text-white\" />\n              </div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Career Guidance AI</h1>\n            </div>\n            <div className=\"hidden sm:flex items-center space-x-4 text-sm text-gray-600\">\n              <div className=\"flex items-center space-x-1\">\n                <Star className=\"w-4 h-4\" />\n                <span>AI-Powered</span>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <Users className=\"w-4 h-4\" />\n                <span>Personalized</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Search Input */}\n        <div className=\"max-w-4xl mx-auto mb-8\">\n          <div className=\"relative\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n              <input\n                type=\"text\"\n                value={prompt}\n                onChange={(e) => setPrompt(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && handleSubmit(e)}\n                placeholder=\"Describe your current skills and career goals... (e.g., 'I know JavaScript and want to become a full-stack developer')\"\n                className=\"w-full pl-12 pr-16 py-4 text-lg border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent outline-none shadow-sm\"\n                disabled={isLoading}\n              />\n              <button\n                onClick={handleSubmit}\n                disabled={isLoading || !prompt.trim()}\n                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-gradient-to-r from-purple-500 to-blue-500 text-white p-2 rounded-lg hover:from-purple-600 hover:to-blue-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n              >\n                {isLoading ? <Loader2 className=\"w-5 h-5 animate-spin\" /> : <Send className=\"w-5 h-5\" />}\n              </button>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <p className=\"text-red-700\">{error}</p>\n            </div>\n          )}\n        </div>\n\n        {/* AI Response Display */}\n        {parsedResponse && (\n          <div className=\"space-y-8\">\n            {/* Context Section */}\n            {parsedResponse.context && (\n              <div className=\"bg-white rounded-xl p-6 shadow-lg border border-gray-200\">\n                <h2 className=\"text-xl font-bold mb-4 flex items-center space-x-2\">\n                  <Target className=\"w-5 h-5 text-purple-500\" />\n                  <span>Your Profile Analysis</span>\n                </h2>\n                <div className=\"prose prose-sm max-w-none text-gray-700\">\n                  <pre className=\"whitespace-pre-wrap font-sans\">{parsedResponse.context}</pre>\n                </div>\n              </div>\n            )}\n\n            {/* Visual Roadmap */}\n            {parsedResponse.roadmap && (\n              <div className=\"bg-white rounded-xl p-6 shadow-lg border border-gray-200\">\n                <h2 className=\"text-2xl font-bold mb-8 text-center\">\n                  üó∫Ô∏è Your Personalized Learning Roadmap\n                </h2>\n\n                {/* Roadmap Visualization */}\n                <div className=\"space-y-12\">\n                  {extractRoadmapNodes(parsedResponse.roadmap).map((node, idx) => (\n                    <div key={idx} className=\"relative\">\n                      {/* Desktop Layout */}\n                      <div className=\"hidden lg:block\">\n                        <div className=\"flex items-start space-x-8\">\n                          {/* Phase Title */}\n                          <div className=\"flex-shrink-0\">\n                            <div className={`px-6 py-4 rounded-lg text-lg font-semibold min-w-[150px] text-center text-white shadow-md bg-gradient-to-r ${getSectionColor(idx)}`}>\n                              <div className=\"font-bold\">Phase {idx + 1}</div>\n                              <div className=\"text-sm font-normal opacity-90 mt-1\">{node.title}</div>\n                            </div>\n                          </div>\n\n                          {/* Content */}\n                          <div className=\"flex-grow\">\n                            <div className=\"bg-gradient-to-br from-purple-50 to-blue-50 p-6 rounded-lg border border-gray-200\">\n                              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                                {/* Topics */}\n                                <div>\n                                  <h4 className=\"font-semibold text-gray-800 mb-3 flex items-center space-x-2\">\n                                    <BookOpen className=\"w-4 h-4\" />\n                                    <span>Learn</span>\n                                  </h4>\n                                  <ul className=\"space-y-2 text-sm text-gray-700\">\n                                    {node.topics.map((topic, i) => (\n                                      <li key={i} className=\"flex items-start space-x-2\">\n                                        <div className=\"w-1.5 h-1.5 rounded-full bg-purple-500 mt-2 flex-shrink-0\"></div>\n                                        <span>{topic}</span>\n                                      </li>\n                                    ))}\n                                  </ul>\n                                </div>\n\n                                {/* Tools */}\n                                <div>\n                                  <h4 className=\"font-semibold text-gray-800 mb-3 flex items-center space-x-2\">\n                                    <Code className=\"w-4 h-4\" />\n                                    <span>Tools</span>\n                                  </h4>\n                                  <ul className=\"space-y-2 text-sm text-gray-700\">\n                                    {node.tools.map((tool, i) => (\n                                      <li key={i} className=\"flex items-start space-x-2\">\n                                        <div className=\"w-1.5 h-1.5 rounded-full bg-blue-500 mt-2 flex-shrink-0\"></div>\n                                        <span>{tool}</span>\n                                      </li>\n                                    ))}\n                                  </ul>\n                                </div>\n\n                                {/* Projects */}\n                                <div>\n                                  <h4 className=\"font-semibold text-gray-800 mb-3 flex items-center space-x-2\">\n                                    <Briefcase className=\"w-4 h-4\" />\n                                    <span>Projects</span>\n                                  </h4>\n                                  <ul className=\"space-y-2 text-sm text-gray-700\">\n                                    {node.projects.map((project, i) => (\n                                      <li key={i} className=\"flex items-start space-x-2\">\n                                        <div className=\"w-1.5 h-1.5 rounded-full bg-green-500 mt-2 flex-shrink-0\"></div>\n                                        <span>{project}</span>\n                                      </li>\n                                    ))}\n                                  </ul>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          {/* Progress indicator */}\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"w-8 h-8 rounded-full border-2 border-purple-500 bg-white flex items-center justify-center\">\n                              <div className=\"w-3 h-3 rounded-full bg-purple-500\"></div>\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Connection line */}\n                        {idx < extractRoadmapNodes(parsedResponse.roadmap).length - 1 && (\n                          <div className=\"flex justify-center my-6\">\n                            <div className=\"w-px h-12 bg-gradient-to-b from-purple-300 to-blue-300\"></div>\n                          </div>\n                        )}\n                      </div>\n\n                      {/* Mobile Layout */}\n                      <div className=\"lg:hidden\">\n                        <div className={`px-4 py-3 rounded-lg text-white shadow-md bg-gradient-to-r ${getSectionColor(idx)} mb-4`}>\n                          <div className=\"font-bold\">Phase {idx + 1}: {node.title}</div>\n                        </div>\n\n                        <div className=\"bg-gradient-to-br from-purple-50 to-blue-50 p-4 rounded-lg border border-gray-200 ml-4 border-l-2 border-dashed border-purple-300 pl-6\">\n                          <div className=\"space-y-4\">\n                            <div>\n                              <h4 className=\"font-semibold text-gray-800 mb-2 flex items-center space-x-2\">\n                                <BookOpen className=\"w-4 h-4\" />\n                                <span>What to Learn</span>\n                              </h4>\n                              <div className=\"text-sm text-gray-700 space-y-1\">\n                                {node.topics.map((topic, i) => (\n                                  <div key={i}>‚Ä¢ {topic}</div>\n                                ))}\n                              </div>\n                            </div>\n\n                            <div>\n                              <h4 className=\"font-semibold text-gray-800 mb-2 flex items-center space-x-2\">\n                                <Code className=\"w-4 h-4\" />\n                                <span>Tools & Technologies</span>\n                              </h4>\n                              <div className=\"text-sm text-gray-700 space-y-1\">\n                                {node.tools.map((tool, i) => (\n                                  <div key={i}>‚Ä¢ {tool}</div>\n                                ))}\n                              </div>\n                            </div>\n\n                            <div>\n                              <h4 className=\"font-semibold text-gray-800 mb-2 flex items-center space-x-2\">\n                                <Briefcase className=\"w-4 h-4\" />\n                                <span>Practice Projects</span>\n                              </h4>\n                              <div className=\"text-sm text-gray-700 space-y-1\">\n                                {node.projects.map((project, i) => (\n                                  <div key={i}>‚Ä¢ {project}</div>\n                                ))}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Salary Information */}\n            {parsedResponse.salary && (\n              <div className=\"bg-gradient-to-r from-green-500 to-blue-500 rounded-xl p-6 text-white shadow-lg\">\n                <h2 className=\"text-xl font-bold mb-4 flex items-center space-x-2\">\n                  <DollarSign className=\"w-5 h-5\" />\n                  <span>Career & Salary Insights</span>\n                </h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"bg-white/10 rounded-lg p-4 backdrop-blur-sm\">\n                    <h3 className=\"font-semibold mb-2\">Salary Expectations</h3>\n                    {(() => {\n                      const salaryInfo = extractSalaryInfo(parsedResponse.salary);\n                      return (\n                        <div className=\"space-y-1 text-sm text-white/90\">\n                          <div>INR: {salaryInfo?.inr || 'Market competitive'}</div>\n                          <div>USD: {salaryInfo?.usd || 'Based on location'}</div>\n                        </div>\n                      );\n                    })()}\n                  </div>\n                  <div className=\"bg-white/10 rounded-lg p-4 backdrop-blur-sm\">\n                    <h3 className=\"font-semibold mb-2\">Career Path</h3>\n                    <div className=\"text-sm text-white/90\">\n                      <pre className=\"whitespace-pre-wrap font-sans\">{parsedResponse.salary.substring(0, 200)}...</pre>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Course Recommendation */}\n            {parsedResponse.course && (\n              <div className=\"bg-white rounded-xl p-6 shadow-lg border border-gray-200\">\n                <h2 className=\"text-xl font-bold mb-4 flex items-center space-x-2\">\n                  <Award className=\"w-5 h-5 text-yellow-500\" />\n                  <span>Recommended Course</span>\n                </h2>\n                <div className=\"bg-gradient-to-br from-yellow-50 to-orange-50 p-6 rounded-lg\">\n                  <div className=\"prose prose-sm max-w-none text-gray-700\">\n                    <pre className=\"whitespace-pre-wrap font-sans\">{parsedResponse.course}</pre>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Additional Resources */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {parsedResponse.resources && (\n                <div className=\"bg-white rounded-xl p-6 shadow-lg border border-gray-200\">\n                  <h2 className=\"text-lg font-bold mb-4 flex items-center space-x-2\">\n                    <BookOpen className=\"w-5 h-5 text-blue-500\" />\n                    <span>Learning Resources</span>\n                  </h2>\n                  <div className=\"prose prose-sm max-w-none text-gray-700\">\n                    <pre className=\"whitespace-pre-wrap font-sans text-sm\">{parsedResponse.resources}</pre>\n                  </div>\n                </div>\n              )}\n\n              {parsedResponse.projects && (\n                <div className=\"bg-white rounded-xl p-6 shadow-lg border border-gray-200\">\n                  <h2 className=\"text-lg font-bold mb-4 flex items-center space-x-2\">\n                    <Code className=\"w-5 h-5 text-purple-500\" />\n                    <span>Project Ideas</span>\n                  </h2>\n                  <div className=\"prose prose-sm max-w-none text-gray-700\">\n                    <pre className=\"whitespace-pre-wrap font-sans text-sm\">{parsedResponse.projects}</pre>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Mentorship Tips */}\n            {parsedResponse.mentorship && (\n              <div className=\"bg-gradient-to-r from-purple-600 to-pink-600 rounded-xl p-6 text-white shadow-lg\">\n                <h2 className=\"text-xl font-bold mb-4 flex items-center space-x-2\">\n                  <Users className=\"w-5 h-5\" />\n                  <span>Pro Tips & Mentorship</span>\n                </h2>\n                <div className=\"bg-white/10 rounded-lg p-4 backdrop-blur-sm\">\n                  <div className=\"prose prose-sm max-w-none text-white/90\">\n                    <pre className=\"whitespace-pre-wrap font-sans\">{parsedResponse.mentorship}</pre>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Example Prompts */}\n        {!aiResponse && !isLoading && (\n          <div className=\"max-w-4xl mx-auto mt-12\">\n            <h2 className=\"text-xl font-bold text-center mb-6 text-gray-800\">\n              üí° Try These Example Prompts\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {[\n                \"I know Python and want to become a Data Scientist\",\n                \"Complete beginner wanting to learn web development\",\n                \"Java developer looking to switch to DevOps\",\n                \"Frontend developer wanting to learn backend\"\n              ].map((example, idx) => (\n                <button\n                  key={idx}\n                  onClick={() => setPrompt(example)}\n                  className=\"p-4 text-left bg-gradient-to-br from-purple-50 to-blue-50 rounded-lg border border-gray-200 hover:shadow-md transition-all duration-200 hover:scale-[1.02]\"\n                >\n                  <div className=\"text-sm text-gray-700\">\"{example}\"</div>\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Loading Animation */}\n        {isLoading && (\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"bg-white rounded-xl p-8 shadow-lg border border-gray-200\">\n              <div className=\"text-center\">\n                <Loader2 className=\"w-8 h-8 animate-spin text-purple-500 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n                  üß† AI is analyzing your career goals...\n                </h3>\n                <p className=\"text-gray-600\">\n                  Creating your personalized roadmap with market insights\n                </p>\n                <div className=\"mt-6 space-y-2\">\n                  {[\n                    \"Analyzing your current skill set...\",\n                    \"Researching market trends...\",\n                    \"Creating personalized roadmap...\",\n                    \"Finding best resources...\"\n                  ].map((step, idx) => (\n                    <div key={idx} className=\"text-sm text-gray-500 opacity-60\">\n                      {step}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}