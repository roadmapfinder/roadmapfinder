{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Data/docs.jsx"],"sourcesContent":["// components/Docs.jsx\nimport React from \"react\";\nimport { ExternalLink } from \"lucide-react\";\n\nconst docsList = [\n  {\n    title: \"Apache Spark Documentation\",\n    description:\n      \"Official docs for Spark 3.x — DataFrame API, Spark SQL, PySpark, advanced configuration, and performance tuning.\",\n    url: \"https://spark.apache.org/docs/latest/\",\n    citation: \"Apache Spark Docs\",\n  },\n  {\n    title: \"Apache Kafka Documentation\",\n    description:\n      \"Producer/consumer API reference, Streams API, Connectors ecosystem, exactly-once semantics, and best practices.\",\n    url: \"https://kafka.apache.org/documentation/\",\n    citation: \"Apache Kafka Docs\",\n  },\n  {\n    title: \"Apache Flink Documentation\",\n    description:\n      \"Stream & batch processing — DataStream, Table/SQL APIs, state management, windowing, and deployment guides.\",\n    url: \"https://nightlies.apache.org/flink/flink-docs-stable/\",\n    citation: \"Apache Flink Docs\",\n  },\n  {\n    title: \"Apache Airflow Documentation\",\n    description:\n      \"Orchestration platform — DAG authoring, operators, sensors, scheduling, and production deployment best practices.\",\n    url: \"https://airflow.apache.org/docs/\",\n    citation: \"Apache Airflow Docs\",\n  },\n  {\n    title: \"Dagster Documentation\",\n    description:\n      \"Modern data orchestration alternative — asset-based workflows, testing, observability, and cloud-native execution.\",\n    url: \"https://docs.dagster.io/\",\n    citation: \"Dagster Docs\",\n  },\n  {\n    title: \"dbt (Data Build Tool)\",\n    description:\n      \"Analytics engineering platform — SQL transformations, testing, macros, docs, and deployment for DWs like Snowflake & BigQuery.\",\n    url: \"https://docs.getdbt.com/\",\n    citation: \"dbt Labs Docs\",\n  },\n  {\n    title: \"Delta Lake Documentation\",\n    description:\n      \"Databricks’ open table format for lakehouses — ACID transactions, schema evolution, and time travel queries.\",\n    url: \"https://docs.delta.io/\",\n    citation: \"Delta Lake Docs\",\n  },\n  {\n    title: \"Apache Iceberg Documentation\",\n    description:\n      \"Open table format with snapshots, partitioning, time-travel, and engine-agnostic support for lakehouse architectures.\",\n    url: \"https://iceberg.apache.org/docs/latest/\",\n    citation: \"Apache Iceberg Docs\",\n  },\n  {\n    title: \"Apache Hudi Documentation\",\n    description:\n      \"Lakehouse storage engine for streaming data ingestion, incremental processing, and ACID transactions.\",\n    url: \"https://hudi.apache.org/docs/overview/\",\n    citation: \"Apache Hudi Docs\",\n  },\n  {\n    title: \"Snowflake Documentation\",\n    description:\n      \"Data Cloud docs — Snowpark APIs, data loading, security, performance optimization, and data engineering patterns.\",\n    url: \"https://docs.snowflake.com/\",\n    citation: \"Snowflake Docs\",\n  },\n  {\n    title: \"Google BigQuery Documentation\",\n    description:\n      \"Serverless cloud data warehouse — ingestion, partitioning, clustering, cost optimization, and SQL analytics.\",\n    url: \"https://cloud.google.com/bigquery/docs\",\n    citation: \"Google BigQuery Docs\",\n  },\n  {\n    title: \"Databricks Documentation\",\n    description:\n      \"Lakehouse platform docs — Delta Lake, batch & streaming pipelines, ML integration, and production deployment.\",\n    url: \"https://docs.databricks.com/\",\n    citation: \"Databricks Docs\",\n  },\n  {\n    title: \"Great Expectations Documentation\",\n    description:\n      \"Data quality and validation framework — expectations, test suites, data docs, and CI/CD integration.\",\n    url: \"https://docs.greatexpectations.io/\",\n    citation: \"Great Expectations Docs\",\n  },\n  {\n    title: \"OpenLineage Documentation\",\n    description:\n      \"Open metadata & lineage standard — integrations with Airflow, dbt, and other orchestration tools.\",\n    url: \"https://openlineage.io/docs/\",\n    citation: \"OpenLineage Docs\",\n  },\n  {\n    title: \"Refonte Learning Blog\",\n    description:\n      \"Curated 2025 overview of essential DE tools like Spark, Kafka, Airflow, Snowflake, and dbt with learning paths.\",\n    url: \"https://www.refontelearning.com/blog/top-data-engineering-tools-you-need-to-learn-in-2025-kafka-spark-airflow-and-more\",\n    citation: \"Refonte Learning\",\n  },\n  {\n    title: \"Rakuten SixthSense Blog\",\n    description:\n      \"Top Data Engineering concepts and architectures — Spark, Kafka, Airflow, dbt, Snowflake, and Iceberg.\",\n    url: \"https://sixthsense.rakuten.com/blog/Top-Data-Engineering-Concepts-and-Architectures-You-Need-to-Know\",\n    citation: \"Rakuten SixthSense\",\n  },\n];\n\nexport default function Docs() {\n  return (\n    <section className=\"px-6 py-12 bg-gray-50 min-h-screen\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">\n          📘 Data Engineering Documentation Resources\n        </h1>\n        <p className=\"text-gray-600 mb-10\">\n          Official and popular documentation sites every Data Engineer must\n          know — covering ETL frameworks, streaming, orchestration, lakehouse\n          formats, data quality, and cloud platforms.\n        </p>\n\n        {/* Cards Grid */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {docsList.map((doc) => (\n            <a\n              key={doc.title}\n              href={doc.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"group bg-white border border-gray-200 rounded-2xl p-6 shadow-sm hover:shadow-lg transition transform hover:-translate-y-1\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900 group-hover:text-blue-600\">\n                  {doc.title}\n                </h3>\n                <ExternalLink\n                  size={18}\n                  className=\"text-gray-400 group-hover:text-blue-600\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n\n              <p className=\"mt-3 text-sm text-gray-600\">{doc.description}</p>\n\n              <p className=\"mt-4 text-xs text-indigo-600 font-medium\">\n                {doc.citation}\n              </p>\n            </a>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;AACA;;;;AAEA,MAAM,WAAW;IACf;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;CACD;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAG,WAAU;8BAAwC;;;;;;8BAGtD,8OAAC;oBAAE,WAAU;8BAAsB;;;;;;8BAOnC,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,oBACb,8OAAC;4BAEC,MAAM,IAAI,GAAG;4BACb,QAAO;4BACP,KAAI;4BACJ,WAAU;;8CAEV,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDACX,IAAI,KAAK;;;;;;sDAEZ,8OAAC,sNAAA,CAAA,eAAY;4CACX,MAAM;4CACN,WAAU;4CACV,eAAY;;;;;;;;;;;;8CAIhB,8OAAC;oCAAE,WAAU;8CAA8B,IAAI,WAAW;;;;;;8CAE1D,8OAAC;oCAAE,WAAU;8CACV,IAAI,QAAQ;;;;;;;2BApBV,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;AA4B5B","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Data/projects.jsx"],"sourcesContent":["// components/Projects.jsx\nimport React from \"react\";\n\nconst projects = [\n  {\n    id: \"phase1-csv-etl\",\n    level: \"Beginner\",\n    title: \"CSV → Database ETL Pipeline\",\n    description:\n      \"Learn to transform CSV data before loading it into a database using Python, Pandas, and automate ETL with Airflow/Dagster.\",\n    url: \"https://www.youtube.com/watch?v=y20tLpSBZS4\" // ETL Tutorial: Advanced CSV to Database Mapping\n  },\n  {\n    id: \"phase1-web-scraping\",\n    level: \"Beginner\",\n    title: \"Web Scraping Data Pipeline\",\n    description:\n      \"Scrape data from a public website and load it into PostgreSQL. Learn data cleaning, batch ingestion, and cloud storage integration.\",\n    url: \"https://www.youtube.com/watch?v=6lRynB8i94Y\" // Build your first web scraping ETL Pipeline using Python\n  },\n  {\n    id: \"phase1-log-processing\",\n    level: \"Beginner\",\n    title: \"Log Processing Pipeline\",\n    description:\n      \"Parse application logs (JSON/CSV), transform into structured format, and load into Elasticsearch or a data warehouse.\",\n    url: \"https://www.youtube.com/watch?v=9ILNzR95AzU\" // Step by step guide to Pipeline Logging\n  },\n  {\n    id: \"phase2-twitter-kafka\",\n    level: \"Intermediate\",\n    title: \"Real-Time Twitter/Kafka Stream\",\n    description:\n      \"Stream tweets using Twitter API and Apache Kafka, process with Spark Structured Streaming or Flink, and store results in Cassandra/Elastic/BigQuery.\",\n    url: \"https://www.youtube.com/watch?v=DROI7I2sbj8\" // Real-Time Twitter Streaming with Apache Kafka & Python\n  },\n  {\n    id: \"phase2-iot-pipeline\",\n    level: \"Intermediate\",\n    title: \"IoT Sensor Data Pipeline\",\n    description:\n      \"Simulate IoT sensor readings, stream data to Kafka, process with Spark/Flink, and visualize metrics using Grafana.\",\n    url: \"https://www.youtube.com/watch?v=KLSfXCYLDMQ\" // This AWS IoT Data Pipeline Runs Completely Serverless!\n  },\n  {\n    id: \"phase2-data-warehouse-dbt\",\n    level: \"Intermediate\",\n    title: \"Data Warehouse + dbt Project\",\n    description:\n      \"Ingest an e-commerce dataset, build star schema in Snowflake/BigQuery, transform with dbt, and create reports in Looker/Metabase.\",\n    url: \"https://www.youtube.com/watch?v=C6BNAfaeqXY\" // dbt(Data Build Tool) crash course for beginners\n  },\n  {\n    id: \"phase3-lakehouse\",\n    level: \"Advanced\",\n    title: \"Batch + Streaming Lakehouse with Delta/Iceberg/Hudi\",\n    description:\n      \"Build hybrid pipelines with batch ingestion from CSVs and real-time Kafka streams, storing data in Delta Lake or Apache Iceberg and querying with Spark SQL + Presto/Trino.\",\n    url: \"https://www.youtube.com/watch?v=iL4tub9GIu0\" // DATABRICKS - DELTA LIVE TABLES - Medallion - Streaming\n  },\n  {\n    id: \"phase3-netflix-analytics\",\n    level: \"Advanced\",\n    title: \"End-to-End Data Platform (Mini Netflix Analytics)\",\n    description:\n      \"Collect user streaming events, process via Kafka → Spark/Flink → Delta Lake, transform with dbt, orchestrate with Airflow, and create dashboards for analytics.\",\n    url: \"https://www.youtube.com/watch?v=tjIWRqqMDaw\" // Full Data Science Project: Netflix Data Analysis\n  },\n  {\n    id: \"phase3-data-quality-lineage\",\n    level: \"Advanced\",\n    title: \"Data Quality + Lineage System\",\n    description:\n      \"Validate incoming data with Great Expectations, integrate OpenLineage for metadata tracking, store validation results in a warehouse, and monitor data quality KPIs.\",\n    url: \"https://www.youtube.com/watch?v=YhvCS_UXkiI\" // Building Scraping Pipelines With Apache Airflow\n  },\n  {\n    id: \"phase3-cloud-data-pipeline\",\n    level: \"Advanced\",\n    title: \"Modern Cloud Data Engineering Project\",\n    description:\n      \"Build a cloud-native data pipeline: Kafka → dbt + BigQuery/Snowflake → Airflow/Dagster Cloud, with monitoring via DataDog and OpenLineage.\",\n    url: \"https://www.youtube.com/watch?v=OLXkGB7krGo\" // Code along - build an ELT Pipeline in 1 Hour (dbt, Snowflake, Airflow)\n  },\n  {\n    id: \"phase4-capstone-youtube\",\n    level: \"Capstone\",\n    title: \"YouTube Trending Analytics Platform\",\n    description:\n      \"Scrape YouTube trending video data daily, store raw data in S3, process with Spark, transform with dbt, schedule with Airflow, and expose metrics via Grafana dashboard.\",\n    url: \"https://www.youtube.com/watch?v=l74gAP-qDms\" // End to End Web Scraping and ML Data Pipeline Project Using Python\n  }\n];\n\nexport default function Projects() {\n  return (\n    <section className=\"bg-gray-50 py-12 min-h-screen\">\n      <div className=\"max-w-6xl mx-auto px-6\">\n        <header className=\"mb-8 text-center\">\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">\n            🛠 Data Engineering Project Roadmap\n          </h2>\n          <p className=\"mt-2 text-gray-600\">\n            Step through beginner to advanced Data Engineering projects, with English & Hindi tutorials.\n          </p>\n        </header>\n\n        <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n          {projects.map((p) => (\n            <article\n              key={p.id}\n              className=\"group bg-white border border-gray-200 rounded-2xl p-6 shadow-sm hover:shadow-lg hover:-translate-y-1 transition-transform\"\n              aria-labelledby={`${p.id}-title`}\n            >\n              <span className=\"inline-block text-xs font-medium bg-indigo-100 text-indigo-800 px-2 py-1 rounded-full\">\n                {p.level}\n              </span>\n              <h3\n                id={`${p.id}-title`}\n                className=\"mt-4 text-lg font-semibold text-gray-900 group-hover:text-indigo-600\"\n              >\n                {p.title}\n              </h3>\n              <p className=\"mt-2 text-gray-600 text-sm\">{p.description}</p>\n              <a\n                href={p.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mt-4 inline-block text-indigo-600 font-medium hover:underline\"\n              >\n                Watch Tutorial ▶\n              </a>\n            </article>\n          ))}\n        </div>\n\n        <footer className=\"mt-10 text-sm text-gray-500 text-center\">\n          Follow the sequence, code along, customize, and deploy projects. \n          Document them well and polish top 2–3 into portfolio-ready case studies.\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;;;AAEA,MAAM,WAAW;IACf;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,iDAAiD;IACtG;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,0DAA0D;IAC/G;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,yCAAyC;IAC9F;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,yDAAyD;IAC9G;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,yDAAyD;IAC9G;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,kDAAkD;IACvG;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,yDAAyD;IAC9G;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,mDAAmD;IACxG;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,kDAAkD;IACvG;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,yEAAyE;IAC9H;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK,8CAA8C,oEAAoE;IACzH;CACD;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCAGtD,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;;8BAKpC,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,kBACb,8OAAC;4BAEC,WAAU;4BACV,mBAAiB,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;;8CAEhC,8OAAC;oCAAK,WAAU;8CACb,EAAE,KAAK;;;;;;8CAEV,8OAAC;oCACC,IAAI,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;oCACnB,WAAU;8CAET,EAAE,KAAK;;;;;;8CAEV,8OAAC;oCAAE,WAAU;8CAA8B,EAAE,WAAW;;;;;;8CACxD,8OAAC;oCACC,MAAM,EAAE,GAAG;oCACX,QAAO;oCACP,KAAI;oCACJ,WAAU;8CACX;;;;;;;2BAnBI,EAAE,EAAE;;;;;;;;;;8BA0Bf,8OAAC;oBAAO,WAAU;8BAA0C;;;;;;;;;;;;;;;;;AAOpE","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Data/downloadPdf.jsx"],"sourcesContent":["import React from 'react';\nimport { Document, Page, Text, View, StyleSheet, PDFDownloadLink, pdf } from '@react-pdf/renderer';\nimport { saveAs } from 'file-saver';\n\n// Define styles for the PDF\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#f8fafc',\n    padding: 30,\n    fontFamily: 'Helvetica',\n  },\n  header: {\n    marginBottom: 30,\n    textAlign: 'center',\n    paddingBottom: 20,\n    borderBottomWidth: 2,\n    borderBottomColor: '#3b82f6',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6b7280',\n    fontWeight: 'normal',\n  },\n  phaseContainer: {\n    marginBottom: 25,\n    backgroundColor: '#ffffff',\n    borderRadius: 8,\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#e5e7eb',\n  },\n  phaseHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  phaseNumber: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: '#3b82f6',\n    color: '#ffffff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    lineHeight: 40,\n    marginRight: 15,\n  },\n  phaseTitleContainer: {\n    flex: 1,\n  },\n  phaseTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 2,\n  },\n  phaseSubtitle: {\n    fontSize: 12,\n    color: '#6b7280',\n    marginBottom: 2,\n  },\n  phaseDescription: {\n    fontSize: 14,\n    color: '#374151',\n    fontWeight: 'normal',\n  },\n  sectionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 15,\n  },\n  section: {\n    flex: '1 1 45%',\n    backgroundColor: '#f8fafc',\n    borderRadius: 6,\n    padding: 15,\n    borderLeftWidth: 4,\n    borderLeftColor: '#3b82f6',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#3b82f6',\n    marginBottom: 10,\n  },\n  itemsList: {\n    gap: 6,\n  },\n  item: {\n    fontSize: 11,\n    color: '#374151',\n    lineHeight: 1.4,\n    paddingLeft: 12,\n    marginBottom: 4,\n  },\n  itemNumber: {\n    fontWeight: 'bold',\n    color: '#1f2937',\n  },\n  phaseConnector: {\n    alignSelf: 'center',\n    marginVertical: 15,\n    paddingVertical: 8,\n    paddingHorizontal: 20,\n    backgroundColor: '#f3f4f6',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n  },\n  connectorText: {\n    fontSize: 12,\n    color: '#6b7280',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  footer: {\n    marginTop: 30,\n    padding: 20,\n    backgroundColor: '#ecfdf5',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#10b981',\n    textAlign: 'center',\n  },\n  footerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#065f46',\n    marginBottom: 8,\n  },\n  footerText: {\n    fontSize: 14,\n    color: '#047857',\n    lineHeight: 1.5,\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 10,\n    bottom: 20,\n    right: 30,\n    color: '#6b7280',\n  },\n  watermark: {\n    position: 'absolute',\n    top: 50,\n    right: 30,\n    fontSize: 8,\n    color: '#d1d5db',\n    opacity: 0.5,\n  }\n});\n\n// PDF Document Component\nconst RoadmapPDFDocument = ({ phases }) => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {/* Header */}\n      <View style={styles.header}>\n        <Text style={styles.title}>Data Engineer Roadmap</Text>\n        <Text style={styles.subtitle}>Your Complete Journey from Beginner to Professional</Text>\n      </View>\n\n      {/* Watermark */}\n      <Text style={styles.watermark}>DATA-EngineerRoadmap.com</Text>\n\n      {/* Phases */}\n      {phases.map((phase, index) => (\n        <View key={phase.id} wrap={false}>\n          <View style={styles.phaseContainer}>\n            {/* Phase Header */}\n            <View style={styles.phaseHeader}>\n              <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                {phase.id}\n              </Text>\n              <View style={styles.phaseTitleContainer}>\n                <Text style={styles.phaseTitle}>{phase.title}</Text>\n                <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                <Text style={styles.phaseDescription}>{phase.description}</Text>\n              </View>\n            </View>\n\n            {/* Sections */}\n            <View style={styles.sectionsContainer}>\n              {phase.sections.map((section, sectionIndex) => (\n                <View key={sectionIndex} style={styles.section}>\n                  <Text style={styles.sectionTitle}>{section.title}</Text>\n                  <View style={styles.itemsList}>\n                    {section.items.map((item, itemIndex) => (\n                      <Text key={itemIndex} style={styles.item}>\n                        <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                      </Text>\n                    ))}\n                  </View>\n                </View>\n              ))}\n            </View>\n          </View>\n\n          {/* Phase Connector */}\n          {index < phases.length - 1 && (\n            <View style={styles.phaseConnector}>\n              <Text style={styles.connectorText}>\n                ↓ Next: Phase {phase.id + 1}\n              </Text>\n            </View>\n          )}\n        </View>\n      ))}\n\n      \n\n      {/* Page Number */}\n      <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n        `${pageNumber} / ${totalPages}`\n      )} fixed />\n    </Page>\n  </Document>\n);\n\n// Helper function to convert Tailwind colors to hex\nconst getPhaseColor = (tailwindColor) => {\n  const colorMap = {\n    'bg-blue-500': '#3b82f6',\n    'bg-purple-500': '#8b5cf6',\n    'bg-green-500': '#10b981',\n    'bg-orange-500': '#f59e0b',\n    'bg-red-500': '#ef4444',\n  };\n  return colorMap[tailwindColor] || '#3b82f6';\n};\n\n// Main download function\nexport const downloadRoadmapPDF = async (phases) => {\n  try {\n    // Create the PDF blob\n    const blob = await pdf(<RoadmapPDFDocument phases={phases} />).toBlob();\n\n    // Generate filename with current date\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `DATA-Engineer-roadmap-${currentDate}.pdf`;\n\n    // Save the file\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating PDF:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// React Component for PDF Download Link (alternative approach)\nexport const PDFDownloadButton = ({ phases, className = \"\", children = \"Download PDF\" }) => (\n  <PDFDownloadLink\n    document={<RoadmapPDFDocument phases={phases} />}\n    fileName={`Data-Engineer-roadmap-${new Date().toISOString().split('T')[0]}.pdf`}\n    className={className}\n  >\n    {({ blob, url, loading, error }) => {\n      if (loading) return 'Generating PDF...';\n      if (error) return 'Error generating PDF';\n      return children;\n    }}\n  </PDFDownloadLink>\n  );\n\n// Advanced PDF generation with custom options\nexport const downloadAdvancedRoadmapPDF = async (phases, options = {}) => {\n  const {\n    includeWatermark = true,\n    customTitle = \"Data Engineer Roadmap\",\n    customSubtitle = \"Your Complete Journey from Beginner to Professional\",\n    pageSize = \"A4\",\n    orientation = \"portrait\"\n  } = options;\n\n  try {\n    const AdvancedPDFDocument = () => (\n      <Document>\n        <Page size={pageSize} orientation={orientation} style={styles.page}>\n          {/* Custom Header */}\n          <View style={styles.header}>\n            <Text style={styles.title}>{customTitle}</Text>\n            <Text style={styles.subtitle}>{customSubtitle}</Text>\n          </View>\n\n       \n          {/* Content remains the same */}\n          {phases.map((phase, index) => (\n            <View key={phase.id} wrap={false}>\n              <View style={styles.phaseContainer}>\n                <View style={styles.phaseHeader}>\n                  <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                    {phase.id}\n                  </Text>\n                  <View style={styles.phaseTitleContainer}>\n                    <Text style={styles.phaseTitle}>{phase.title}</Text>\n                    <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                    <Text style={styles.phaseDescription}>{phase.description}</Text>\n                  </View>\n                </View>\n\n                <View style={styles.sectionsContainer}>\n                  {phase.sections.map((section, sectionIndex) => (\n                    <View key={sectionIndex} style={styles.section}>\n                      <Text style={styles.sectionTitle}>{section.title}</Text>\n                      <View style={styles.itemsList}>\n                        {section.items.map((item, itemIndex) => (\n                          <Text key={itemIndex} style={styles.item}>\n                            <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                          </Text>\n                        ))}\n                      </View>\n                    </View>\n                  ))}\n                </View>\n              </View>\n\n              {index < phases.length - 1 && (\n                <View style={styles.phaseConnector}>\n                  <Text style={styles.connectorText}>\n                    ↓ Next: Phase {phase.id + 1}\n                  </Text>\n                </View>\n              )}\n            </View>\n          ))}\n\n          <View style={styles.footer}>\n            <Text style={styles.footerTitle}>🎉 Congratulations!</Text>\n            <Text style={styles.footerText}>\n              You've completed the Data Engineer Roadmap and are now ready to take on professional  challenges.\n            </Text>\n          </View>\n\n          <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n            `${pageNumber} / ${totalPages}`\n          )} fixed />\n        </Page>\n      </Document>\n    );\n\n    const blob = await pdf(<AdvancedPDFDocument />).toBlob();\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `${customTitle.toLowerCase().replace(/\\s+/g, '-')}-${currentDate}.pdf`;\n\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating advanced PDF:', error);\n    return { success: false, error: error.message };\n  }\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1107, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Data/page.jsx"],"sourcesContent":["\"use client\"\nimport React, { useState } from 'react';\nimport { ChevronDown, Download, FileText, FolderOpen, Database, Menu, X, Loader2 } from 'lucide-react';\nimport Docs from './docs';\nimport Projects from './projects';\nimport { downloadRoadmapPDF, PDFDownloadButton } from './downloadPdf';\n\nconst DataEngineeringRoadmap = () => {\n  const [activeTab, setActiveTab] = useState('roadmap');\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  const phases = [\n    {\n      id: 0,\n      title: \"Essentials\",\n      subtitle: \"Foundation Stage (0–6 weeks)\",\n      description: \"Remove friction so you can focus on data tools\",\n      color: \"bg-gray-600\",\n      sections: [\n        {\n          title: \"Python Fundamentals\",\n          items: [\n            \"Python basics → Variables, data types, control structures, functions\",\n            \"Idiomatic code → List comprehensions, generators, decorators\",\n            \"Environment management → virtualenv, poetry, pip package management\",\n            \"Practice project → Write scripts to parse CSV/JSON and produce summaries\",\n            \"Libraries → pandas, numpy for data manipulation\"\n          ]\n        },\n        {\n          title: \"SQL Mastery\",\n          items: [\n            \"Core queries → SELECT, WHERE, GROUP BY, ORDER BY\",\n            \"Advanced joins → INNER, LEFT, RIGHT, FULL OUTER joins\",\n            \"Window functions → ROW_NUMBER(), RANK(), LAG(), LEAD()\",\n            \"CTEs → Common Table Expressions for complex queries\",\n            \"Aggregation → SUM, COUNT, AVG, advanced grouping\",\n            \"Indexes → Understanding performance optimization\",\n            \"Practice → Solve 100 SQL problems (LeetCode/Mode Analytics/Strata)\"\n          ]\n        },\n        {\n          title: \"Linux & Development Tools\",\n          items: [\n            \"Linux navigation → cd, ls, find, grep command mastery\",\n            \"Text processing → awk, sed for data manipulation\",\n            \"Automation → cron jobs, shell scripting\",\n            \"Remote access → SSH, secure file transfer\",\n            \"Git + GitHub → branching, pull requests, CI basics\",\n            \"Practice project → Schedule a daily ETL script\"\n          ]\n        },\n        {\n          title: \"Data Mathematics\",\n          items: [\n            \"Probability basics → Distributions, sampling methods\",\n            \"Statistics fundamentals → Mean, median, standard deviation\",\n            \"Error metrics → MSE, RMSE, MAE for model evaluation\",\n            \"Precision and recall → Classification metrics understanding\",\n            \"Data quality concepts → Completeness, accuracy, consistency\"\n          ]\n        }\n      ]\n    },\n    {\n      id: 1,\n      title: \"Core Data Engineering\",\n      subtitle: \"Intermediate Level (1–3 months)\",\n      description: \"Build reliable batch pipelines and data stores\",\n      color: \"bg-blue-500\",\n      sections: [\n        {\n          title: \"Apache Spark Mastery\",\n          items: [\n            \"Spark architecture → Driver, executors, cluster managers\",\n            \"DataFrame API → Transformations, actions, lazy evaluation\",\n            \"PySpark → Python API for Spark programming\",\n            \"Spark SQL → SQL queries on distributed data\",\n            \"Performance → Partitioning strategies, caching, broadcast joins\",\n            \"Deployment → Local, Databricks, EMR, Dataproc environments\"\n          ]\n        },\n        {\n          title: \"Storage & File Formats\",\n          items: [\n            \"Columnar formats → Parquet, Avro, ORC advantages\",\n            \"Compression benefits → Storage efficiency, query performance\",\n            \"Predicate pushdown → Query optimization techniques\",\n            \"Schema evolution → Handling changing data structures\",\n            \"Partitioning strategies → Time-based, value-based partitioning\"\n          ]\n        },\n        {\n          title: \"Lakehouse Architecture\",\n          items: [\n            \"Delta Lake → ACID transactions, time travel, schema enforcement\",\n            \"Apache Iceberg → Table format for large analytic datasets\",\n            \"Apache Hudi → Incremental data processing, upserts\",\n            \"Metadata management → Table statistics, optimization\",\n            \"ACID properties → Atomicity, Consistency, Isolation, Durability\"\n          ]\n        },\n        {\n          title: \"Data Modeling\",\n          items: [\n            \"Star schema → Fact tables, dimension tables design\",\n            \"Dimensional modeling → Kimball methodology, data warehousing\",\n            \"OLTP vs OLAP → Transaction vs analytical processing\",\n            \"Slowly changing dimensions → SCD Type 1, 2, 3 strategies\",\n            \"Data vault modeling → Hub, link, satellite architecture\"\n          ]\n        },\n        {\n          title: \"Hands-on Projects\",\n          items: [\n            \"Batch ETL pipeline → S3/GCS ingestion to processed Parquet tables\",\n            \"PySpark transformations → Data cleaning, aggregations, joins\",\n            \"Partitioned data lakes → Organized storage for analytics\",\n            \"Performance optimization → Measure time/cost improvements\",\n            \"Documentation → GitHub repos with clear READMEs\"\n          ]\n        }\n      ]\n    },\n    {\n      id: 2,\n      title: \"Orchestration & CI/CD\",\n      subtitle: \"Production Ready (1–2 months)\",\n      description: \"Make pipelines production-grade and maintainable\",\n      color: \"bg-green-500\",\n      sections: [\n        {\n          title: \"Workflow Orchestration\",\n          items: [\n            \"Apache Airflow → DAGs, operators, sensors, XComs\",\n            \"Dagster → Asset-aware orchestration, better local development\",\n            \"Dependencies management → Task scheduling, failure handling\",\n            \"Backfills → Historical data processing strategies\",\n            \"Monitoring → Pipeline health, SLA tracking, alerting\"\n          ]\n        },\n        {\n          title: \"Testing & Quality\",\n          items: [\n            \"Unit tests → SQL and Python code validation\",\n            \"Integration tests → End-to-end pipeline testing\",\n            \"Data quality → Great Expectations for validation checkpoints\",\n            \"Schema validation → Data contract enforcement\",\n            \"Regression testing → Preventing data pipeline breaks\"\n          ]\n        },\n        {\n          title: \"CI/CD for Data\",\n          items: [\n            \"GitHub Actions → Automated testing and deployment\",\n            \"GitLab CI → Pipeline automation, code quality checks\",\n            \"Deployment strategies → Blue-green, rolling deployments\",\n            \"Environment management → Dev, staging, production pipelines\",\n            \"Code reviews → Data engineering best practices\"\n          ]\n        },\n        {\n          title: \"Infrastructure as Code\",\n          items: [\n            \"Terraform → Cloud infrastructure provisioning\",\n            \"Cloud resources → Buckets, clusters, IAM management\",\n            \"Version control → Infrastructure versioning and rollbacks\",\n            \"Resource optimization → Cost management, scaling strategies\",\n            \"Security → Access controls, encryption, compliance\"\n          ]\n        },\n        {\n          title: \"Advanced Projects\",\n          items: [\n            \"Production pipeline → Airflow/Dagster DAG with Spark ETL\",\n            \"Quality validation → Great Expectations integration\",\n            \"Cloud deployment → Terraform-provisioned infrastructure\",\n            \"CI/CD implementation → Automated testing and deployment\",\n            \"Monitoring dashboard → Pipeline health visualization\"\n          ]\n        }\n      ]\n    },\n    {\n      id: 3,\n      title: \"Streaming & Real-time\",\n      subtitle: \"Advanced Skills (2–3 months)\",\n      description: \"Build low-latency pipelines and streaming architectures\",\n      color: \"bg-purple-500\",\n      sections: [\n        {\n          title: \"Event Architecture\",\n          items: [\n            \"Event-driven design → Producers, consumers, topics\",\n            \"Message queues → Event ordering, partitioning strategies\",\n            \"Delivery semantics → At-most-once, at-least-once, exactly-once\",\n            \"Event sourcing → Immutable event logs, state reconstruction\",\n            \"CQRS patterns → Command Query Responsibility Segregation\"\n          ]\n        },\n        {\n          title: \"Apache Kafka\",\n          items: [\n            \"Kafka fundamentals → Brokers, topics, partitions, replicas\",\n            \"Producer/Consumer APIs → Message publishing and consumption\",\n            \"Kafka Connect → Source and sink connectors\",\n            \"Schema Registry → Avro, Protobuf schema management\",\n            \"Stream processing → Kafka Streams, ksqlDB for SQL on streams\"\n          ]\n        },\n        {\n          title: \"Stream Processing Engines\",\n          items: [\n            \"Apache Flink → Stateful stream processing, event time\",\n            \"Windowing → Tumbling, sliding, session windows\",\n            \"State management → Checkpoints, savepoints, fault tolerance\",\n            \"Watermarks → Late data handling, event time processing\",\n            \"Materialize → Streaming database, incremental views\"\n          ]\n        },\n        {\n          title: \"Architecture Patterns\",\n          items: [\n            \"Lambda architecture → Batch and speed layer combination\",\n            \"Kappa architecture → Stream-only processing approach\",\n            \"Microservices → Event-driven service communication\",\n            \"Data mesh → Decentralized data ownership\",\n            \"Real-time analytics → Low-latency dashboard updates\"\n          ]\n        },\n        {\n          title: \"Streaming Projects\",\n          items: [\n            \"End-to-end streaming → Producer to consumer with transformations\",\n            \"Real-time analytics → Kafka + Flink + warehouse integration\",\n            \"Event sourcing system → Immutable event log implementation\",\n            \"Stream joins → Multiple data stream correlation\",\n            \"Real-time dashboard → Live data visualization\"\n          ]\n        }\n      ]\n    },\n    {\n      id: 4,\n      title: \"Cloud Data Platforms\",\n      subtitle: \"Enterprise Scale (1–2 months)\",\n      description: \"Master managed services and cloud-native solutions\",\n      color: \"bg-red-500\",\n      sections: [\n        {\n          title: \"Google Cloud Platform\",\n          items: [\n            \"BigQuery → Serverless data warehouse, SQL analytics\",\n            \"Cloud Storage → Data lake storage, lifecycle policies\",\n            \"Dataflow → Apache Beam for batch and stream processing\",\n            \"Cloud Composer → Managed Apache Airflow service\",\n            \"Pub/Sub → Real-time messaging service\"\n          ]\n        },\n        {\n          title: \"Amazon Web Services\",\n          items: [\n            \"Amazon Redshift → Columnar data warehouse service\",\n            \"AWS Glue → ETL service with data catalog\",\n            \"Amazon Athena → Serverless query service\",\n            \"EMR → Managed Hadoop/Spark clusters\",\n            \"Kinesis → Real-time data streaming platform\"\n          ]\n        },\n        {\n          title: \"Snowflake Platform\",\n          items: [\n            \"Architecture → Separation of storage and compute\",\n            \"Virtual warehouses → Scalable compute resources\",\n            \"Data sharing → Secure multi-tenant data exchange\",\n            \"Time travel → Historical data access and recovery\",\n            \"Zero-copy cloning → Instant data environment creation\"\n          ]\n        },\n        {\n          title: \"Platform Integration\",\n          items: [\n            \"Multi-cloud strategy → Vendor lock-in avoidance\",\n            \"Cost optimization → Resource scheduling, auto-scaling\",\n            \"Security → IAM, encryption, compliance frameworks\",\n            \"Monitoring → Cloud-native observability tools\",\n            \"Disaster recovery → Backup and recovery strategies\"\n          ]\n        },\n        {\n          title: \"Certification Prep\",\n          items: [\n            \"Google Cloud Professional Data Engineer → GCP data expertise\",\n            \"AWS Certified Big Data → AWS data services mastery\",\n            \"Databricks Certified Data Engineer → Lakehouse specialist\",\n            \"SnowPro Core → Snowflake platform certification\",\n            \"Practice exams → Hands-on preparation and study guides\"\n          ]\n        }\n      ]\n    },\n    {\n      id: 5,\n      title: \"Governance & Advanced Topics\",\n      subtitle: \"Expert Level (Ongoing)\",\n      description: \"Data governance, observability, security, and system design\",\n      color: \"bg-indigo-500\",\n      sections: [\n        {\n          title: \"Data Governance\",\n          items: [\n            \"Data lineage → OpenLineage, Marquez, automated tracking\",\n            \"Data catalogs → Metadata management, data discovery\",\n            \"Data quality → Automated validation, anomaly detection\",\n            \"Privacy compliance → GDPR, CCPA, data anonymization\",\n            \"Access controls → RBAC, attribute-based access control\"\n          ]\n        },\n        {\n          title: \"Observability & Monitoring\",\n          items: [\n            \"Pipeline monitoring → Metrics, logs, distributed tracing\",\n            \"SLA/SLI management → Service level objectives\",\n            \"Alerting systems → PagerDuty, Slack integration\",\n            \"Cost monitoring → FinOps for data platforms\",\n            \"Performance optimization → Query tuning, resource allocation\"\n          ]\n        },\n        {\n          title: \"Advanced Architecture\",\n          items: [\n            \"System design → Scalability, fault tolerance, consistency\",\n            \"Capacity planning → Growth forecasting, resource scaling\",\n            \"Multi-region deployment → Global data distribution\",\n            \"Disaster recovery → RTO/RPO planning, backup strategies\",\n            \"Performance tuning → Spark optimization, query acceleration\"\n          ]\n        },\n        {\n          title: \"Security & Compliance\",\n          items: [\n            \"Data encryption → At-rest and in-transit protection\",\n            \"Identity management → SSO, MFA, service accounts\",\n            \"Audit logging → Compliance reporting, access tracking\",\n            \"Data masking → PII protection, synthetic data generation\",\n            \"Regulatory frameworks → SOX, HIPAA, industry standards\"\n          ]\n        },\n        {\n          title: \"Master Projects\",\n          items: [\n            \"Complete data platform → Ingestion to visualization\",\n            \"Real-time ML pipeline → Feature store, model serving\",\n            \"Data mesh implementation → Domain-driven architecture\",\n            \"Compliance framework → End-to-end governance solution\",\n            \"Cost optimization study → 40%+ cost reduction demonstration\"\n          ]\n        }\n      ]\n    }\n  ];\n\n  // Handle PDF download with loading state\n  const handlePDFDownload = async () => {\n    setIsDownloading(true);\n    try {\n      const result = await downloadRoadmapPDF(phases);\n      if (result.success) {\n        console.log(`PDF downloaded successfully: ${result.filename}`);\n      } else {\n        console.error('PDF download failed:', result.error);\n      }\n    } catch (error) {\n      console.error('PDF download error:', error);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'documentation':\n        return <Docs />;\n      case 'projects':\n        return <Projects />;\n      default:\n        return (\n          <div className=\"relative\">\n            {/* Timeline */}\n            <div className=\"flex flex-col space-y-8 md:space-y-12\">\n              {phases.map((phase, index) => (\n                <div key={phase.id} className=\"relative\">\n                  {/* Connection Line */}\n                  {index < phases.length - 1 && (\n                    <div className=\"absolute left-1/2 transform -translate-x-1/2 top-full h-8 md:h-12 w-0.5 md:w-1 bg-gray-300 z-10\"></div>\n                  )}\n\n                  {/* Phase Card */}\n                  <div className=\"flex flex-col items-center\">\n                    {/* Phase Header */}\n                    <div className=\"text-center mb-4 md:mb-6 px-4\">\n                      <div className={`inline-block ${phase.color} text-white px-4 md:px-6 py-2 md:py-3 rounded-lg font-semibold text-base md:text-lg mb-2`}>\n                        Stage {phase.id}: {phase.title}\n                      </div>\n                      <p className=\"text-gray-600 text-xs md:text-sm\">{phase.subtitle}</p>\n                      <p className=\"text-gray-800 font-medium mt-1 text-sm md:text-base\">{phase.description}</p>\n                    </div>\n\n                    {/* Phase Content */}\n                    <div className=\"w-full max-w-5xl px-4\">\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4 md:gap-6\">\n                        {phase.sections.map((section, sectionIndex) => (\n                          <div\n                            key={sectionIndex}\n                            className=\"bg-white rounded-lg border-2 border-blue-200 p-4 md:p-6 shadow-sm hover:shadow-md transition-shadow\"\n                          >\n                            <h3 className=\"text-blue-600 font-semibold text-base md:text-lg mb-3 md:mb-4\">\n                              {section.title}\n                            </h3>\n                            <ol className=\"space-y-2\">\n                              {section.items.map((item, itemIndex) => (\n                                <li key={itemIndex} className=\"text-gray-700 text-xs md:text-sm leading-relaxed\">\n                                  <span className=\"font-medium text-gray-900\">{itemIndex + 1}.</span> {item}\n                                </li>\n                              ))}\n                            </ol>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Step Indicators */}\n                    {index < phases.length - 1 && (\n                      <div className=\"mt-6 md:mt-8 flex items-center space-x-2 md:space-x-4\">\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform -rotate-12\">\n                          Stage {phase.id}\n                        </div>\n                        <ChevronDown className=\"text-gray-400\" size={20} />\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform rotate-12\">\n                          Stage {phase.id + 1}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Learning Timeline */}\n            <div className=\"text-center mt-8 md:mt-12 mx-4 p-6 md:p-8 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg border border-blue-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                📊 Suggested Learning Timeline\n              </h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-left\">\n                <div className=\"bg-white p-4 rounded-lg border border-blue-300\">\n                  <h3 className=\"font-semibold text-blue-600 mb-2\">🏃‍♂️ Full-Time Learning (12 months)</h3>\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\n                    <li>• 0–2 months: Foundations + SQL + Python + small batch project</li>\n                    <li>• 2–5 months: Spark + lakehouse tables + Airflow/Dagster + dbt</li>\n                    <li>• 5–8 months: Streaming (Kafka + Flink) + cloud DW integrations</li>\n                    <li>• 8–12 months: Advanced system design + governance + portfolio</li>\n                  </ul>\n                </div>\n                <div className=\"bg-white p-4 rounded-lg border border-purple-300\">\n                  <h3 className=\"font-semibold text-purple-600 mb-2\">🚶‍♂️ Part-Time Learning (18-24 months)</h3>\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\n                    <li>• Extend each stage by 50-75% additional time</li>\n                    <li>• Focus on one major project per 3-month period</li>\n                    <li>• Join data engineering communities for support</li>\n                    <li>• Practice coding challenges on weekends</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            {/* Portfolio Requirements */}\n            <div className=\"text-center mt-8 mx-4 p-6 md:p-8 bg-gradient-to-r from-green-50 to-blue-50 rounded-lg border border-green-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                🏆 Must-Have Portfolio Projects\n              </h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 text-left\">\n                <div className=\"bg-white p-4 rounded-lg border border-green-300\">\n                  <h3 className=\"font-semibold text-green-600 mb-2\">End-to-end Lakehouse</h3>\n                  <p className=\"text-sm text-gray-600\">Ingest → Delta/Iceberg → dbt → BigQuery/Snowflake → BI dashboard</p>\n                </div>\n                <div className=\"bg-white p-4 rounded-lg border border-blue-300\">\n                  <h3 className=\"font-semibold text-blue-600 mb-2\">Real-time Analytics</h3>\n                  <p className=\"text-sm text-gray-600\">Kafka → Flink transforms → Materialize → live dashboard</p>\n                </div>\n                <div className=\"bg-white p-4 rounded-lg border border-purple-300\">\n                  <h3 className=\"font-semibold text-purple-600 mb-2\">Data Quality & Lineage</h3>\n                  <p className=\"text-sm text-gray-600\">Great Expectations validations + lineage metadata + alerting</p>\n                </div>\n                <div className=\"bg-white p-4 rounded-lg border border-red-300\">\n                  <h3 className=\"font-semibold text-red-600 mb-2\">Cost Optimization</h3>\n                  <p className=\"text-sm text-gray-600\">Query tuning with before/after performance & cost metrics</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Final Message */}\n            <div className=\"text-center mt-8 mx-4 p-6 md:p-8 bg-gradient-to-r from-purple-50 to-indigo-50 rounded-lg border border-purple-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                🚀 Congratulations! You're Data Engineering Industry Ready!\n              </h2>\n              <p className=\"text-gray-700 text-base md:text-lg mb-4\">\n                You've completed the Data Engineering Mastery Roadmap and are now ready to build enterprise-scale data platforms and work at top tech companies.\n              </p>\n              <div className=\"bg-white p-4 rounded-lg border border-purple-300 mt-4\">\n                <h3 className=\"font-semibold text-purple-600 mb-2\">🎯 Interview & Hiring Checklist</h3>\n                <ul className=\"text-sm text-gray-600 space-y-1\">\n                  <li>• ✅ 1-3 public projects with runnable code + clear READMEs</li>\n                  <li>• ✅ Architecture diagrams + demo videos for each project</li>\n                  <li>• ✅ At least one pipeline with automated tests + monitoring</li>\n                  <li>• ✅ CV with quantified impact (runtime improvements, cost savings)</li>\n                  <li>• ✅ Prepare to whiteboard system designs and explain failure modes</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 md:px-6 py-4 md:py-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6 md:mb-8\">\n          <div className=\"flex items-center space-x-2 md:space-x-4\">\n            <Database className=\"text-blue-600\" size={32} />\n            <h1 className=\"text-xl md:text-3xl font-bold text-gray-900\">\n              Data Engineering <span className=\"text-blue-600\">Mastery Roadmap</span>\n              <span className=\"text-sm md:text-base font-normal text-gray-600 ml-2\">(2025 Edition)</span>\n            </h1>\n          </div>\n\n          {/* Desktop Download Button */}\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"hidden md:flex bg-red-500 hover:bg-red-600 disabled:bg-red-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg items-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n\n          {/* Mobile Menu Button */}\n          <button \n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            className=\"md:hidden bg-blue-500 hover:bg-blue-600 text-white p-2 rounded-lg transition-colors\"\n          >\n            {mobileMenuOpen ? <X size={20} /> : <Menu size={20} />}\n          </button>\n        </div>\n\n        {/* Mobile Download Button */}\n        <div className=\"md:hidden mb-4\">\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"w-full bg-red-500 hover:bg-red-600 disabled:bg-red-400 disabled:cursor-not-allowed text-white px-4 py-3 rounded-lg flex items-center justify-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className={`${mobileMenuOpen ? 'block' : 'hidden'} md:block mb-6 md:mb-8`}>\n          <div className=\"flex flex-col md:flex-row space-y-1 md:space-y-0 md:space-x-1 bg-white p-1 rounded-lg shadow-sm w-full md:w-fit\">\n            <button\n              onClick={() => {\n                setActiveTab('roadmap');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'roadmap'\n                  ? 'bg-blue-600 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <Database size={18} className=\"mr-2\" />\n              Roadmap\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('documentation');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'documentation'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FileText size={18} className=\"mr-2\" />\n              Documentation\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('projects');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'projects'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FolderOpen size={18} className=\"mr-2\" />\n              Projects\n            </button>\n          </div>\n        </div>\n\n        {/* Content */}\n        {renderContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default DataEngineeringRoadmap;"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;AALA;;;;;;;AAOA,MAAM,yBAAyB;IAC7B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,MAAM,SAAS;QACb;YACE,IAAI;YACJ,OAAO;YACP,UAAU;YACV,aAAa;YACb,OAAO;YACP,UAAU;gBACR;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;aACD;QACH;QACA;YACE,IAAI;YACJ,OAAO;YACP,UAAU;YACV,aAAa;YACb,OAAO;YACP,UAAU;gBACR;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;aACD;QACH;QACA;YACE,IAAI;YACJ,OAAO;YACP,UAAU;YACV,aAAa;YACb,OAAO;YACP,UAAU;gBACR;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;aACD;QACH;QACA;YACE,IAAI;YACJ,OAAO;YACP,UAAU;YACV,aAAa;YACb,OAAO;YACP,UAAU;gBACR;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;aACD;QACH;QACA;YACE,IAAI;YACJ,OAAO;YACP,UAAU;YACV,aAAa;YACb,OAAO;YACP,UAAU;gBACR;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;gBACA;oBACE,OAAO;oBACP,OAAO;wBACL;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH;aACD;QACH;QA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","debugId":null}}]
}