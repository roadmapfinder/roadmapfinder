{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Docs/data_design/page.jsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\n\nconst DatabaseDesignVideo = () => {\n  return (\n    <div className=\"max-w-4xl mx-auto p-8 bg-white\">\n      <article className=\"prose prose-lg max-w-none\">\n        {/* Title */}\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-8 border-b-4 border-purple-500 pb-4\">\n          From Idea to Production-Ready Database Design (No More Mistakes!) — Jan\n          Marshal\n        </h1>\n\n        {/* Overview */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-8 mb-4\">\n          Overview\n        </h2>\n        <p className=\"text-gray-700 leading-relaxed mb-6\">\n          The{\" \"}\n          <strong>\n            “From Idea to Production-Ready Database Design (No More Mistakes!)”\n          </strong>{\" \"}\n          is a YouTube video by <strong>Jan Marshal</strong> that introduces{\" \"}\n          <em>relational database design</em> from the ground up. It is aimed at\n          developers and learners who want to transform conceptual ideas into{\" \"}\n          <strong>real, production-ready database schemas</strong> while avoiding\n          common mistakes. The video is positioned as a{\" \"}\n          <strong>Beginner’s Guide to Designing a Relational Database</strong>{\" \"}\n          and focuses on structured design (ERD, normalization, schema integrity)\n          rather than unstructured or NoSQL systems.\n        </p>\n\n        {/* Likely Topics Covered */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Likely Topics Covered\n        </h2>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>\n            <strong>Idea & Requirements Gathering</strong> — Understanding what\n            data you need, business rules, and identifying entities.\n          </li>\n          <li>\n            <strong>Entity-Relationship Diagrams (ERDs)</strong> — Defining\n            entities, relationships, attributes, and keys.\n          </li>\n          <li>\n            <strong>Schema Design / Logical Modeling</strong> — Translating ERD\n            into relational tables, deciding on primary keys, foreign keys, and\n            constraints.\n          </li>\n          <li>\n            <strong>Normalization</strong> — Applying 1NF, 2NF, 3NF (and maybe\n            beyond) to avoid redundancy and anomalies.\n          </li>\n          <li>\n            <strong>Constraints & Integrity</strong> — Using NOT NULL, UNIQUE,\n            CHECK, and FOREIGN KEY constraints to ensure data integrity.\n          </li>\n          <li>\n            <strong>Common Mistakes & Pitfalls</strong> — Highlighting issues\n            like over-denormalization, poor indexing, or overly flexible schemas.\n          </li>\n          <li>\n            <strong>Indexing & Performance Considerations</strong> — When and\n            where to add indexes, query performance tradeoffs.\n          </li>\n          <li>\n            <strong>From Design to Production</strong> — Implementing schemas in\n            real databases, migrations, and schema changes.\n          </li>\n          <li>\n            <strong>Scaling & Future Changes</strong> — Designing databases that\n            can evolve with new features and data growth.\n          </li>\n        </ul>\n\n        {/* Suggested Learning Strategy */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Suggested Learning Strategy\n        </h2>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>\n            Start with <strong>requirements gathering</strong> to clarify data\n            needs.\n          </li>\n          <li>\n            Build <strong>ERDs</strong> and gradually move to schema design.\n          </li>\n          <li>\n            Apply <strong>normalization</strong> before enforcing constraints.\n          </li>\n          <li>\n            Explore <strong>common mistakes</strong> to learn what to avoid.\n          </li>\n          <li>\n            Conclude with <strong>production-ready schema deployment</strong> and\n            performance optimization.\n          </li>\n        </ul>\n\n        {/* Expected Outcomes */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Expected Outcomes\n        </h2>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>\n            Ability to design structured relational databases from scratch.\n          </li>\n          <li>\n            Understanding of ERDs, normalization, and schema integrity\n            principles.\n          </li>\n          <li>\n            Knowledge of indexing, constraints, and performance considerations.\n          </li>\n          <li>\n            Confidence to take a design from idea to{\" \"}\n            <strong>production-ready implementation</strong>.\n          </li>\n        </ul>\n\n        {/* Final Notes */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Final Notes\n        </h2>\n        <p className=\"text-gray-700 leading-relaxed mb-6\">\n          The{\" \"}\n          <strong>\n            “From Idea to Production-Ready Database Design (No More Mistakes!)”\n          </strong>{\" \"}\n          video by <strong>Jan Marshal</strong> provides a{\" \"}\n          <em>step-by-step introduction to relational database design</em>. It\n          helps beginners and intermediate learners build strong foundations and\n          avoid mistakes when creating real-world, production-grade databases.\n        </p>\n\n        {/* Meta Info */}\n        <hr className=\"my-8 border-gray-300\" />\n        <div className=\"text-sm text-gray-600 bg-gray-50 p-4 rounded-lg\">\n          <p className=\"mb-1\">\n            <strong>Instructor:</strong> Jan Marshal\n          </p>\n          <p className=\"mb-1\">\n            <strong>Platform:</strong> YouTube\n          </p>\n          <p className=\"mb-1\">\n            <strong>Focus:</strong> Relational Database Design\n          </p>\n          <p>\n            <strong>Level:</strong> Beginner → Intermediate\n          </p>\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default DatabaseDesignVideo;\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGA,MAAM,sBAAsB;IAC1B,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAQ,WAAU;;8BAEjB,8OAAC;oBAAG,WAAU;8BAA0E;;;;;;8BAMxF,8OAAC;oBAAG,WAAU;8BAAiD;;;;;;8BAG/D,8OAAC;oBAAE,WAAU;;wBAAqC;wBAC5C;sCACJ,8OAAC;sCAAO;;;;;;wBAEE;wBAAI;sCACQ,8OAAC;sCAAO;;;;;;wBAAoB;wBAAiB;sCACnE,8OAAC;sCAAG;;;;;;wBAA+B;wBACiC;sCACpE,8OAAC;sCAAO;;;;;;wBAAgD;wBACV;sCAC9C,8OAAC;sCAAO;;;;;;wBAA6D;wBAAI;;;;;;;8BAM3E,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAsC;;;;;;;sCAGhD,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAA4C;;;;;;;sCAGtD,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAyC;;;;;;;sCAInD,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAsB;;;;;;;sCAGhC,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAgC;;;;;;;sCAG1C,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAmC;;;;;;;sCAG7C,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAA8C;;;;;;;sCAGxD,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAkC;;;;;;;sCAG5C,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAiC;;;;;;;;;;;;;8BAM7C,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;;gCAAG;8CACS,8OAAC;8CAAO;;;;;;gCAA+B;;;;;;;sCAGpD,8OAAC;;gCAAG;8CACI,8OAAC;8CAAO;;;;;;gCAAa;;;;;;;sCAE7B,8OAAC;;gCAAG;8CACI,8OAAC;8CAAO;;;;;;gCAAsB;;;;;;;sCAEtC,8OAAC;;gCAAG;8CACM,8OAAC;8CAAO;;;;;;gCAAwB;;;;;;;sCAE1C,8OAAC;;gCAAG;8CACY,8OAAC;8CAAO;;;;;;gCAA2C;;;;;;;;;;;;;8BAMrE,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCAGJ,8OAAC;sCAAG;;;;;;sCAIJ,8OAAC;sCAAG;;;;;;sCAGJ,8OAAC;;gCAAG;gCACuC;8CACzC,8OAAC;8CAAO;;;;;;gCAAwC;;;;;;;;;;;;;8BAKpD,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAE,WAAU;;wBAAqC;wBAC5C;sCACJ,8OAAC;sCAAO;;;;;;wBAEE;wBAAI;sCACL,8OAAC;sCAAO;;;;;;wBAAoB;wBAAY;sCACjD,8OAAC;sCAAG;;;;;;wBAA4D;;;;;;;8BAMlE,8OAAC;oBAAG,WAAU;;;;;;8BACd,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;;8CACX,8OAAC;8CAAO;;;;;;gCAAoB;;;;;;;sCAE9B,8OAAC;4BAAE,WAAU;;8CACX,8OAAC;8CAAO;;;;;;gCAAkB;;;;;;;sCAE5B,8OAAC;4BAAE,WAAU;;8CACX,8OAAC;8CAAO;;;;;;gCAAe;;;;;;;sCAEzB,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAe;;;;;;;;;;;;;;;;;;;;;;;;AAMnC;uCAEe","debugId":null}},
    {"offset": {"line": 558, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}