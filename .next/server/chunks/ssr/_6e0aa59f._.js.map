{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Docs/golang/page.jsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\n\nconst GolangCodersGyan = () => {\n  return (\n    <div className=\"max-w-4xl mx-auto p-8 bg-white\">\n      <article className=\"prose prose-lg max-w-none\">\n\n        {/* Title */}\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-8 border-b-4 border-blue-500 pb-4\">\n          Learn Golang — Coder’s Gyan (Complete Course Overview)\n        </h1>\n\n        {/* Introduction */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-8 mb-4\">\n          Introduction\n        </h2>\n        <p className=\"text-gray-700 leading-relaxed mb-6\">\n          The <strong>Golang pathway by Coder’s Gyan</strong>, taught by{\" \"}\n          <strong>Rakesh K</strong>, offers a complete journey into Go. It\n          combines <em>free YouTube full courses/tutorials</em> with the upcoming\n          paid program <strong>“Learn Golang by building Real-world Projects”</strong>. \n          Together, these resources provide a zero-to-production roadmap for\n          backend developers who want to master Go for REST APIs, concurrency,\n          and microservices.\n        </p>\n\n        {/* Formats Available */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Formats Available\n        </h2>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>\n            <strong>Free:</strong> YouTube long-form Golang tutorials and full\n            courses — cover basics, syntax, and small API demos.\n          </li>\n          <li>\n            <strong>Paid (Upcoming):</strong> “Learn Golang by building\n            Real-world Projects” — deeper dive into concurrency, REST APIs,\n            databases, and multiple demo projects.\n          </li>\n        </ul>\n\n        {/* Who is this for */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Who This Is For\n        </h2>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Beginners seeking a structured zero → production Go pathway.</li>\n          <li>\n            Backend developers aiming for REST APIs, microservices, and\n            concurrency with Go.\n          </li>\n          <li>\n            Learners who prefer <strong>build-while-you-learn</strong> projects\n            rather than theory-only lectures.\n          </li>\n        </ul>\n\n        {/* Prerequisites */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Prerequisites\n        </h2>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Basic programming knowledge (Python, JS, or Java recommended).</li>\n          <li>Comfort with the command line and editors (VS Code, GoLand).</li>\n          <li>\n            For full-stack/project parts: understanding of HTTP, JSON, and\n            relational databases.\n          </li>\n        </ul>\n\n        {/* Learning Outcomes */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Learning Outcomes\n        </h2>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Write idiomatic Go programs with modules, packages, and types.</li>\n          <li>\n            Build concurrent programs with <strong>goroutines</strong> and{\" \"}\n            <strong>channels</strong>.\n          </li>\n          <li>Implement REST APIs with routing, handlers, and middleware.</li>\n          <li>\n            Connect to SQL/NoSQL databases and build CRUD backend services.\n          </li>\n          <li>\n            Containerize and deploy Go services with performance monitoring.\n          </li>\n          <li>Ship multiple real-world projects for your portfolio.</li>\n        </ul>\n\n        {/* Course Syllabus */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Course Structure & Syllabus\n        </h2>\n        <p className=\"text-gray-700 leading-relaxed mb-6\">\n          The Coder’s Gyan Golang curriculum mixes explicit advertised modules\n          (concurrency, REST APIs, projects) with a standard full Go bootcamp\n          flow. Below is a practical roadmap:\n        </p>\n\n        {/* Module list */}\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 0 — Orientation & Environment\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Course overview & goals (explicit from course page).</li>\n          <li>Install Go, GOPATH vs go.mod, VS Code/GoLand setup.</li>\n          <li>Repo organization & git basics.</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 1 — Go Fundamentals\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Program structure, main() & init().</li>\n          <li>Variables, constants, types, control flow.</li>\n          <li>Functions, multiple returns, named results.</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 2 — Composite Types\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Arrays, slices, maps — internals and idioms.</li>\n          <li>Strings, runes, and bytes.</li>\n          <li>Structs, methods, and pointer receivers.</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 3 — Interfaces & Design\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Interfaces & implicit implementation.</li>\n          <li>Embedding & composition patterns.</li>\n          <li>Idiomatic design principles.</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 4 — Error Handling & Testing\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>error type & wrapping best practices.</li>\n          <li>Unit testing, table-driven tests.</li>\n          <li>Benchmarks & performance tests.</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 5 — Concurrency (Explicit)\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Goroutines, channels, select, timeouts.</li>\n          <li>sync.Mutex, WaitGroup, atomics.</li>\n          <li>Worker pools, fan-in/fan-out patterns.</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 6 — Networking & APIs\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>net/http basics, handlers, middleware.</li>\n          <li>JSON encoding/decoding.</li>\n          <li>Routers: gorilla/mux, chi, or Gin.</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 7 — Data Persistence\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>SQL drivers, prepared statements, transactions.</li>\n          <li>ORMs like GORM and tradeoffs.</li>\n          <li>NoSQL examples (Redis, Firestore).</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 8 — Project Architecture\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Project layout (pkg, cmd, internal).</li>\n          <li>Services, repositories, DTOs.</li>\n          <li>Logging, env config, graceful shutdown.</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 9 — Advanced Topics\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Generics & reflection basics.</li>\n          <li>gRPC client/server (optional).</li>\n          <li>Profiling & benchmarking with pprof.</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 10 — DevOps & Deployment\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>Dockerizing Go apps, multi-stage builds.</li>\n          <li>CI/CD basics: test → build → docker.</li>\n          <li>Deployment strategies & monitoring.</li>\n        </ul>\n\n        <h3 className=\"text-xl font-semibold text-gray-800 mt-6 mb-3\">\n          Module 11 — Capstone Projects (Explicit)\n        </h3>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>REST API with authentication & CRUD.</li>\n          <li>Task manager backend with DB.</li>\n          <li>Concurrent worker/queue system.</li>\n          <li>WebSocket/chat app.</li>\n          <li>Microservice demo (Dockerized).</li>\n        </ul>\n\n        {/* Example Lessons */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Example Lessons\n        </h2>\n        <ul className=\"list-disc list-inside text-gray-700 space-y-2 mb-6\">\n          <li>\n            <strong>Build a Notes REST API:</strong> struct → DB schema → CRUD →\n            router → JSON tests → dockerize.\n          </li>\n          <li>\n            <strong>Implement Worker Pool:</strong> goroutine pool with channel\n            distribution & graceful shutdown.\n          </li>\n          <li>\n            <strong>Profiling & Optimizing Endpoint:</strong> run pprof →\n            identify hotspots → fix slice reuse.\n          </li>\n        </ul>\n\n        {/* Final Notes */}\n        <h2 className=\"text-2xl font-semibold text-gray-800 mt-10 mb-4\">\n          Final Notes\n        </h2>\n        <p className=\"text-gray-700 leading-relaxed mb-6\">\n          Coder’s Gyan provides a rare <strong>end-to-end Go pathway</strong> —\n          starting with free YouTube content and extending to a project-first\n          paid program. If you want to become a <strong>Go backend developer</strong>, \n          this dual approach balances fundamentals with practical, \n          <em>portfolio-ready projects</em>.\n        </p>\n\n        {/* Meta Info */}\n        <hr className=\"my-8 border-gray-300\" />\n        <div className=\"text-sm text-gray-600 bg-gray-50 p-4 rounded-lg\">\n          <p className=\"mb-1\"><strong>Instructor:</strong> Rakesh K (Coder’s Gyan)</p>\n          <p className=\"mb-1\"><strong>Platform:</strong> YouTube + codersgyan.com</p>\n          <p className=\"mb-1\"><strong>Language:</strong> English (with Hindi mix in some videos)</p>\n          <p><strong>Level:</strong> Beginner → Intermediate → Advanced</p>\n        </div>\n\n      </article>\n    </div>\n  );\n};\n\nexport default GolangCodersGyan;\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGA,MAAM,mBAAmB;IACvB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAQ,WAAU;;8BAGjB,8OAAC;oBAAG,WAAU;8BAAwE;;;;;;8BAKtF,8OAAC;oBAAG,WAAU;8BAAiD;;;;;;8BAG/D,8OAAC;oBAAE,WAAU;;wBAAqC;sCAC5C,8OAAC;sCAAO;;;;;;wBAAuC;wBAAY;sCAC/D,8OAAC;sCAAO;;;;;;wBAAiB;sCAChB,8OAAC;sCAAG;;;;;;wBAAwC;sCACxC,8OAAC;sCAAO;;;;;;wBAAuD;;;;;;;8BAO9E,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAc;;;;;;;sCAGxB,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAyB;;;;;;;;;;;;;8BAOrC,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCAIJ,8OAAC;;gCAAG;8CACkB,8OAAC;8CAAO;;;;;;gCAA8B;;;;;;;;;;;;;8BAM9D,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAON,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;;gCAAG;8CAC6B,8OAAC;8CAAO;;;;;;gCAAmB;gCAAK;8CAC/D,8OAAC;8CAAO;;;;;;gCAAiB;;;;;;;sCAE3B,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCAGJ,8OAAC;sCAAG;;;;;;sCAGJ,8OAAC;sCAAG;;;;;;;;;;;;8BAIN,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAE,WAAU;8BAAqC;;;;;;8BAOlD,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAGN,8OAAC;oBAAG,WAAU;8BAAgD;;;;;;8BAG9D,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;8BAIN,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAgC;;;;;;;sCAG1C,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAA+B;;;;;;;sCAGzC,8OAAC;;8CACC,8OAAC;8CAAO;;;;;;gCAAyC;;;;;;;;;;;;;8BAMrD,8OAAC;oBAAG,WAAU;8BAAkD;;;;;;8BAGhE,8OAAC;oBAAE,WAAU;;wBAAqC;sCACnB,8OAAC;sCAAO;;;;;;wBAA8B;sCAE7B,8OAAC;sCAAO;;;;;;wBAA6B;sCAE3E,8OAAC;sCAAG;;;;;;wBAA6B;;;;;;;8BAInC,8OAAC;oBAAG,WAAU;;;;;;8BACd,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;;8CAAO,8OAAC;8CAAO;;;;;;gCAAoB;;;;;;;sCAChD,8OAAC;4BAAE,WAAU;;8CAAO,8OAAC;8CAAO;;;;;;gCAAkB;;;;;;;sCAC9C,8OAAC;4BAAE,WAAU;;8CAAO,8OAAC;8CAAO;;;;;;gCAAkB;;;;;;;sCAC9C,8OAAC;;8CAAE,8OAAC;8CAAO;;;;;;gCAAe;;;;;;;;;;;;;;;;;;;;;;;;AAMpC;uCAEe","debugId":null}},
    {"offset": {"line": 987, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}