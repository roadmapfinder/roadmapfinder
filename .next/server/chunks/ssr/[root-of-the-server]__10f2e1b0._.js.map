{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/APP/downloadPdf.js"],"sourcesContent":["import html2canvas from \"html2canvas\";\nimport { jsPDF } from \"jspdf\";\n\n/**\n * Enhanced PDF download utility for roadmap content\n * @param {Array} roadmapData - The roadmap data to generate PDF from\n * @param {boolean} darkMode - Whether dark mode is enabled\n * @returns {Promise<void>}\n */\n\nexport const downloadRoadmapPDF = async (roadmapData, darkMode = false) => {\n  if (!roadmapData || !Array.isArray(roadmapData)) {\n    throw new Error(\"Invalid roadmap data provided\");\n  }\n\n  try {\n    const downloadDiv = createDownloadElement(roadmapData, darkMode);\n    document.body.appendChild(downloadDiv);\n\n    const canvas = await generateCanvas(downloadDiv);\n    document.body.removeChild(downloadDiv);\n\n    const pdf = await createPDF(canvas);\n\n    // Save PDF and store metadata\n    pdf.save(\"App_Developer_Roadmap.pdf\");\n    saveRoadmapMetadata(roadmapData);\n\n  } catch (error) {\n    console.error(\"Error generating PDF:\", error);\n    throw new Error(\"Failed to generate PDF. Please try again.\");\n  }\n};\n\n/**\n * Creates a styled DOM element for PDF generation\n * @param {Array} roadmapData - The roadmap data\n * @param {boolean} darkMode - Dark mode flag\n * @returns {HTMLElement} The created element\n */\nconst createDownloadElement = (roadmapData, darkMode) => {\n  const downloadDiv = document.createElement(\"div\");\n  downloadDiv.className = \"roadmap-download-content\";\n\n  // Apply enhanced styling\n  applyContainerStyles(downloadDiv);\n\n  // Add title\n  const title = createTitle();\n  downloadDiv.appendChild(title);\n\n  // Add roadmap sections\n  roadmapData.forEach(section => {\n    const sectionElement = createSectionElement(section);\n    downloadDiv.appendChild(sectionElement);\n  });\n\n  return downloadDiv;\n};\n\n/**\n * Applies container styles for better PDF output\n * @param {HTMLElement} element - The container element\n */\nconst applyContainerStyles = (element) => {\n  const styles = {\n    padding: \"40px\",\n    color: \"#2c3e50\",\n    backgroundColor: \"white\",\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    fontSize: \"14px\",\n    lineHeight: \"1.6\",\n    maxWidth: \"800px\",\n    margin: \"0 auto\"\n  };\n\n  Object.assign(element.style, styles);\n};\n\n/**\n * Creates the main title element\n * @returns {HTMLElement} The title element\n */\nconst createTitle = () => {\n  const title = document.createElement(\"h1\");\n  const titleStyles = {\n    textAlign: \"center\",\n    marginBottom: \"30px\",\n    fontSize: \"32px\",\n    fontWeight: \"700\",\n    color: \"#2c3e50\",\n    borderBottom: \"3px solid #3498db\",\n    paddingBottom: \"15px\"\n  };\n\n  Object.assign(title.style, titleStyles);\n  title.textContent = \"App Development Roadmap\";\n  return title;\n};\n\n/**\n * Creates a section element with all subsections\n * @param {Object} section - The section data\n * @returns {HTMLElement} The section element\n */\nconst createSectionElement = (section) => {\n  const sectionDiv = document.createElement(\"div\");\n  sectionDiv.style.marginBottom = \"40px\";\n  sectionDiv.style.pageBreakInside = \"avoid\";\n\n  // Add section header\n  const header = createSectionHeader(section);\n  sectionDiv.appendChild(header);\n\n  // Add description\n  const description = createDescription(section.description);\n  sectionDiv.appendChild(description);\n\n  // Add all content subsections\n  const subsections = [\n    { title: \"✅ What to Learn\", items: section.content.whatToLearn, color: \"#27ae60\", type: \"list\" },\n    { title: \"📚 Best Courses\", items: section.content.bestCourses, color: \"#3498db\", type: \"courses\" },\n    { title: \"🧰 Tools to Use\", items: section.content.toolsToUse, color: \"#f39c12\", type: \"list\" },\n    { title: \"📘 Docs & Websites\", items: section.content.docsAndWebsites, color: \"#e74c3c\", type: \"list\" },\n    { title: \"💡 Project Ideas\", items: section.content.projectIdeas, color: \"#9b59b6\", type: \"list\" }\n  ];\n\n  subsections.forEach(subsection => {\n    const element = createSubsection(subsection);\n    sectionDiv.appendChild(element);\n  });\n\n  return sectionDiv;\n};\n\n/**\n * Creates a section header\n * @param {Object} section - The section data\n * @returns {HTMLElement} The header element\n */\nconst createSectionHeader = (section) => {\n  const header = document.createElement(\"h2\");\n  const headerStyles = {\n    backgroundColor: \"#ecf0f1\",\n    padding: \"15px 20px\",\n    borderRadius: \"8px\",\n    borderLeft: \"5px solid #3498db\",\n    fontSize: \"20px\",\n    fontWeight: \"600\",\n    color: \"#2c3e50\",\n    marginBottom: \"20px\"\n  };\n\n  Object.assign(header.style, headerStyles);\n  header.textContent = `${section.id}. ${section.title}`;\n  return header;\n};\n\n/**\n * Creates a description element\n * @param {string} description - The description text\n * @returns {HTMLElement} The description element\n */\nconst createDescription = (description) => {\n  const desc = document.createElement(\"p\");\n  const descStyles = {\n    marginBottom: \"25px\",\n    fontStyle: \"italic\",\n    fontSize: \"15px\",\n    color: \"#7f8c8d\",\n    lineHeight: \"1.7\",\n    padding: \"0 10px\"\n  };\n\n  Object.assign(desc.style, descStyles);\n  desc.textContent = description;\n  return desc;\n};\n\n/**\n * Creates a subsection element\n * @param {Object} subsection - The subsection configuration\n * @returns {HTMLElement} The subsection element\n */\nconst createSubsection = (subsection) => {\n  const container = document.createElement(\"div\");\n  container.style.marginBottom = \"25px\";\n\n  const title = createSubsectionTitle(subsection.title, subsection.color);\n  container.appendChild(title);\n\n  if (subsection.type === \"courses\") {\n    const courseContent = createCoursesContent(subsection.items);\n    container.appendChild(courseContent);\n  } else {\n    const list = createItemList(subsection.items);\n    container.appendChild(list);\n  }\n\n  return container;\n};\n\n/**\n * Creates a subsection title\n * @param {string} title - The title text\n * @param {string} color - The title color\n * @returns {HTMLElement} The title element\n */\nconst createSubsectionTitle = (title, color) => {\n  const titleElement = document.createElement(\"h3\");\n  const titleStyles = {\n    fontSize: \"18px\",\n    fontWeight: \"600\",\n    color: color,\n    marginBottom: \"12px\",\n    borderBottom: `2px solid ${color}`,\n    paddingBottom: \"5px\"\n  };\n\n  Object.assign(titleElement.style, titleStyles);\n  titleElement.textContent = title;\n  return titleElement;\n};\n\n/**\n * Creates content for courses subsection\n * @param {Object} courses - The courses object with english and hindi arrays\n * @returns {HTMLElement} The courses content element\n */\nconst createCoursesContent = (courses) => {\n  const container = document.createElement(\"div\");\n\n  // English courses\n  const englishSection = createCourseLanguageSection(\"In English:\", courses.english);\n  container.appendChild(englishSection);\n\n  // Hindi courses\n  const hindiSection = createCourseLanguageSection(\"In Hindi:\", courses.hindi);\n  container.appendChild(hindiSection);\n\n  return container;\n};\n\n/**\n * Creates a course language section\n * @param {string} languageTitle - The language title\n * @param {Array} courses - The courses array\n * @returns {HTMLElement} The language section element\n */\nconst createCourseLanguageSection = (languageTitle, courses) => {\n  const section = document.createElement(\"div\");\n\n  const title = document.createElement(\"h4\");\n  const titleStyles = {\n    fontSize: \"16px\",\n    fontWeight: \"500\",\n    color: \"#2c3e50\",\n    marginTop: \"15px\",\n    marginBottom: \"10px\"\n  };\n  Object.assign(title.style, titleStyles);\n  title.textContent = languageTitle;\n  section.appendChild(title);\n\n  const list = createItemList(courses, \"13px\");\n  section.appendChild(list);\n\n  return section;\n};\n\n/**\n * Creates a list of items\n * @param {Array} items - The items array\n * @param {string} fontSize - Optional font size\n * @returns {HTMLElement} The list element\n */\nconst createItemList = (items, fontSize = \"14px\") => {\n  const list = document.createElement(\"ul\");\n  list.style.paddingLeft = \"25px\";\n  list.style.margin = \"15px 0\";\n\n  items.forEach(item => {\n    const listItem = document.createElement(\"li\");\n    const itemStyles = {\n      marginBottom: fontSize === \"13px\" ? \"6px\" : \"8px\",\n      fontSize: fontSize,\n      lineHeight: fontSize === \"13px\" ? \"1.5\" : \"1.6\",\n      color: \"#34495e\"\n    };\n    Object.assign(listItem.style, itemStyles);\n    listItem.textContent = item;\n    list.appendChild(listItem);\n  });\n\n  return list;\n};\n\n/**\n * Generates canvas from DOM element\n * @param {HTMLElement} element - The element to convert\n * @returns {Promise<HTMLCanvasElement>} The generated canvas\n */\nconst generateCanvas = async (element) => {\n  const canvasOptions = {\n    scale: 2,\n    useCORS: true,\n    logging: false,\n    letterRendering: true,\n    allowTaint: true,\n    backgroundColor: \"#ffffff\",\n    width: element.scrollWidth,\n    height: element.scrollHeight,\n    scrollX: 0,\n    scrollY: 0\n  };\n\n  return await html2canvas(element, canvasOptions);\n};\n\n/**\n * Creates PDF from canvas\n * @param {HTMLCanvasElement} canvas - The canvas element\n * @returns {jsPDF} The PDF object\n */\nconst createPDF = async (canvas) => {\n  const pdf = new jsPDF({\n    orientation: \"portrait\",\n    unit: \"mm\",\n    format: \"a4\",\n    compress: true,\n    precision: 2\n  });\n\n  const imgWidth = 210; // A4 width in mm\n  const imgHeight = (canvas.height * imgWidth) / canvas.width;\n  const pageHeight = 297; // A4 height in mm\n\n  let heightLeft = imgHeight;\n  let position = 0;\n\n  // Add first page\n  pdf.addImage(\n    canvas.toDataURL(\"image/jpeg\", 0.95),\n    \"JPEG\",\n    0,\n    0,\n    imgWidth,\n    imgHeight\n  );\n  heightLeft -= pageHeight;\n\n  // Add additional pages if needed\n  while (heightLeft > 0) {\n    position = heightLeft - imgHeight;\n    pdf.addPage();\n    pdf.addImage(\n      canvas.toDataURL(\"image/jpeg\", 0.95),\n      \"JPEG\",\n      0,\n      position,\n      imgWidth,\n      imgHeight\n    );\n    heightLeft -= pageHeight;\n  }\n\n  return pdf;\n};\n\n/**\n * Saves roadmap metadata (Note: This won't work in Claude artifacts)\n * @param {Array} roadmapData - The roadmap data\n */\nconst saveRoadmapMetadata = (roadmapData) => {\n  try {\n    // Note: localStorage is not available in Claude artifacts\n    // This is kept for when code is used in actual environments\n    const timestamp = Date.now();\n    const roadmapKey = `roadmap-${timestamp}`;\n    const metadata = {\n      id: timestamp,\n      title: \"App Developer Roadmap\",\n      date: new Date().toLocaleDateString(),\n      category: \"App Development\",\n      contentLength: roadmapData.length\n    };\n\n    // In actual implementation, you would use:\n    // localStorage.setItem(roadmapKey, JSON.stringify(metadata));\n    console.log(\"Roadmap metadata prepared:\", metadata);\n  } catch (error) {\n    console.warn(\"Could not save metadata:\", error.message);\n  }\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/APP/app.jsx"],"sourcesContent":["\"use client\";\nimport { useState, useRef, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport roadmapData from './appRoadmap.json';\nimport { downloadRoadmapPDF } from './downloadPdf.js';\nimport VisualRoadmap from './VisualRoadmap'\n\nexport default function Home() {\n  const [openSection, setOpenSection] = useState(null);\n  const [openSections, setOpenSections] = useState(new Set());\n  const [darkMode, setDarkMode] = useState(false);\n  const [downloading, setDownloading] = useState(false);\n  const [isVisualMode, setIsVisualMode] = useState(false);\n  const [youtubeDropdownOpen, setYoutubeDropdownOpen] = useState(false);\n  const sectionRefs = useRef({});\n  const dropdownRef = useRef(null);\n\n  const toggleSections = (id) => {\n    const newOpenSections = new Set(openSections);\n    if (newOpenSections.has(id)) {\n      newOpenSections.delete(id);\n    } else {\n      newOpenSections.add(id);\n    }\n    setOpenSections(newOpenSections);\n  };\n\n  // Toggle dark mode\n \n\n  // Toggle between visual and textual roadmap\n  const toggleRoadmapView = () => {\n    setIsVisualMode(!isVisualMode);\n  };\n  // YouTube course links for different technologies\n  const youtubeCourses = [\n    {\n      name: \"React Native\",\n      icon: \"⚛️\",\n      url: \"https://youtu.be/kGtEax1WQFg?list=PLRAV69dS1uWSjBBJ-egNNOd4mdblt1P4c\"\n    },\n    {\n      name: \"Flutter\",\n      icon: \"🎯\",\n      url: \"https://youtu.be/CzRQ9mnmh44\"\n    },\n    {\n      name: \"Kotlin\",\n      icon: \"🤖\",\n      url: \"https://youtu.be/BxM2DayeOBE\"\n    },\n    {\n      name: \"Swift\",\n      icon: \"🍎\",\n      url: \"https://youtu.be/8Xg7E9shq0U?si=QeqYNnO-4ZsmsACC\"\n    }\n  ];\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setYoutubeDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Toggle section open/close with smooth scrolling\n  const toggleSection = (id) => {\n    if (openSection === id) {\n      setOpenSection(null);\n    } else {\n      setOpenSection(id);\n      // Scroll to section after state update\n      setTimeout(() => {\n        const element = sectionRefs.current[id];\n        if (element) {\n          const navHeight = 80; // Approximate nav height\n          const elementPosition = element.getBoundingClientRect().top + window.pageYOffset;\n          const offsetPosition = elementPosition - navHeight;\n\n          window.scrollTo({\n            top: offsetPosition,\n            behavior: 'smooth'\n          });\n        }\n      }, 100);\n    }\n  };\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // Handle PDF download\n  const handleDownload = async () => {\n    await downloadRoadmapPDF(roadmapData, setDownloading);\n  };\n\n  // Toggle YouTube dropdown\n  const toggleYouTubeDropdown = () => {\n    setYoutubeDropdownOpen(!youtubeDropdownOpen);\n  };\n\n  // Handle YouTube course redirect\n  const handleYouTubeCourseRedirect = (url) => {\n    window.open(url, '_blank');\n    setYoutubeDropdownOpen(false);\n  };\n\n  // Handle AI Guide redirect\n  const handleAIGuideRedirect = () => {\n    window.location.href = '/CareerGuidance';\n  };\n\n  return (\n    <div\n      className={`min-h-screen font-sora relative ${\n        darkMode ? \"dark bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 text-white\" : \"bg-gradient-to-br from-gray-50 via-white to-gray-100 text-gray-900\"\n      }`}\n    >\n      <Head>\n        <title>App Developer</title>\n        <meta\n          name=\"description\"\n          content=\"Complete roadmap for becoming an AI/ML Engineer\"\n        />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"true\" />\n        <link \n          href=\"https://fonts.googleapis.com/css2?family=Sora:wght@300;400;500;600;700;800&display=swap\" \n          rel=\"stylesheet\" \n        />\n      </Head>\n\n      {/* Side Buttons - Fixed Position */}\n      <div className=\"fixed right-4 top-1/2 transform -translate-y-1/2 z-40 flex flex-col gap-4\">\n        {/* YouTube Course Button with Dropdown */}\n        <div className=\"relative\" ref={dropdownRef}>\n          <button\n            onClick={toggleYouTubeDropdown}\n            className={`group relative p-3 sm:p-4 rounded-full shadow-2xl transform transition-all duration-300 hover:scale-110 active:scale-95 ${\n              darkMode \n                ? \"bg-gradient-to-r from-red-600 to-red-700 hover:from-red-500 hover:to-red-600\" \n                : \"bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700\"\n            } text-white ${youtubeDropdownOpen ? 'scale-110 ring-4 ring-red-300/50' : ''}`}\n            title=\"YouTube Courses\"\n          >\n            {/* YouTube Icon */}\n            <svg \n              className={`w-6 h-6 sm:w-7 sm:h-7 transition-transform duration-300 ${youtubeDropdownOpen ? 'rotate-12' : ''}`} \n              viewBox=\"0 0 24 24\" \n              fill=\"currentColor\"\n            >\n              <path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"/>\n            </svg>\n\n            {/* Main Tooltip (shown when dropdown is closed) */}\n            {!youtubeDropdownOpen && (\n              <div className={`absolute right-full mr-3 top-1/2 transform -translate-y-1/2 px-3 py-2 rounded-lg text-sm font-medium whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none ${\n                darkMode ? \"bg-gray-800 text-white border border-gray-700\" : \"bg-white text-gray-900 border border-gray-200 shadow-lg\"\n              }`}>\n                YouTube Courses\n                <div className={`absolute left-full top-1/2 transform -translate-y-1/2 w-0 h-0 border-l-4 border-r-0 border-t-4 border-b-4 border-transparent ${\n                  darkMode ? \"border-l-gray-800\" : \"border-l-white\"\n                }`}></div>\n              </div>\n            )}\n          </button>\n\n          {/* Animated Dropdown Menu */}\n          <div className={`absolute right-full mr-3 top-1/2 transform -translate-y-1/2 transition-all duration-300 ease-out ${\n            youtubeDropdownOpen \n              ? 'opacity-100 scale-100 translate-x-0' \n              : 'opacity-0 scale-95 translate-x-2 pointer-events-none'\n          }`}>\n            <div className={`${\n              darkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-200\"\n            } border rounded-xl shadow-2xl backdrop-blur-lg p-2 min-w-[200px]`}>\n              {/* Dropdown Header */}\n              <div className=\"px-3 py-2 border-b border-gray-200 dark:border-gray-700\">\n                <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300\">\n                  Choose Technology\n                </h3>\n              </div>\n\n              {/* Course Options */}\n              <div className=\"py-1\">\n                {youtubeCourses.map((course, index) => (\n                  <button\n                    key={course.name}\n                    onClick={() => handleYouTubeCourseRedirect(course.url)}\n                    className={`w-full px-3 py-3 text-left flex items-center gap-3 rounded-lg transition-all duration-200 transform hover:scale-105 ${\n                      darkMode \n                        ? \"hover:bg-gray-700 text-gray-200 hover:text-white\" \n                        : \"hover:bg-gray-50 text-gray-700 hover:text-gray-900\"\n                    } group animate-fadeInUp`}\n                    style={{\n                      animationDelay: `${index * 50}ms`,\n                      animationFillMode: 'both'\n                    }}\n                  >\n                    <span className=\"text-lg\">{course.icon}</span>\n                    <span className=\"font-medium text-sm flex-1\">{course.name}</span>\n                    <svg \n                      className=\"w-4 h-4 opacity-50 group-hover:opacity-100 transform group-hover:translate-x-1 transition-all duration-200\" \n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path \n                        strokeLinecap=\"round\" \n                        strokeLinejoin=\"round\" \n                        strokeWidth={2} \n                        d=\"M17 8l4 4m0 0l-4 4m4-4H3\" \n                      />\n                    </svg>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Arrow pointer */}\n            <div className={`absolute left-full top-1/2 transform -translate-y-1/2 w-0 h-0 border-l-8 border-r-0 border-t-8 border-b-8 border-transparent ${\n              darkMode ? \"border-l-gray-800\" : \"border-l-white\"\n            }`}></div>\n          </div>\n        </div>\n\n        {/* AI Guide Button */}\n        <button\n          onClick={handleAIGuideRedirect}\n          className={`group relative p-3 sm:p-4 rounded-full shadow-2xl transform transition-all duration-300 hover:scale-110 active:scale-95 ${\n            darkMode \n              ? \"bg-gradient-to-r from-purple-600 to-indigo-700 hover:from-purple-500 hover:to-indigo-600\" \n              : \"bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700\"\n          } text-white`}\n          title=\"AI Career Guidance\"\n        >\n          {/* AI Guide Icon */}\n          <svg \n            className=\"w-6 h-6 sm:w-7 sm:h-7\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" \n            />\n          </svg>\n\n          {/* Tooltip */}\n          <div className={`absolute right-full mr-3 top-1/2 transform -translate-y-1/2 px-3 py-2 rounded-lg text-sm font-medium whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none ${\n            darkMode ? \"bg-gray-800 text-white border border-gray-700\" : \"bg-white text-gray-900 border border-gray-200 shadow-lg\"\n          }`}>\n            AI Career Guide\n            <div className={`absolute left-full top-1/2 transform -translate-y-1/2 w-0 h-0 border-l-4 border-r-0 border-t-4 border-b-4 border-transparent ${\n              darkMode ? \"border-l-gray-800\" : \"border-l-white\"\n            }`}></div>\n          </div>\n        </button>\n      </div>\n\n      {/* Sticky Navigation Bar */}\n      <nav\n        className={`sticky top-0 z-50 backdrop-blur-lg ${\n          darkMode ? \"bg-gray-900/90 border-gray-700/50\" : \"bg-white/90 border-gray-200/50\"\n        } border-b shadow-xl px-3 sm:px-4 md:px-6 py-3 sm:py-4 md:py-5 flex flex-col sm:flex-row justify-between items-center gap-4 sm:gap-0 transition-all duration-300`}\n      >\n        <h1 className=\"text-lg sm:text-xl md:text-2xl lg:text-3xl font-bold tracking-tight text-center sm:text-left\">\n          <span className=\"bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 bg-clip-text text-transparent\">\n           App Developer\n          </span>\n          <span className={`ml-2 ${darkMode ? \"text-gray-200\" : \"text-gray-800\"}`}>\n            Roadmap\n          </span>\n        </h1>\n        <div className=\"flex items-center space-x-2 sm:space-x-3 md:space-x-4\">\n          {/* Roadmap View Toggle */}\n          <div className=\"flex items-center bg-gray-200 dark:bg-gray-700 rounded-full p-1\">\n            <button\n              onClick={() => setIsVisualMode(false)}\n              className={`flex items-center px-3 py-1 rounded-full transition-all ${\n                !isVisualMode\n                  ? \"bg-white dark:bg-gray-900 shadow text-blue-600 dark:text-blue-400\"\n                  : \"text-gray-600 dark:text-gray-300 hover:text-blue-500\"\n              }`}\n              title=\"Switch to Textual Roadmap\"\n            >\n              <svg\n                className=\"w-4 h-4 mr-1\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n              <span className=\"text-sm font-medium hidden sm:inline\">Textual</span>\n            </button>\n\n            <button\n              onClick={() => setIsVisualMode(true)}\n              className={`flex items-center px-3 py-1 rounded-full transition-all ${\n                isVisualMode\n                  ? \"bg-white dark:bg-gray-900 shadow text-purple-600 dark:text-purple-400\"\n                  : \"text-gray-600 dark:text-gray-300 hover:text-purple-500\"\n              }`}\n              title=\"Switch to Visual Roadmap\"\n            >\n              <svg\n                className=\"w-4 h-4 mr-1\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                viewBox=\"0 0 24 24\"\n              >\n                <circle cx=\"12\" cy=\"12\" r=\"3\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.458 12C3.732 7.94 7.523 5 12 5s8.268 2.94 9.542 7c-1.274 4.06-5.064 7-9.542 7s-8.268-2.94-9.542-7z\" />\n              </svg>\n              <span className=\"text-sm font-medium hidden sm:inline\">Visual</span>\n            </button>\n          </div>\n          {/* Download Button */}\n          <button\n            onClick={handleDownload}\n            disabled={downloading}\n            className={`px-3 sm:px-4 md:px-6 py-2 sm:py-2.5 md:py-3 rounded-xl font-medium text-xs sm:text-sm tracking-wide text-white shadow-lg transform transition-all duration-200 ${\n              downloading \n                ? \"bg-gray-500 cursor-not-allowed scale-95\" \n                : \"bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 hover:shadow-xl hover:scale-105 active:scale-95\"\n            } flex items-center`}\n          >\n            {downloading ? (\n              <>\n                <svg \n                  className=\"animate-spin -ml-1 mr-2 sm:mr-3 h-3 w-3 sm:h-4 sm:w-4 text-white\" \n                  xmlns=\"http://www.w3.org/2000/svg\" \n                  fill=\"none\" \n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle \n                    className=\"opacity-25\" \n                    cx=\"12\" \n                    cy=\"12\" \n                    r=\"10\" \n                    stroke=\"currentColor\" \n                    strokeWidth=\"4\"\n                  ></circle>\n                  <path \n                    className=\"opacity-75\" \n                    fill=\"currentColor\" \n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  ></path>\n                </svg>\n                <span className=\"font-medium hidden sm:inline\">Generating PDF...</span>\n                <span className=\"font-medium sm:hidden\">PDF...</span>\n              </>\n            ) : (\n              <>\n                <svg \n                  className=\"w-3 h-3 sm:w-4 sm:h-4 mr-2 sm:mr-3\" \n                  fill=\"none\" \n                  stroke=\"currentColor\" \n                  viewBox=\"0 0 24 24\"\n                >\n                  <path \n                    strokeLinecap=\"round\" \n                    strokeLinejoin=\"round\" \n                    strokeWidth={2} \n                    d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" \n                  />\n                </svg>\n                <span className=\"font-medium hidden sm:inline\">Download PDF</span>\n                <span className=\"font-medium sm:hidden\">PDF</span>\n              </>\n            )}\n          </button>\n\n          {/* Dark Mode Toggle */}\n          <button\n            onClick={toggleDarkMode}\n            className={`p-2 sm:p-2.5 md:p-3 rounded-xl shadow-lg transform transition-all duration-200 hover:scale-105 active:scale-95 ${\n              darkMode \n                ? \"bg-gradient-to-r from-yellow-400 to-orange-500 text-gray-900 hover:from-yellow-300 hover:to-orange-400\" \n                : \"bg-gradient-to-r from-gray-700 to-gray-800 text-white hover:from-gray-600 hover:to-gray-700\"\n            }`}\n          >\n            {darkMode ? (\n              <svg className=\"w-4 h-4 sm:w-5 sm:h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path \n                  fillRule=\"evenodd\" \n                  d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\" \n                  clipRule=\"evenodd\" \n                />\n              </svg>\n            ) : (\n              <svg className=\"w-4 h-4 sm:w-5 sm:h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n              </svg>\n            )}\n          </button>\n        </div>\n      </nav>\n\n      {/* Main Content */}\n      <main className=\"container mx-auto px-3 sm:px-4 md:px-6 py-6 sm:py-8 md:py-12 max-w-7xl\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-8 sm:mb-12 md:mb-16\">\n      \n        \n          <p className={`text-base sm:text-lg md:text-xl lg:text-2xl font-light leading-relaxed ${darkMode ? \"text-gray-300\" : \"text-gray-600\"} max-w-4xl mx-auto px-4`}>\n            A comprehensive guide to becoming an App Developer with step-by-step learning path, \n            courses, tools, and project ideas.\n          </p>\n          <div className=\"mt-6 sm:mt-8 flex justify-center\">\n            <div className={`h-1 w-16 sm:w-20 md:w-24 rounded-full bg-gradient-to-r from-blue-600 to-purple-600`}></div>\n          </div>\n        </div>\n\n        {isVisualMode ? (\n          /* Visual Roadmap */\n          <div className=\"transition-all duration-500 ease-in-out\">\n            <VisualRoadmap \n              roadmapData={roadmapData} \n              darkMode={darkMode} \n            />\n          </div>\n        ) : ( \n        <div className=\"space-y-4 sm:space-y-6 md:space-y-8\">\n          {roadmapData.map((section) => (\n            <div\n              key={section.id}\n              ref={(el) => (sectionRefs.current[section.id] = el)}\n              className={`${\n                darkMode ? \"bg-gray-800/50 border-gray-700/50\" : \"bg-white/70 border-gray-200/50\"\n              } backdrop-blur-sm rounded-xl sm:rounded-2xl shadow-xl border overflow-hidden transition-all duration-500 hover:shadow-2xl ${\n                openSection === section.id ? 'ring-2 ring-blue-500/20' : ''\n              }`}\n            >\n              {/* Section Header */}\n              <button\n                onClick={() => toggleSection(section.id)}\n                className={`w-full p-4 sm:p-6 md:p-8 text-left flex justify-between items-center ${\n                  darkMode ? \"hover:bg-gray-700/30\" : \"hover:bg-gray-50/50\"\n                } transition-all duration-200 group`}\n              >\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center mb-2 sm:mb-3\">\n                    <span className=\"inline-flex items-center justify-center w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8 rounded-full bg-gradient-to-r from-blue-600 to-purple-600 text-white text-xs sm:text-sm font-bold mr-3 sm:mr-4 flex-shrink-0\">\n                      {section.id}\n                    </span>\n                    <h3 className=\"text-lg sm:text-xl md:text-2xl lg:text-3xl font-bold tracking-tight group-hover:text-blue-600 transition-colors truncate\">\n                      {section.title}\n                    </h3>\n                  </div>\n                  <p className={`text-sm sm:text-base md:text-lg font-light leading-relaxed ${darkMode ? \"text-gray-300\" : \"text-gray-600\"} ml-9 sm:ml-11 md:ml-12 pr-4`}>\n                    {section.description}\n                  </p>\n                </div>\n                <div className=\"ml-4 sm:ml-6 transform transition-transform duration-200 group-hover:scale-110 flex-shrink-0\">\n                  {openSection === section.id ? (\n                    <svg className=\"w-5 h-5 sm:w-6 sm:h-6 md:w-7 md:h-7 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2.5} d=\"M5 15l7-7 7 7\" />\n                    </svg>\n                  ) : (\n                    <svg className=\"w-5 h-5 sm:w-6 sm:h-6 md:w-7 md:h-7\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2.5} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  )}\n                </div>\n              </button>\n\n              {/* Section Content */}\n              {openSection === section.id && (\n                <div className={`px-4 sm:px-6 md:px-8 pb-4 sm:pb-6 md:pb-8 ${darkMode ? \"border-gray-700/50\" : \"border-gray-200/50\"} border-t`}>\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6 md:gap-8 mt-4 sm:mt-6 md:mt-8\">\n                    {/* What to Learn */}\n                    <div className={`p-4 sm:p-5 md:p-6 rounded-xl ${darkMode ? \"bg-green-900/20 border-green-500/20\" : \"bg-green-50/80 border-green-200/50\"} border order-1`}>\n                      <h4 className=\"text-lg sm:text-xl font-bold mb-3 sm:mb-4 text-green-600 flex items-center\">\n                        <span className=\"text-xl sm:text-2xl mr-2 sm:mr-3\">✅</span>\n                        What to Learn\n                      </h4>\n                      <ul className=\"space-y-2 sm:space-y-3\">\n                        {section.content.whatToLearn.map((item, index) => (\n                          <li key={index} className={`${darkMode ? \"text-gray-200\" : \"text-gray-700\"} flex items-start text-sm sm:text-base leading-relaxed`}>\n                            <span className=\"text-green-500 mr-2 sm:mr-3 mt-1 text-base sm:text-lg flex-shrink-0\">•</span>\n                            <span className=\"font-medium\">{item}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n\n                    {/* Tools to Use */}\n                    <div className={`p-4 sm:p-5 md:p-6 rounded-xl ${darkMode ? \"bg-orange-900/20 border-orange-500/20\" : \"bg-orange-50/80 border-orange-200/50\"} border order-2`}>\n                      <h4 className=\"text-lg sm:text-xl font-bold mb-3 sm:mb-4 text-orange-600 flex items-center\">\n                        <span className=\"text-xl sm:text-2xl mr-2 sm:mr-3\">🧰</span>\n                        Tools to Use\n                      </h4>\n                      <ul className=\"space-y-2 sm:space-y-3\">\n                        {section.content.toolsToUse.map((tool, index) => (\n                          <li key={index} className={`${darkMode ? \"text-gray-200\" : \"text-gray-700\"} flex items-start text-sm sm:text-base leading-relaxed`}>\n                            <span className=\"text-orange-500 mr-2 sm:mr-3 mt-1 text-base sm:text-lg flex-shrink-0\">•</span>\n                            <span className=\"font-medium\">{tool}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n\n                    {/* Best Courses */}\n                    <div className={`p-4 sm:p-5 md:p-6 rounded-xl ${darkMode ? \"bg-blue-900/20 border-blue-500/20\" : \"bg-blue-50/80 border-blue-200/50\"} border order-3 lg:order-3`}>\n                      <h4 className=\"text-lg sm:text-xl font-bold mb-3 sm:mb-4 text-blue-600 flex items-center\">\n                        <span className=\"text-xl sm:text-2xl mr-2 sm:mr-3\">📚</span>\n                        Best Courses\n                      </h4>\n                      <div className=\"space-y-4 sm:space-y-5\">\n                        <div>\n                          <h5 className=\"font-bold mb-2 sm:mb-3 text-base sm:text-lg\">In English:</h5>\n                          <ul className=\"space-y-1.5 sm:space-y-2\">\n                            {section.content.bestCourses.english.map((course, index) => (\n                              <li key={index} className={`text-xs sm:text-sm ${darkMode ? \"text-gray-300\" : \"text-gray-600\"} flex items-start leading-relaxed`}>\n                                <span className=\"text-blue-500 mr-2 sm:mr-3 mt-1 flex-shrink-0\">•</span>\n                                <span className=\"font-medium\">{course}</span>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                        <div>\n                          <h5 className=\"font-bold mb-2 sm:mb-3 text-base sm:text-lg\">In Hindi:</h5>\n                          <ul className=\"space-y-1.5 sm:space-y-2\">\n                            {section.content.bestCourses.hindi.map((course, index) => (\n                              <li key={index} className={`text-xs sm:text-sm ${darkMode ? \"text-gray-300\" : \"text-gray-600\"} flex items-start leading-relaxed`}>\n                                <span className=\"text-blue-500 mr-2 sm:mr-3 mt-1 flex-shrink-0\">•</span>\n                                <span className=\"font-medium\">{course}</span>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Docs & Websites */}\n                    <div className={`p-4 sm:p-5 md:p-6 rounded-xl ${darkMode ? \"bg-red-900/20 border-red-500/20\" : \"bg-red-50/80 border-red-200/50\"} border order-4`}>\n                      <h4 className=\"text-lg sm:text-xl font-bold mb-3 sm:mb-4 text-red-600 flex items-center\">\n                        <span className=\"text-xl sm:text-2xl mr-2 sm:mr-3\">📘</span>\n                        Docs & Websites\n                      </h4>\n                      <ul className=\"space-y-2 sm:space-y-3\">\n                        {section.content.docsAndWebsites.map((doc, index) => (\n                          <li key={index} className={`${darkMode ? \"text-gray-200\" : \"text-gray-700\"} flex items-start text-sm sm:text-base leading-relaxed`}>\n                            <span className=\"text-red-500 mr-2 sm:mr-3 mt-1 text-base sm:text-lg flex-shrink-0\">•</span>\n                            <span className=\"font-medium\">{doc}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n\n                  {/* Project Ideas */}\n                  <div className=\"mt-6 sm:mt-8\">\n                    <h4 className=\"text-xl sm:text-2xl font-bold mb-4 sm:mb-6 text-purple-600 flex items-center\">\n                      <span className=\"text-2xl sm:text-3xl mr-3 sm:mr-4\">💡</span>\n                      Project Ideas\n                    </h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\n                      {section.content.projectIdeas.map((project, index) => (\n                        <div key={index} className={`p-4 sm:p-5 md:p-6 rounded-xl ${darkMode ? \"bg-purple-900/20 border-purple-500/20\" : \"bg-purple-50/80 border-purple-200/50\"} border transition-all duration-200 hover:shadow-lg hover:scale-105`}>\n                          <div className=\"flex items-start\">\n                            <span className=\"text-purple-500 mr-3 sm:mr-4 mt-1 text-lg sm:text-xl flex-shrink-0\">💡</span>\n                            <span className={`${darkMode ? \"text-gray-200\" : \"text-gray-700\"} font-medium text-sm sm:text-base leading-relaxed`}>\n                              {project}\n                            </span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        \n       )}\n        \n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;;;;AAJA;;;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAI;IACrD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE,CAAC;IAC5B,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAE3B,MAAM,iBAAiB,CAAC;QACtB,MAAM,kBAAkB,IAAI,IAAI;QAChC,IAAI,gBAAgB,GAAG,CAAC,KAAK;YAC3B,gBAAgB,MAAM,CAAC;QACzB,OAAO;YACL,gBAAgB,GAAG,CAAC;QACtB;QACA,gBAAgB;IAClB;IAEA,mBAAmB;IAGnB,4CAA4C;IAC5C,MAAM,oBAAoB;QACxB,gBAAgB,CAAC;IACnB;IACA,kDAAkD;IAClD,MAAM,iBAAiB;QACrB;YACE,MAAM;YACN,MAAM;YACN,KAAK;QACP;QACA;YACE,MAAM;YACN,MAAM;YACN,KAAK;QACP;QACA;YACE,MAAM;YACN,MAAM;YACN,KAAK;QACP;QACA;YACE,MAAM;YACN,MAAM;YACN,KAAK;QACP;KACD;IAED,uCAAuC;IACvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,qBAAqB,CAAC;YAC1B,IAAI,YAAY,OAAO,IAAI,CAAC,YAAY,OAAO,CAAC,QAAQ,CAAC,MAAM,MAAM,GAAG;gBACtE,uBAAuB;YACzB;QACF;QAEA,SAAS,gBAAgB,CAAC,aAAa;QACvC,OAAO;YACL,SAAS,mBAAmB,CAAC,aAAa;QAC5C;IACF,GAAG,EAAE;IAEL,kDAAkD;IAClD,MAAM,gBAAgB,CAAC;QACrB,IAAI,gBAAgB,IAAI;YACtB,eAAe;QACjB,OAAO;YACL,eAAe;YACf,uCAAuC;YACvC,WAAW;gBACT,MAAM,UAAU,YAAY,OAAO,CAAC,GAAG;gBACvC,IAAI,SAAS;oBACX,MAAM,YAAY,IAAI,yBAAyB;oBAC/C,MAAM,kBAAkB,QAAQ,qBAAqB,GAAG,GAAG,GAAG,OAAO,WAAW;oBAChF,MAAM,iBAAiB,kBAAkB;oBAEzC,OAAO,QAAQ,CAAC;wBACd,KAAK;wBACL,UAAU;oBACZ;gBACF;YACF,GAAG;QACL;IACF;IAEA,mBAAmB;IACnB,MAAM,iBAAiB;QACrB,YAAY,CAAC;IACf;IAEA,sBAAsB;IACtB,MAAM,iBAAiB;QACrB,MAAM,CAAA,GAAA,qIAAA,CAAA,qBAAkB,AAAD,EAAE,4GAAA,CAAA,UAAW,EAAE;IACxC;IAEA,0BAA0B;IAC1B,MAAM,wBAAwB;QAC5B,uBAAuB,CAAC;IAC1B;IAEA,iCAAiC;IACjC,MAAM,8BAA8B,CAAC;QACnC,OAAO,IAAI,CAAC,KAAK;QACjB,uBAAuB;IACzB;IAEA,2BAA2B;IAC3B,MAAM,wBAAwB;QAC5B,OAAO,QAAQ,CAAC,IAAI,GAAG;IACzB;IAEA,qBACE,8OAAC;QACC,WAAW,CAAC,gCAAgC,EAC1C,WAAW,6EAA6E,sEACxF;;0BAEF,8OAAC,oKAAA,CAAA,UAAI;;kCACH,8OAAC;kCAAM;;;;;;kCACP,8OAAC;wBACC,MAAK;wBACL,SAAQ;;;;;;kCAEV,8OAAC;wBAAK,MAAK;wBAAW,SAAQ;;;;;;kCAC9B,8OAAC;wBAAK,KAAI;wBAAO,MAAK;;;;;;kCACtB,8OAAC;wBAAK,KAAI;wBAAa,MAAK;;;;;;kCAC5B,8OAAC;wBAAK,KAAI;wBAAa,MAAK;wBAA4B,aAAY;;;;;;kCACpE,8OAAC;wBACC,MAAK;wBACL,KAAI;;;;;;;;;;;;0BAKR,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;wBAAW,KAAK;;0CAC7B,8OAAC;gCACC,SAAS;gCACT,WAAW,CAAC,wHAAwH,EAClI,WACI,iFACA,+EACL,YAAY,EAAE,sBAAsB,qCAAqC,IAAI;gCAC9E,OAAM;;kDAGN,8OAAC;wCACC,WAAW,CAAC,wDAAwD,EAAE,sBAAsB,cAAc,IAAI;wCAC9G,SAAQ;wCACR,MAAK;kDAEL,cAAA,8OAAC;4CAAK,GAAE;;;;;;;;;;;oCAIT,CAAC,qCACA,8OAAC;wCAAI,WAAW,CAAC,6MAA6M,EAC5N,WAAW,kDAAkD,2DAC7D;;4CAAE;0DAEF,8OAAC;gDAAI,WAAW,CAAC,6HAA6H,EAC5I,WAAW,sBAAsB,kBACjC;;;;;;;;;;;;;;;;;;0CAMR,8OAAC;gCAAI,WAAW,CAAC,iGAAiG,EAChH,sBACI,wCACA,wDACJ;;kDACA,8OAAC;wCAAI,WAAW,GACd,WAAW,gCAAgC,2BAC5C,gEAAgE,CAAC;;0DAEhE,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAG,WAAU;8DAAyD;;;;;;;;;;;0DAMzE,8OAAC;gDAAI,WAAU;0DACZ,eAAe,GAAG,CAAC,CAAC,QAAQ,sBAC3B,8OAAC;wDAEC,SAAS,IAAM,4BAA4B,OAAO,GAAG;wDACrD,WAAW,CAAC,oHAAoH,EAC9H,WACI,qDACA,qDACL,uBAAuB,CAAC;wDACzB,OAAO;4DACL,gBAAgB,GAAG,QAAQ,GAAG,EAAE,CAAC;4DACjC,mBAAmB;wDACrB;;0EAEA,8OAAC;gEAAK,WAAU;0EAAW,OAAO,IAAI;;;;;;0EACtC,8OAAC;gEAAK,WAAU;0EAA8B,OAAO,IAAI;;;;;;0EACzD,8OAAC;gEACC,WAAU;gEACV,MAAK;gEACL,QAAO;gEACP,SAAQ;0EAER,cAAA,8OAAC;oEACC,eAAc;oEACd,gBAAe;oEACf,aAAa;oEACb,GAAE;;;;;;;;;;;;uDAxBD,OAAO,IAAI;;;;;;;;;;;;;;;;kDAiCxB,8OAAC;wCAAI,WAAW,CAAC,6HAA6H,EAC5I,WAAW,sBAAsB,kBACjC;;;;;;;;;;;;;;;;;;kCAKN,8OAAC;wBACC,SAAS;wBACT,WAAW,CAAC,wHAAwH,EAClI,WACI,6FACA,2FACL,WAAW,CAAC;wBACb,OAAM;;0CAGN,8OAAC;gCACC,WAAU;gCACV,MAAK;gCACL,QAAO;gCACP,SAAQ;0CAER,cAAA,8OAAC;oCACC,eAAc;oCACd,gBAAe;oCACf,aAAa;oCACb,GAAE;;;;;;;;;;;0CAKN,8OAAC;gCAAI,WAAW,CAAC,6MAA6M,EAC5N,WAAW,kDAAkD,2DAC7D;;oCAAE;kDAEF,8OAAC;wCAAI,WAAW,CAAC,6HAA6H,EAC5I,WAAW,sBAAsB,kBACjC;;;;;;;;;;;;;;;;;;;;;;;;0BAMR,8OAAC;gBACC,WAAW,CAAC,mCAAmC,EAC7C,WAAW,sCAAsC,iCAClD,+JAA+J,CAAC;;kCAEjK,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC;gCAAK,WAAU;0CAA4F;;;;;;0CAG5G,8OAAC;gCAAK,WAAW,CAAC,KAAK,EAAE,WAAW,kBAAkB,iBAAiB;0CAAE;;;;;;;;;;;;kCAI3E,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS,IAAM,gBAAgB;wCAC/B,WAAW,CAAC,wDAAwD,EAClE,CAAC,eACG,sEACA,wDACJ;wCACF,OAAM;;0DAEN,8OAAC;gDACC,WAAU;gDACV,MAAK;gDACL,QAAO;gDACP,aAAa;gDACb,SAAQ;0DAER,cAAA,8OAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,GAAE;;;;;;;;;;;0DAEvD,8OAAC;gDAAK,WAAU;0DAAuC;;;;;;;;;;;;kDAGzD,8OAAC;wCACC,SAAS,IAAM,gBAAgB;wCAC/B,WAAW,CAAC,wDAAwD,EAClE,eACI,0EACA,0DACJ;wCACF,OAAM;;0DAEN,8OAAC;gDACC,WAAU;gDACV,MAAK;gDACL,QAAO;gDACP,aAAa;gDACb,SAAQ;;kEAER,8OAAC;wDAAO,IAAG;wDAAK,IAAG;wDAAK,GAAE;;;;;;kEAC1B,8OAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,GAAE;;;;;;;;;;;;0DAEvD,8OAAC;gDAAK,WAAU;0DAAuC;;;;;;;;;;;;;;;;;;0CAI3D,8OAAC;gCACC,SAAS;gCACT,UAAU;gCACV,WAAW,CAAC,+JAA+J,EACzK,cACI,4CACA,uIACL,kBAAkB,CAAC;0CAEnB,4BACC;;sDACE,8OAAC;4CACC,WAAU;4CACV,OAAM;4CACN,MAAK;4CACL,SAAQ;;8DAER,8OAAC;oDACC,WAAU;oDACV,IAAG;oDACH,IAAG;oDACH,GAAE;oDACF,QAAO;oDACP,aAAY;;;;;;8DAEd,8OAAC;oDACC,WAAU;oDACV,MAAK;oDACL,GAAE;;;;;;;;;;;;sDAGN,8OAAC;4CAAK,WAAU;sDAA+B;;;;;;sDAC/C,8OAAC;4CAAK,WAAU;sDAAwB;;;;;;;iEAG1C;;sDACE,8OAAC;4CACC,WAAU;4CACV,MAAK;4CACL,QAAO;4CACP,SAAQ;sDAER,cAAA,8OAAC;gDACC,eAAc;gDACd,gBAAe;gDACf,aAAa;gDACb,GAAE;;;;;;;;;;;sDAGN,8OAAC;4CAAK,WAAU;sDAA+B;;;;;;sDAC/C,8OAAC;4CAAK,WAAU;sDAAwB;;;;;;;;;;;;;0CAM9C,8OAAC;gCACC,SAAS;gCACT,WAAW,CAAC,+GAA+G,EACzH,WACI,2GACA,+FACJ;0CAED,yBACC,8OAAC;oCAAI,WAAU;oCAAwB,MAAK;oCAAe,SAAQ;8CACjE,cAAA,8OAAC;wCACC,UAAS;wCACT,GAAE;wCACF,UAAS;;;;;;;;;;yDAIb,8OAAC;oCAAI,WAAU;oCAAwB,MAAK;oCAAe,SAAQ;8CACjE,cAAA,8OAAC;wCAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQlB,8OAAC;gBAAK,WAAU;;kCAEd,8OAAC;wBAAI,WAAU;;0CAGb,8OAAC;gCAAE,WAAW,CAAC,uEAAuE,EAAE,WAAW,kBAAkB,gBAAgB,uBAAuB,CAAC;0CAAE;;;;;;0CAI/J,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAW,CAAC,kFAAkF,CAAC;;;;;;;;;;;;;;;;;oBAIvG,eACC,kBAAkB,iBAClB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,aAAa,4GAAA,CAAA,UAAW;4BACxB,UAAU;;;;;;;;;;6CAIhB,8OAAC;wBAAI,WAAU;kCACZ,4GAAA,CAAA,UAAW,CAAC,GAAG,CAAC,CAAC,wBAChB,8OAAC;gCAEC,KAAK,CAAC,KAAQ,YAAY,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG;gCAChD,WAAW,GACT,WAAW,sCAAsC,iCAClD,0HAA0H,EACzH,gBAAgB,QAAQ,EAAE,GAAG,4BAA4B,IACzD;;kDAGF,8OAAC;wCACC,SAAS,IAAM,cAAc,QAAQ,EAAE;wCACvC,WAAW,CAAC,qEAAqE,EAC/E,WAAW,yBAAyB,sBACrC,kCAAkC,CAAC;;0DAEpC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAK,WAAU;0EACb,QAAQ,EAAE;;;;;;0EAEb,8OAAC;gEAAG,WAAU;0EACX,QAAQ,KAAK;;;;;;;;;;;;kEAGlB,8OAAC;wDAAE,WAAW,CAAC,2DAA2D,EAAE,WAAW,kBAAkB,gBAAgB,4BAA4B,CAAC;kEACnJ,QAAQ,WAAW;;;;;;;;;;;;0DAGxB,8OAAC;gDAAI,WAAU;0DACZ,gBAAgB,QAAQ,EAAE,iBACzB,8OAAC;oDAAI,WAAU;oDAAoD,MAAK;oDAAO,QAAO;oDAAe,SAAQ;8DAC3G,cAAA,8OAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAK,GAAE;;;;;;;;;;yEAGzE,8OAAC;oDAAI,WAAU;oDAAsC,MAAK;oDAAO,QAAO;oDAAe,SAAQ;8DAC7F,cAAA,8OAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;oCAO9E,gBAAgB,QAAQ,EAAE,kBACzB,8OAAC;wCAAI,WAAW,CAAC,0CAA0C,EAAE,WAAW,uBAAuB,qBAAqB,SAAS,CAAC;;0DAC5H,8OAAC;gDAAI,WAAU;;kEAEb,8OAAC;wDAAI,WAAW,CAAC,6BAA6B,EAAE,WAAW,wCAAwC,qCAAqC,eAAe,CAAC;;0EACtJ,8OAAC;gEAAG,WAAU;;kFACZ,8OAAC;wEAAK,WAAU;kFAAmC;;;;;;oEAAQ;;;;;;;0EAG7D,8OAAC;gEAAG,WAAU;0EACX,QAAQ,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,sBACtC,8OAAC;wEAAe,WAAW,GAAG,WAAW,kBAAkB,gBAAgB,sDAAsD,CAAC;;0FAChI,8OAAC;gFAAK,WAAU;0FAAsE;;;;;;0FACtF,8OAAC;gFAAK,WAAU;0FAAe;;;;;;;uEAFxB;;;;;;;;;;;;;;;;kEASf,8OAAC;wDAAI,WAAW,CAAC,6BAA6B,EAAE,WAAW,0CAA0C,uCAAuC,eAAe,CAAC;;0EAC1J,8OAAC;gEAAG,WAAU;;kFACZ,8OAAC;wEAAK,WAAU;kFAAmC;;;;;;oEAAS;;;;;;;0EAG9D,8OAAC;gEAAG,WAAU;0EACX,QAAQ,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,sBACrC,8OAAC;wEAAe,WAAW,GAAG,WAAW,kBAAkB,gBAAgB,sDAAsD,CAAC;;0FAChI,8OAAC;gFAAK,WAAU;0FAAuE;;;;;;0FACvF,8OAAC;gFAAK,WAAU;0FAAe;;;;;;;uEAFxB;;;;;;;;;;;;;;;;kEASf,8OAAC;wDAAI,WAAW,CAAC,6BAA6B,EAAE,WAAW,sCAAsC,mCAAmC,0BAA0B,CAAC;;0EAC7J,8OAAC;gEAAG,WAAU;;kFACZ,8OAAC;wEAAK,WAAU;kFAAmC;;;;;;oEAAS;;;;;;;0EAG9D,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;;0FACC,8OAAC;gFAAG,WAAU;0FAA8C;;;;;;0FAC5D,8OAAC;gFAAG,WAAU;0FACX,QAAQ,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,sBAChD,8OAAC;wFAAe,WAAW,CAAC,mBAAmB,EAAE,WAAW,kBAAkB,gBAAgB,iCAAiC,CAAC;;0GAC9H,8OAAC;gGAAK,WAAU;0GAAgD;;;;;;0GAChE,8OAAC;gGAAK,WAAU;0GAAe;;;;;;;uFAFxB;;;;;;;;;;;;;;;;kFAOf,8OAAC;;0FACC,8OAAC;gFAAG,WAAU;0FAA8C;;;;;;0FAC5D,8OAAC;gFAAG,WAAU;0FACX,QAAQ,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,sBAC9C,8OAAC;wFAAe,WAAW,CAAC,mBAAmB,EAAE,WAAW,kBAAkB,gBAAgB,iCAAiC,CAAC;;0GAC9H,8OAAC;gGAAK,WAAU;0GAAgD;;;;;;0GAChE,8OAAC;gGAAK,WAAU;0GAAe;;;;;;;uFAFxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kEAWnB,8OAAC;wDAAI,WAAW,CAAC,6BAA6B,EAAE,WAAW,oCAAoC,iCAAiC,eAAe,CAAC;;0EAC9I,8OAAC;gEAAG,WAAU;;kFACZ,8OAAC;wEAAK,WAAU;kFAAmC;;;;;;oEAAS;;;;;;;0EAG9D,8OAAC;gEAAG,WAAU;0EACX,QAAQ,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,KAAK,sBACzC,8OAAC;wEAAe,WAAW,GAAG,WAAW,kBAAkB,gBAAgB,sDAAsD,CAAC;;0FAChI,8OAAC;gFAAK,WAAU;0FAAoE;;;;;;0FACpF,8OAAC;gFAAK,WAAU;0FAAe;;;;;;;uEAFxB;;;;;;;;;;;;;;;;;;;;;;0DAUjB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;;0EACZ,8OAAC;gEAAK,WAAU;0EAAoC;;;;;;4DAAS;;;;;;;kEAG/D,8OAAC;wDAAI,WAAU;kEACZ,QAAQ,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,sBAC1C,8OAAC;gEAAgB,WAAW,CAAC,6BAA6B,EAAE,WAAW,0CAA0C,uCAAuC,mEAAmE,CAAC;0EAC1N,cAAA,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAK,WAAU;sFAAqE;;;;;;sFACrF,8OAAC;4EAAK,WAAW,GAAG,WAAW,kBAAkB,gBAAgB,iDAAiD,CAAC;sFAChH;;;;;;;;;;;;+DAJG;;;;;;;;;;;;;;;;;;;;;;;+BAtIf,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;AA6J7B","debugId":null}}]
}