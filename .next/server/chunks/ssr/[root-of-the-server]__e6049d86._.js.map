{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Prompt/docs.jsx"],"sourcesContent":["// components/Docs.jsx\nimport React from \"react\";\nimport { ExternalLink } from \"lucide-react\";\n\nconst docsList = [\n  {\n    title: \"OpenAI Prompt Engineering Guide\",\n    description:\n      \"Official OpenAI documentation covering prompt design, structure, and techniques for reliable, high-quality outputs.\",\n    url: \"https://platform.openai.com/docs/guides/prompt-engineering\",\n    citation: \"OpenAI Platform Docs — Prompt Engineering\",\n  },\n  {\n    title: \"OpenAI Prompting Best Practices\",\n    description:\n      \"Best practices article from OpenAI explaining tips, examples, and how to get consistent results across models.\",\n    url: \"https://help.openai.com/en/articles/6654000-best-practices-for-prompt-engineering-with-the-openai-api\",\n    citation: \"OpenAI Help Center — Prompt Engineering Best Practices\",\n  },\n  {\n    title: \"LangChain Prompt Engineering\",\n    description:\n      \"LangChain’s documentation on building, templating, testing, and optimizing prompts for LLM applications.\",\n    url: \"https://docs.langchain.com/langsmith/prompt-engineering\",\n    citation: \"LangChain Docs — LangSmith Prompt Engineering\",\n  },\n  {\n    title: \"LangChain Prompt Templates & Examples\",\n    description:\n      \"Conceptual and practical guide for prompt templates, chat prompts, and chaining prompts within LangChain pipelines.\",\n    url: \"https://docs.langchain.com/docs/modules/model_io/prompts/\",\n    citation: \"LangChain Docs — Prompt Templates & Model I/O\",\n  },\n  {\n    title: \"Azure OpenAI Prompt Engineering\",\n    description:\n      \"Microsoft Learn documentation covering prompt design principles, structure, and examples for Azure OpenAI users.\",\n    url: \"https://learn.microsoft.com/en-us/azure/ai-foundry/openai/concepts/prompt-engineering\",\n    citation: \"Microsoft Learn — Azure OpenAI Prompt Engineering\",\n  },\n  {\n    title: \"Anthropic Claude Prompt Engineering\",\n    description:\n      \"Official Anthropic documentation on creating effective prompts for Claude models with examples and safety guidelines.\",\n    url: \"https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering\",\n    citation: \"Anthropic Docs — Claude Prompt Engineering\",\n  },\n  {\n    title: \"Google Gemini Prompting Guide\",\n    description:\n      \"Google’s official Gemini API documentation on prompting techniques, examples, and structured generation control.\",\n    url: \"https://cloud.google.com/vertex-ai/docs/generative-ai/model-reference/prompt-design\",\n    citation: \"Google Cloud Docs — Gemini Prompt Design Guide\",\n  },\n  {\n    title: \"Learn Prompting (Community Curriculum)\",\n    description:\n      \"A free, open-source, community-maintained guide covering all prompt engineering techniques from beginner to advanced.\",\n    url: \"https://learnprompting.org/\",\n    citation: \"Learn Prompting — Open Learning Resource\",\n  },\n  {\n    title: \"DeepLearning.AI — ChatGPT Prompt Engineering Course\",\n    description:\n      \"A practical course by DeepLearning.AI & OpenAI, teaching structured prompting, reasoning, and real-world use cases.\",\n    url: \"https://learn.deeplearning.ai/courses/chatgpt-prompt-engineering-for-developers\",\n    citation: \"DeepLearning.AI — Official Prompt Engineering Course\",\n  },\n];\n\nexport default function Docs() {\n  return (\n    <section className=\"px-6 py-12 bg-gray-50 min-h-screen\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">\n          🧠 Prompt Engineering Official Docs\n        </h1>\n        <p className=\"text-gray-600 mb-10\">\n          Explore official documentation and learning resources that will help\n          you master prompt engineering and build production-ready GenAI systems.\n        </p>\n\n        {/* Cards Grid */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {docsList.map((doc) => (\n            <a\n              key={doc.title}\n              href={doc.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"group bg-white border border-gray-200 rounded-2xl p-6 shadow-sm hover:shadow-lg transition transform hover:-translate-y-1\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900 group-hover:text-blue-600\">\n                  {doc.title}\n                </h3>\n                <ExternalLink\n                  size={18}\n                  className=\"text-gray-400 group-hover:text-blue-600\"\n                />\n              </div>\n              <p className=\"mt-3 text-sm text-gray-600\">{doc.description}</p>\n              <p className=\"mt-4 text-xs text-indigo-600 font-medium\">\n                {doc.citation}\n              </p>\n            </a>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;AACA;;;;AAEA,MAAM,WAAW;IACf;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;IACA;QACE,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;IACZ;CACD;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAG,WAAU;8BAAwC;;;;;;8BAGtD,8OAAC;oBAAE,WAAU;8BAAsB;;;;;;8BAMnC,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,oBACb,8OAAC;4BAEC,MAAM,IAAI,GAAG;4BACb,QAAO;4BACP,KAAI;4BACJ,WAAU;;8CAEV,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDACX,IAAI,KAAK;;;;;;sDAEZ,8OAAC,sNAAA,CAAA,eAAY;4CACX,MAAM;4CACN,WAAU;;;;;;;;;;;;8CAGd,8OAAC;oCAAE,WAAU;8CAA8B,IAAI,WAAW;;;;;;8CAC1D,8OAAC;oCAAE,WAAU;8CACV,IAAI,QAAQ;;;;;;;2BAjBV,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;AAyB5B","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Prompt/projects.jsx"],"sourcesContent":["// components/PromptProjects.jsx\nimport React from \"react\";\n\nconst projects = [\n  // ---------- PHASE 1 — FOUNDATIONAL PROJECTS ----------\n  {\n    id: \"phase1-prompt-lab\",\n    level: \"Phase 1 — Beginner\",\n    title: \"Interactive Prompt Testing Lab\",\n    description:\n      \"Build a web app using OpenAI API where users can test and compare prompts (zero-shot, few-shot, chain-of-thought). Include temperature & token sliders, and real-time output comparison.\",\n    url: \"https://youtu.be/h-8BpGswhIM?si=LXdzDcqmNB_95zmj\",\n  },\n  {\n    id: \"phase1-template-library\",\n    level: \"Phase 1 — Beginner\",\n    title: \"Prompt Template Library\",\n    description:\n      \"Design a personal library of prompt templates (content creation, summarization, translation, idea generation). Add categories, metadata, and copy-to-clipboard UX.\",\n    url: \"https://youtu.be/Zv_tUYPG2NA?si=-vg4w3LEijo8jSKp\",\n  },\n\n  // ---------- PHASE 2 — INTERMEDIATE PROJECTS ----------\n  {\n    id: \"phase2-rag-chatbot\",\n    level: \"Phase 2 — Intermediate\",\n    title: \"Retrieval-Augmented Chatbot\",\n    description:\n      \"Create a chatbot that uses LangChain and OpenAI to retrieve context from PDFs or web docs before answering. Learn embeddings, Pinecone/ChromaDB integration, and context injection.\",\n    url: \"https://youtu.be/N_OOfkEWcOk?si=m2TyqN6Qo8rThmqN\",\n  },\n  {\n    id: \"phase2-agent-assistant\",\n    level: \"Phase 2 — Intermediate\",\n    title: \"Multi-Agent AI Assistant\",\n    description:\n      \"Build a system with multiple LLM agents (Researcher, Writer, Reviewer) using the ReAct or AutoGPT approach. Each agent performs specialized reasoning to complete a shared goal.\",\n    url: \"Multi-Agent AI Assistant\",\n  },\n  {\n    id: \"phase2-prompt-evaluator\",\n    level: \"Phase 2 — Intermediate\",\n    title: \"Prompt Evaluator Dashboard\",\n    description:\n      \"Develop a dashboard that tests multiple prompt variants, logs outputs, and ranks them via GPT-based scoring. Integrate evaluation metrics like BLEU or GPT Eval.\",\n    url: \"https://youtu.be/2E8iTvGo9Hs?si=VsJc5qCqiNAZcrvZ\",\n  },\n\n  // ---------- PHASE 3 — ADVANCED PROJECTS ----------\n  {\n    id: \"phase3-ai-workflow-builder\",\n    level: \"Phase 3 — Advanced\",\n    title: \"AI Workflow Builder (Prompt Chaining App)\",\n    description:\n      \"Build a drag-and-drop visual interface for creating chained prompts. Each node represents a reasoning step (Summarize → Analyze → Generate). Store flows in JSON and execute dynamically.\",\n    url: \"https://youtu.be/DL6cGf7ZTlE?si=nttQ1hEtcLcw4FLu\",\n  },\n  {\n    id: \"phase3-domain-copilot\",\n    level: \"Phase 3 — Advanced\",\n    title: \"Domain-Specific Copilot\",\n    description:\n      \"Develop a specialized assistant (e.g., Legal, Marketing, Data Science Copilot) using tuned prompts, context injection, and persona design. Add voice input and document upload support.\",\n    url: \"https://youtu.be/3fkUbes1D8E?si=uWoU4ZNEXviuNSQs\",\n  },\n  {\n    id: \"phase3-autonomous-agent-system\",\n    level: \"Phase 3 — Advanced\",\n    title: \"Autonomous Task Agent System\",\n    description:\n      \"Implement a self-directed AI agent that plans, executes, and reviews tasks using memory and tool use. Use CrewAI or LangGraph for multi-agent orchestration.\",\n    url: \"https://youtu.be/OZ_NgoFDiHI?si=31S1Y4GZu3U2DVTV\",\n  },\n\n  // ---------- PHASE 4 — CAPSTONE ----------\n  {\n    id: \"phase4-promptops-saas\",\n    level: \"Phase 4 — Capstone\",\n    title: \"PromptOps SaaS Platform\",\n    description:\n      \"Create a SaaS product that manages, versions, tests, and deploys prompts across teams. Include user auth, analytics, A/B testing, and cost tracking via OpenAI usage API.\",\n    url: \"https://youtu.be/aNGJfR7EubA?si=yQH2NAnTyS08wDrv\",\n  },\n];\n\nexport default function PromptProjects() {\n  return (\n    <section className=\"bg-gray-50 py-12 min-h-screen\">\n      <div className=\"max-w-6xl mx-auto px-6\">\n        <header className=\"mb-8 text-center\">\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">\n            🧠 Prompt Engineering Project Roadmap\n          </h2>\n          <p className=\"mt-2 text-gray-600\">\n            Hands-on projects to become industry-ready in Prompt Engineering. Build, test, and deploy real-world AI/LLM applications.\n          </p>\n        </header>\n\n        <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n          {projects.map((p) => (\n            <article\n              key={p.id}\n              className=\"group bg-white border border-gray-200 rounded-2xl p-6 shadow-sm hover:shadow-lg hover:-translate-y-1 transition-transform\"\n              aria-labelledby={`${p.id}-title`}\n            >\n              <span className=\"inline-block text-xs font-medium bg-indigo-100 text-indigo-800 px-2 py-1 rounded-full\">\n                {p.level}\n              </span>\n              <h3\n                id={`${p.id}-title`}\n                className=\"mt-4 text-lg font-semibold text-gray-900 group-hover:text-indigo-600\"\n              >\n                {p.title}\n              </h3>\n              <p className=\"mt-2 text-gray-600 text-sm\">{p.description}</p>\n              <a\n                href={p.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mt-4 inline-block text-indigo-600 font-medium hover:underline\"\n              >\n                Explore Project ▶\n              </a>\n            </article>\n          ))}\n        </div>\n\n        <footer className=\"mt-10 text-sm text-gray-500 text-center\">\n          Follow the roadmap to implement each project step-by-step and showcase your expertise in Prompt Engineering.\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;;AAChC;;;AAEA,MAAM,WAAW;IACf,wDAAwD;IACxD;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IAEA,wDAAwD;IACxD;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IAEA,oDAAoD;IACpD;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;IAEA,2CAA2C;IAC3C;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;IACP;CACD;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCAGtD,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;;8BAKpC,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,kBACb,8OAAC;4BAEC,WAAU;4BACV,mBAAiB,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;;8CAEhC,8OAAC;oCAAK,WAAU;8CACb,EAAE,KAAK;;;;;;8CAEV,8OAAC;oCACC,IAAI,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;oCACnB,WAAU;8CAET,EAAE,KAAK;;;;;;8CAEV,8OAAC;oCAAE,WAAU;8CAA8B,EAAE,WAAW;;;;;;8CACxD,8OAAC;oCACC,MAAM,EAAE,GAAG;oCACX,QAAO;oCACP,KAAI;oCACJ,WAAU;8CACX;;;;;;;2BAnBI,EAAE,EAAE;;;;;;;;;;8BA0Bf,8OAAC;oBAAO,WAAU;8BAA0C;;;;;;;;;;;;;;;;;AAMpE","debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Prompt/faq.jsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\n\n// faq.jsx\n// Drop this file into a Next.js pages/ or app/ route as a React component.\n// Written in plain JSX (no TypeScript). Tailwind CSS classes are used for styling.\n\nconst FAQ_DATA = [\n  { id: 'what-is-prompt-engineering', q: 'What is prompt engineering?', a: 'Prompt engineering is the practice of designing and refining inputs (prompts) sent to a language model to produce useful, reliable, and safe outputs. It involves choosing wording, structure, examples, and system instructions to guide model behavior.', tags: ['basics', 'definition'] },\n  { id: 'system-vs-user', q: 'What is the difference between system, user, and assistant messages?', a: 'System messages set high-level behavior (role, tone, rules). User messages are the user’s request. Assistant messages are model outputs and can be used as examples. Use system messages for non-negotiable rules and user messages for task details.', tags: ['roles'] },\n  { id: 'few-shot-examples', q: 'When and how should I use few-shot examples?', a: 'Few-shot prompting includes input-output examples to show the desired format or reasoning. Use it to enforce formatting or show edge cases. Keep examples concise and representative.', tags: ['techniques','few-shot'] },\n  { id: 'temperature', q: 'What does temperature do and how should I choose it?', a: 'Temperature controls randomness. Lower values (0–0.3) produce deterministic outputs; higher values (0.7–1.0) increase creativity. For code or math choose low temperature; for brainstorming, increase it.', tags: ['parameters'] },\n  { id: 'token-limits', q: 'How do token limits and context windows affect prompting?', a: 'Context windows limit the total text (prompt + conversation + response) the model can process. Keep prompts concise, use retrieval for large contexts, and chunk long inputs.', tags: ['limitations','context'] },\n  { id: 'chain-of-thought', q: 'What is chain-of-thought prompting and when to use it?', a: 'Chain-of-thought (CoT) asks the model to reveal intermediate reasoning steps. It can improve complex reasoning but increases token usage—use it when stepwise justification is needed.', tags: ['reasoning'] },\n  { id: 'debugging-prompts', q: 'How do I debug prompts when the model gives poor outputs?', a: 'Simplify the prompt, add explicit constraints, include examples, vary parameters, and compare outputs. Ask the model to explain failures to diagnose issues.', tags: ['workflow','debugging'] },\n  { id: 'safety-and-bias', q: 'How do I reduce harmful, biased, or unsafe outputs?', a: 'Add explicit safety instructions in the system prompt, implement post-generation checks, use filters, and include human review for high-risk outputs.', tags: ['safety','ethics'] },\n  { id: 'prompt-templates', q: 'What are good prompt template patterns?', a: 'Patterns: Instruction + format constraints + examples, Step-by-step decomposition, Role-play (\"You are an expert\"), and Retrieve-then-generate. Always specify the expected output format.', tags: ['patterns','templates'] },\n  { id: 'evaluation-metrics', q: 'How should I evaluate prompt quality?', a: 'Combine automated checks (exact-match, task-specific tests) with human evaluation for correctness and usefulness. Create unit tests for edge cases and track regressions.', tags: ['evaluation'] },\n  { id: 'cost-optimization', q: 'How can I optimize prompts to reduce API cost?', a: 'Shorten prompts, use concise examples, cache deterministic outputs, lower temperature for shorter responses, and use cheaper model variants for non-critical tasks.', tags: ['cost','optimization'] },\n  { id: 'prompt-chaining', q: 'What is prompt chaining and why use it?', a: 'Prompt chaining splits a complex task into stages (extract → transform → generate). It improves clarity, debugging, and reuse when single-shot prompts fail or exceed context limits.', tags: ['architecture','chaining'] },\n];\n\nexport default function FAQ() {\n  const [query, setQuery] = useState('');\n  const [activeId, setActiveId] = useState(null);\n  const [selectedTag, setSelectedTag] = useState('all');\n\n  const allTags = useMemo(() => {\n    const s = new Set();\n    FAQ_DATA.forEach((f) => f.tags.forEach((t) => s.add(t)));\n    return ['all', ...Array.from(s)];\n  }, []);\n\n  const filtered = useMemo(() => {\n    const q = query.trim().toLowerCase();\n    return FAQ_DATA.filter((entry) => {\n      const matchesTag = selectedTag === 'all' || entry.tags.includes(selectedTag);\n      const matchesQuery = !q || entry.q.toLowerCase().includes(q) || entry.a.toLowerCase().includes(q);\n      return matchesTag && matchesQuery;\n    });\n  }, [query, selectedTag]);\n\n  function toggleAccordion(id) {\n    setActiveId((prev) => (prev === id ? null : id));\n  }\n\n  function copyToClipboard(text) {\n    if (typeof navigator !== 'undefined' && navigator.clipboard) {\n      navigator.clipboard.writeText(text).then(() => {\n        // Lightweight feedback — replace with toast in production\n        alert('Copied to clipboard');\n      }).catch(() => alert('Copy failed'));\n    } else {\n      alert('Clipboard not available');\n    }\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <header className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold mb-2\">Prompt Engineering — FAQ</h1>\n        <p className=\"text-sm text-gray-600\">Practical Q&amp;A for building prompts in Next.js apps.</p>\n      </header>\n\n      <div className=\"flex gap-3 items-center mb-4\">\n        <input\n          type=\"search\"\n          placeholder=\"Search questions or answers...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          className=\"flex-1 p-3 rounded border border-gray-200 focus:outline-none\"\n        />\n        <select value={selectedTag} onChange={(e) => setSelectedTag(e.target.value)} className=\"p-3 border rounded\">\n          {allTags.map((t) => (\n            <option key={t} value={t}>{t}</option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"space-y-3\">\n        {filtered.map((item) => (\n          <div key={item.id} className=\"border rounded-lg p-4\">\n            <button className=\"w-full text-left\" onClick={() => toggleAccordion(item.id)}>\n              <div className=\"flex justify-between items-center\">\n                <h3 className=\"text-lg font-medium\">{item.q}</h3>\n                <span className=\"text-sm text-gray-500\">{activeId === item.id ? '−' : '+'}</span>\n              </div>\n            </button>\n\n            {activeId === item.id && (\n              <div className=\"mt-3 text-sm text-gray-700\">\n                <p>{item.a}</p>\n                <div className=\"mt-3 flex gap-2\">\n                  <button onClick={() => copyToClipboard(item.a)} className=\"px-3 py-1 border rounded text-sm\">Copy</button>\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n\n        {filtered.length === 0 && (\n          <p className=\"text-center text-gray-500 p-6\">No results found for your search.</p>\n        )}\n      </div>\n\n      <footer className=\"mt-8 text-xs text-gray-500\">Tip: Keep prompts explicit and test iteratively.</footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 699, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Prompt/downloadPdf.jsx"],"sourcesContent":["import React from 'react';\nimport { Document, Page, Text, View, StyleSheet, PDFDownloadLink, pdf } from '@react-pdf/renderer';\nimport { saveAs } from 'file-saver';\n\n// Define styles for the PDF\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#f8fafc',\n    padding: 30,\n    fontFamily: 'Helvetica',\n  },\n  header: {\n    marginBottom: 30,\n    textAlign: 'center',\n    paddingBottom: 20,\n    borderBottomWidth: 2,\n    borderBottomColor: '#3b82f6',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6b7280',\n    fontWeight: 'normal',\n  },\n  phaseContainer: {\n    marginBottom: 25,\n    backgroundColor: '#ffffff',\n    borderRadius: 8,\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#e5e7eb',\n  },\n  phaseHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  phaseNumber: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: '#3b82f6',\n    color: '#ffffff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    lineHeight: 40,\n    marginRight: 15,\n  },\n  phaseTitleContainer: {\n    flex: 1,\n  },\n  phaseTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 2,\n  },\n  phaseSubtitle: {\n    fontSize: 12,\n    color: '#6b7280',\n    marginBottom: 2,\n  },\n  phaseDescription: {\n    fontSize: 14,\n    color: '#374151',\n    fontWeight: 'normal',\n  },\n  sectionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 15,\n  },\n  section: {\n    flex: '1 1 45%',\n    backgroundColor: '#f8fafc',\n    borderRadius: 6,\n    padding: 15,\n    borderLeftWidth: 4,\n    borderLeftColor: '#3b82f6',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#3b82f6',\n    marginBottom: 10,\n  },\n  itemsList: {\n    gap: 6,\n  },\n  item: {\n    fontSize: 11,\n    color: '#374151',\n    lineHeight: 1.4,\n    paddingLeft: 12,\n    marginBottom: 4,\n  },\n  itemNumber: {\n    fontWeight: 'bold',\n    color: '#1f2937',\n  },\n  phaseConnector: {\n    alignSelf: 'center',\n    marginVertical: 15,\n    paddingVertical: 8,\n    paddingHorizontal: 20,\n    backgroundColor: '#f3f4f6',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n  },\n  connectorText: {\n    fontSize: 12,\n    color: '#6b7280',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  footer: {\n    marginTop: 30,\n    padding: 20,\n    backgroundColor: '#ecfdf5',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#10b981',\n    textAlign: 'center',\n  },\n  footerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#065f46',\n    marginBottom: 8,\n  },\n  footerText: {\n    fontSize: 14,\n    color: '#047857',\n    lineHeight: 1.5,\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 10,\n    bottom: 20,\n    right: 30,\n    color: '#6b7280',\n  },\n  watermark: {\n    position: 'absolute',\n    top: 50,\n    right: 30,\n    fontSize: 8,\n    color: '#d1d5db',\n    opacity: 0.5,\n  }\n});\n\n// PDF Document Component\nconst RoadmapPDFDocument = ({ phases }) => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {/* Header */}\n      <View style={styles.header}>\n        <Text style={styles.title}>Prompt Engineering Roadmap</Text>\n        <Text style={styles.subtitle}>Your Complete Journey from Beginner to Professional</Text>\n      </View>\n\n      \n\n      {/* Phases */}\n      {phases.map((phase, index) => (\n        <View key={phase.id} wrap={false}>\n          <View style={styles.phaseContainer}>\n            {/* Phase Header */}\n            <View style={styles.phaseHeader}>\n              <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                {phase.id}\n              </Text>\n              <View style={styles.phaseTitleContainer}>\n                <Text style={styles.phaseTitle}>{phase.title}</Text>\n                <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                <Text style={styles.phaseDescription}>{phase.description}</Text>\n              </View>\n            </View>\n\n            {/* Sections */}\n            <View style={styles.sectionsContainer}>\n              {phase.sections.map((section, sectionIndex) => (\n                <View key={sectionIndex} style={styles.section}>\n                  <Text style={styles.sectionTitle}>{section.title}</Text>\n                  <View style={styles.itemsList}>\n                    {section.items.map((item, itemIndex) => (\n                      <Text key={itemIndex} style={styles.item}>\n                        <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                      </Text>\n                    ))}\n                  </View>\n                </View>\n              ))}\n            </View>\n          </View>\n\n          {/* Phase Connector */}\n          {index < phases.length - 1 && (\n            <View style={styles.phaseConnector}>\n              <Text style={styles.connectorText}>\n                ↓ Next: Phase {phase.id + 1}\n              </Text>\n            </View>\n          )}\n        </View>\n      ))}\n\n \n\n      {/* Page Number */}\n      <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n        `${pageNumber} / ${totalPages}`\n      )} fixed />\n    </Page>\n  </Document>\n);\n\n// Helper function to convert Tailwind colors to hex\nconst getPhaseColor = (tailwindColor) => {\n  const colorMap = {\n    'bg-blue-500': '#3b82f6',\n    'bg-purple-500': '#8b5cf6',\n    'bg-green-500': '#10b981',\n    'bg-orange-500': '#f59e0b',\n    'bg-red-500': '#ef4444',\n  };\n  return colorMap[tailwindColor] || '#3b82f6';\n};\n\n// Main download function\nexport const downloadRoadmapPDF = async (phases) => {\n  try {\n    // Create the PDF blob\n    const blob = await pdf(<RoadmapPDFDocument phases={phases} />).toBlob();\n\n    // Generate filename with current date\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `prompt-engineering-roadmap-${currentDate}.pdf`;\n\n    // Save the file\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating PDF:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// React Component for PDF Download Link (alternative approach)\nexport const PDFDownloadButton = ({ phases, className = \"\", children = \"Download PDF\" }) => (\n  <PDFDownloadLink\n    document={<RoadmapPDFDocument phases={phases} />}\n    fileName={`Prompt-Engineering-roadmap-${new Date().toISOString().split('T')[0]}.pdf`}\n    className={className}\n  >\n    {({ blob, url, loading, error }) => {\n      if (loading) return 'Generating PDF...';\n      if (error) return 'Error generating PDF';\n      return children;\n    }}\n  </PDFDownloadLink>\n);\n\n// Advanced PDF generation with custom options\nexport const downloadAdvancedRoadmapPDF = async (phases, options = {}) => {\n  const {\n    includeWatermark = true,\n    customTitle = \"Prompt Engineering Roadmap\",\n    customSubtitle = \"Your Complete Journey from Beginner to Professional\",\n    pageSize = \"A4\",\n    orientation = \"portrait\"\n  } = options;\n\n  try {\n    const AdvancedPDFDocument = () => (\n      <Document>\n        <Page size={pageSize} orientation={orientation} style={styles.page}>\n          {/* Custom Header */}\n          <View style={styles.header}>\n            <Text style={styles.title}>{customTitle}</Text>\n            <Text style={styles.subtitle}>{customSubtitle}</Text>\n          </View>\n\n          {/* Conditional Watermark */}\n          {includeWatermark && (\n            <Text style={styles.watermark}>ProductDesignerRoadmap.com</Text>\n          )}\n\n          {/* Content remains the same */}\n          {phases.map((phase, index) => (\n            <View key={phase.id} wrap={false}>\n              <View style={styles.phaseContainer}>\n                <View style={styles.phaseHeader}>\n                  <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                    {phase.id}\n                  </Text>\n                  <View style={styles.phaseTitleContainer}>\n                    <Text style={styles.phaseTitle}>{phase.title}</Text>\n                    <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                    <Text style={styles.phaseDescription}>{phase.description}</Text>\n                  </View>\n                </View>\n\n                <View style={styles.sectionsContainer}>\n                  {phase.sections.map((section, sectionIndex) => (\n                    <View key={sectionIndex} style={styles.section}>\n                      <Text style={styles.sectionTitle}>{section.title}</Text>\n                      <View style={styles.itemsList}>\n                        {section.items.map((item, itemIndex) => (\n                          <Text key={itemIndex} style={styles.item}>\n                            <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                          </Text>\n                        ))}\n                      </View>\n                    </View>\n                  ))}\n                </View>\n              </View>\n\n              {index < phases.length - 1 && (\n                <View style={styles.phaseConnector}>\n                  <Text style={styles.connectorText}>\n                    ↓ Next: Phase {phase.id + 1}\n                  </Text>\n                </View>\n              )}\n            </View>\n          ))}\n\n         \n\n          <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n            `${pageNumber} / ${totalPages}`\n          )} fixed />\n        </Page>\n      </Document>\n    );\n\n    const blob = await pdf(<AdvancedPDFDocument />).toBlob();\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `${customTitle.toLowerCase().replace(/\\s+/g, '-')}-${currentDate}.pdf`;\n\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating advanced PDF:', error);\n    return { success: false, error: error.message };\n  }\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1358, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Prompt/roadmapData.js"],"sourcesContent":["export const phases = [\n  {\n    id: 1,\n    title: \"Foundations\",\n    subtitle: \"Beginner Level\",\n    description: \"Understand what prompts are, how LLMs work, and how to structure basic inputs effectively\",\n    color: \"bg-blue-500\",\n    sections: [\n      {\n        title: \"Introduction to LLMs\",\n        items: [\n          \"What are large language models?\",\n          \"Transformer architecture basics (conceptual understanding)\",\n          \"Pretraining vs. fine-tuning vs. instruction tuning\",\n          \"Understanding context windows, temperature, and sampling parameters\",\n          \"Roles (system, user, assistant) and their influence\"\n        ]\n      },\n      {\n        title: \"Prompt Basics\",\n        items: [\n          \"What is prompt engineering?\",\n          \"Difference between prompt, completion, and tokens\",\n          \"Zero-shot, one-shot, and few-shot prompting\",\n          \"Formatting and consistency\",\n          \"Understanding model limitations and hallucinations\"\n        ]\n      },\n      {\n        title: \"Prompt Components\",\n        items: [\n          \"Instruction clarity and specificity\",\n          \"Context relevance\",\n          \"Output constraints (length, tone, format)\"\n        ]\n      },\n      {\n        title: \"Tools to Learn\",\n        items: [\n          \"OpenAI Playground\",\n          \"Poe / Hugging Face Chat\",\n          \"ChatGPT Custom Instructions\",\n          \"PromptPerfect / FlowGPT\"\n        ]\n      },\n      {\n        title: \"Mini Projects\",\n        items: [\n          \"Build a 'Prompt Testing Notebook' using OpenAI or Anthropic API\",\n          \"Compare zero-shot vs. few-shot results on the same question\",\n          \"Create a 'Prompt Journal' documenting what works and why\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 2,\n    title: \"Structural Prompt Engineering\",\n    subtitle: \"Intermediate Level\",\n    description: \"Learn structured prompting, frameworks, and prompt templates for consistent performance\",\n    color: \"bg-purple-500\",\n    sections: [\n      {\n        title: \"Prompt Patterns & Frameworks\",\n        items: [\n          \"CRISP (Context, Role, Instruction, Steps, Purpose)\",\n          \"RACE (Role, Action, Context, Expectation)\",\n          \"COT (Chain-of-Thought prompting)\",\n          \"ReAct (Reason + Act) prompting\",\n          \"Self-Consistency prompting\"\n        ]\n      },\n      {\n        title: \"Formatting & Structuring Techniques\",\n        items: [\n          \"Bullet lists, numbered steps, and markdown to guide structure\",\n          \"Prompt delimiters and context boundaries\",\n          \"Handling multi-turn interactions\"\n        ]\n      },\n      {\n        title: \"Evaluation & Refinement\",\n        items: [\n          \"How to debug poor outputs\",\n          \"Adding constraints (tone, format, safety)\",\n          \"Using evaluation frameworks (BLEU, ROUGE, GPT-eval)\"\n        ]\n      },\n      {\n        title: \"Tools\",\n        items: [\n          \"LangChain / LlamaIndex\",\n          \"PromptLayer (prompt tracking)\",\n          \"OpenAI Eval / Guidance\",\n          \"Promptfoo (A/B testing prompts)\"\n        ]\n      },\n      {\n        title: \"Projects\",\n        items: [\n          \"Build a prompt template library for different LLM tasks (content, data extraction, coding)\",\n          \"Create a multi-step reasoning assistant using ReAct prompting\",\n          \"Compare structured vs. unstructured prompt performance\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 3,\n    title: \"Advanced Prompt Engineering\",\n    subtitle: \"Pro Level\",\n    description: \"Move from text-based prompting to multimodal, API-integrated, and autonomous prompt systems\",\n    color: \"bg-green-500\",\n    sections: [\n      {\n        title: \"Prompt Chaining & Modularization\",\n        items: [\n          \"How to break large tasks into sub-prompts\",\n          \"Context passing between steps\",\n          \"Using intermediate reasoning steps (scratchpad memory)\"\n        ]\n      },\n      {\n        title: \"Retrieval-Augmented Generation (RAG)\",\n        items: [\n          \"How to feed documents, PDFs, or data into prompts\",\n          \"Embeddings & vector databases (FAISS, Pinecone)\",\n          \"Query + context + response pipeline\"\n        ]\n      },\n      {\n        title: \"Function Calling & API Integration\",\n        items: [\n          \"Using function calling for automation\",\n          \"Building tools and agents using OpenAI function-calling or LangChain tools\"\n        ]\n      },\n      {\n        title: \"Multimodal Prompting\",\n        items: [\n          \"Prompting with images, audio, and video\",\n          \"Descriptive and visual-context prompts\"\n        ]\n      },\n      {\n        title: \"Evaluation & Optimization\",\n        items: [\n          \"Building your own evaluation metrics\",\n          \"Automated prompt testing with scripts\",\n          \"Fine-tuning vs. advanced prompt tuning\"\n        ]\n      },\n      {\n        title: \"Tools\",\n        items: [\n          \"LangChain, LlamaIndex\",\n          \"Pinecone, Weaviate, ChromaDB\",\n          \"OpenAI Functions, Anthropic Tools API\",\n          \"Gradio / Streamlit for frontends\"\n        ]\n      },\n      {\n        title: \"Projects\",\n        items: [\n          \"Build a RAG chatbot with retrieval and summarization\",\n          \"Create a multi-agent system (e.g., 'Researcher + Writer + Reviewer')\",\n          \"Design a prompt API that dynamically adjusts prompts based on context\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 4,\n    title: \"Domain-Specific Applications\",\n    subtitle: \"Specialist Level\",\n    description: \"Apply domain knowledge to solve real-world business problems using prompt engineering\",\n    color: \"bg-orange-500\",\n    sections: [\n      {\n        title: \"Software Development\",\n        items: [\n          \"Code generation, debugging, and doc automation\",\n          \"System prompt design for developer copilots\"\n        ]\n      },\n      {\n        title: \"Data Science & Analytics\",\n        items: [\n          \"Data cleaning, summarization, and SQL generation\",\n          \"Prompting for data-to-insight conversions\"\n        ]\n      },\n      {\n        title: \"Education & Content Creation\",\n        items: [\n          \"Quiz, syllabus, lesson plan generation\",\n          \"Adaptive tutoring using multi-turn prompts\"\n        ]\n      },\n      {\n        title: \"Marketing & Product Design\",\n        items: [\n          \"Persona-based copywriting prompts\",\n          \"Brainstorming product ideas, taglines, and campaigns\"\n        ]\n      },\n      {\n        title: \"Business & Decision Support\",\n        items: [\n          \"Prompting for decision trees, SWOT, and financial summaries\"\n        ]\n      },\n      {\n        title: \"Projects\",\n        items: [\n          \"Build a Custom GPT or AI Assistant specialized in one domain\",\n          \"Create a PromptOps dashboard for enterprise use\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 5,\n    title: \"Industry-Ready Level\",\n    subtitle: \"Professional Level\",\n    description: \"Transition from engineer to Prompt Architect / AI System Designer\",\n    color: \"bg-red-500\",\n    sections: [\n      {\n        title: \"PromptOps & Workflow Management\",\n        items: [\n          \"Versioning, monitoring, and auditing prompts\",\n          \"Continuous improvement cycles\"\n        ]\n      },\n      {\n        title: \"Ethics & Safety\",\n        items: [\n          \"Avoiding bias, toxicity, and sensitive content\",\n          \"Safety filters and guardrails\"\n        ]\n      },\n      {\n        title: \"Collaboration & Documentation\",\n        items: [\n          \"Building prompt style guides for teams\",\n          \"Shared prompt libraries and repositories\"\n        ]\n      },\n      {\n        title: \"Prompt Tuning & Fine-tuning\",\n        items: [\n          \"Comparison: prompting vs. fine-tuning\",\n          \"Parameter-efficient tuning (LoRA, PEFT)\"\n        ]\n      },\n      {\n        title: \"Capstone Projects\",\n        items: [\n          \"Design an AI Agent System using LangChain or Autogen\",\n          \"Build a prompt evaluation dashboard with metrics tracking\",\n          \"Create an LLM-powered SaaS MVP (content generator, code reviewer, or resume optimizer)\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 6,\n    title: \"Continuous Mastery & Research\",\n    subtitle: \"Expert Level\",\n    description: \"Stay ahead with the latest methods and frameworks\",\n    color: \"bg-indigo-500\",\n    sections: [\n      {\n        title: \"Advanced Topics to Explore\",\n        items: [\n          \"Self-reflective prompting (MetaPrompting)\",\n          \"Autonomous agents (BabyAGI, AutoGPT, CrewAI, OpenDevin)\",\n          \"Prompt compilation & model-specific optimizations\",\n          \"Multimodal LLMs (GPT-4o, Gemini 1.5 Pro, Claude 3 Opus)\",\n          \"Context compression & retrieval pipelines\",\n          \"Synthetic data generation for AI training\"\n        ]\n      },\n      {\n        title: \"Learning Resources - Books\",\n        items: [\n          \"The Art of Prompt Engineering — Packt (2024)\",\n          \"Prompt Engineering for Everyone — Andrew Ng / DeepLearning.AI\"\n        ]\n      },\n      {\n        title: \"Learning Resources - Courses\",\n        items: [\n          \"DeepLearning.AI 'ChatGPT Prompt Engineering'\",\n          \"Learn Prompting (free, learnprompting.org)\",\n          \"LangChain Academy\"\n        ]\n      },\n      {\n        title: \"Communities\",\n        items: [\n          \"r/PromptEngineering\",\n          \"FlowGPT, PromptHero\",\n          \"AI Village / Discord AI Labs\"\n        ]\n      }\n    ]\n  }\n];"],"names":[],"mappings":";;;AAAO,MAAM,SAAS;IACpB;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;SACD;IACH;CACD","debugId":null}},
    {"offset": {"line": 1677, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Prompt/page.jsx"],"sourcesContent":["\"use client\"\nimport React, { useState } from 'react';\nimport { Code, Download, Map, FileText, FolderOpen, HelpCircle, ChevronDown, Menu, X, Loader2 } from 'lucide-react';\nimport Docs from './docs';\nimport Projects from './projects';\nimport Faq from './faq';\nimport { downloadRoadmapPDF } from './downloadPdf';\nimport { phases } from './roadmapData';\n\nconst Prompt = () => {\n  const [activeTab, setActiveTab] = useState('roadmap');\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  // Handle PDF download with loading state\n  const handlePDFDownload = async () => {\n    setIsDownloading(true);\n    try {\n      const result = await downloadRoadmapPDF(phases);\n      if (result.success) {\n        console.log(`PDF downloaded successfully: ${result.filename}`);\n      } else {\n        console.error('PDF download failed:', result.error);\n      }\n    } catch (error) {\n      console.error('PDF download error:', error);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'documentation':\n        return <Docs />;\n      case 'projects':\n        return <Projects />;\n      case 'faq':\n        return <Faq />;\n      default:\n        return (\n          <div className=\"relative\">\n            {/* Timeline */}\n            <div className=\"flex flex-col space-y-8 md:space-y-12\">\n              {phases.map((phase, index) => (\n                <div key={phase.id} className=\"relative\">\n                  {/* Connection Line */}\n                  {index < phases.length - 1 && (\n                    <div className=\"absolute left-1/2 transform -translate-x-1/2 top-full h-8 md:h-12 w-0.5 md:w-1 bg-gray-300 z-10\"></div>\n                  )}\n\n                  {/* Phase Card */}\n                  <div className=\"flex flex-col items-center\">\n                    {/* Phase Header */}\n                    <div className=\"text-center mb-4 md:mb-6 px-4\">\n                      <div className={`inline-block ${phase.color} text-white px-4 md:px-6 py-2 md:py-3 rounded-lg font-semibold text-base md:text-lg mb-2`}>\n                        Phase {phase.id}: {phase.title}\n                      </div>\n                      <p className=\"text-gray-600 text-xs md:text-sm\">{phase.subtitle}</p>\n                      <p className=\"text-gray-800 font-medium mt-1 text-sm md:text-base\">{phase.description}</p>\n                    </div>\n\n                    {/* Phase Content */}\n                    <div className=\"w-full max-w-6xl px-4\">\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4 md:gap-6\">\n                        {phase.sections.map((section, sectionIndex) => (\n                          <div\n                            key={sectionIndex}\n                            className=\"bg-white rounded-lg border-2 border-blue-200 p-4 md:p-6 shadow-sm hover:shadow-md transition-shadow\"\n                          >\n                            <h3 className=\"text-blue-600 font-semibold text-base md:text-lg mb-3 md:mb-4\">\n                              {section.title}\n                            </h3>\n                            <ol className=\"space-y-2\">\n                              {section.items.map((item, itemIndex) => (\n                                <li key={itemIndex} className=\"text-gray-700 text-xs md:text-sm leading-relaxed\">\n                                  <span className=\"font-medium text-gray-900\">{itemIndex + 1}.</span> {item}\n                                </li>\n                              ))}\n                            </ol>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Step Indicators */}\n                    {index < phases.length - 1 && (\n                      <div className=\"mt-6 md:mt-8 flex items-center space-x-2 md:space-x-4\">\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform -rotate-12\">\n                          Phase {phase.id}\n                        </div>\n                        <ChevronDown className=\"text-gray-400\" size={20} />\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform rotate-12\">\n                          Phase {phase.id + 1}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Final Message */}\n            <div className=\"text-center mt-8 md:mt-12 mx-4 p-6 md:p-8 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                🏆 Final Tips to Become Industry-Ready\n              </h2>\n              <p className=\"text-gray-700 text-base md:text-lg mb-4\">\n                Congratulations! You've completed the Prompt Engineering Mastery Roadmap and are ready to design scalable, robust systems.\n              </p>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 md:px-6 py-4 md:py-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6 md:mb-8\">\n          <div className=\"flex items-center space-x-2 md:space-x-4\">\n            <Code className=\"text-blue-600\" size={32} />\n            <h1 className=\"text-xl md:text-3xl font-bold text-gray-900\">\n              Prompt Engineering <span className=\"text-blue-600\">Mastery Roadmap</span>\n              <span className=\"text-sm md:text-base font-normal text-gray-600 ml-2\">(Beginner → Industry Ready)</span>\n            </h1>\n          </div>\n\n          {/* Desktop Download Button */}\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"hidden md:flex bg-blue-500 hover:bg-blue-600 disabled:bg-blue-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg items-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n\n          {/* Mobile Menu Button */}\n          <button \n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            className=\"md:hidden bg-blue-500 hover:bg-blue-600 text-white p-2 rounded-lg transition-colors\"\n          >\n            {mobileMenuOpen ? <X size={20} /> : <Menu size={20} />}\n          </button>\n        </div>\n\n        {/* Mobile Download Button */}\n        <div className=\"md:hidden mb-4\">\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"w-full bg-blue-500 hover:bg-blue-600 disabled:bg-blue-400 disabled:cursor-not-allowed text-white px-4 py-3 rounded-lg flex items-center justify-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className={`${mobileMenuOpen ? 'block' : 'hidden'} md:block mb-6 md:mb-8`}>\n          <div className=\"flex flex-col md:flex-row space-y-1 md:space-y-0 md:space-x-1 bg-white p-1 rounded-lg shadow-sm w-full md:w-fit\">\n            <button\n              onClick={() => {\n                setActiveTab('roadmap');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'roadmap'\n                  ? 'bg-blue-600 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <Map size={18} className=\"mr-2\" />\n              Roadmap\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('documentation');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'documentation'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FileText size={18} className=\"mr-2\" />\n              Documentation\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('projects');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'projects'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FolderOpen size={18} className=\"mr-2\" />\n              Projects\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('faq');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'faq'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <HelpCircle size={18} className=\"mr-2\" />\n              FAQ\n            </button>\n          </div>\n        </div>\n\n        {/* Content */}\n        {renderContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default Prompt;"],"names":[],"mappings":"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","debugId":null}}]
}