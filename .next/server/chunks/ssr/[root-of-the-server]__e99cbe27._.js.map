{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Sql/docs.jsx"],"sourcesContent":["import React from \"react\";\n\nconst docs = [\n  {\n    id: \"sql-standard\",\n    level: \"Official\",\n    title: \"SQL Standard / General SQL\",\n    description:\n      \"While the ANSI/ISO SQL standard is not freely available in full, many database vendors follow it. Wikipedia provides a good overview.\",\n    cta: \"Open Docs\",\n    url: \"https://en.wikipedia.org/wiki/ISO/IEC_9075\"\n  },\n  {\n    id: \"postgresql\",\n    level: \"Official\",\n    title: \"PostgreSQL Documentation\",\n    description:\n      \"Comprehensive PostgreSQL docs covering SQL syntax, functions, administration, and advanced database features.\",\n    cta: \"Open Docs\",\n    url: \"https://www.postgresql.org/docs/\"\n  },\n  {\n    id: \"mysql\",\n    level: \"Official\",\n    title: \"MySQL Reference Manual\",\n    description:\n      \"Detailed MySQL documentation covering SQL syntax, functions, server configuration, and optimization.\",\n    cta: \"Open Docs\",\n    url: \"https://dev.mysql.com/doc/\"\n  },\n  {\n    id: \"sql-server\",\n    level: \"Official\",\n    title: \"Microsoft SQL Server Documentation\",\n    description:\n      \"Microsoft Learn official documentation for SQL Server, including T-SQL reference and administration guides.\",\n    cta: \"Open Docs\",\n    url: \"https://learn.microsoft.com/en-us/sql/?view=sql-server-ver17\"\n  },\n  {\n    id: \"oracle-sql\",\n    level: \"Official\",\n    title: \"Oracle Database SQL Language Reference\",\n    description:\n      \"Oracle’s official SQL and PL/SQL documentation with extensive details on features, syntax, and administration.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.oracle.com/en/database/oracle/oracle-database/23/cncpt/sql.html\"\n  },\n  {\n    id: \"sqlite\",\n    level: \"Official\",\n    title: \"SQLite Documentation\",\n    description:\n      \"Authoritative documentation for SQLite including SQL syntax, pragmas, and detailed implementation notes.\",\n    cta: \"Open Docs\",\n    url: \"https://www.sqlite.org/docs.html\"\n  },\n  {\n    id: \"spark-sql\",\n    level: \"Official\",\n    title: \"Apache Spark SQL Guide\",\n    description:\n      \"Spark SQL programming guide and reference covering DataFrames, SQL syntax, and optimization techniques.\",\n    cta: \"Open Docs\",\n    url: \"https://spark.apache.org/docs/latest/sql-ref.html\"\n  },\n  {\n    id: \"mongodb\",\n    level: \"Official\",\n    title: \"MongoDB Documentation\",\n    description:\n      \"MongoDB official documentation covering CRUD, aggregation, schema design, indexing, and distributed systems.\",\n    cta: \"Open Docs\",\n    url: \"https://www.mongodb.com/docs/\"\n  },\n  // --- BI / ETL / Data Engineering Extensions ---\n  {\n    id: \"power-bi\",\n    level: \"Official\",\n    title: \"Microsoft Power BI Documentation\",\n    description:\n      \"Official Power BI documentation covering dashboards, DAX, Power Query, and enterprise BI solutions.\",\n    cta: \"Open Docs\",\n    url: \"https://learn.microsoft.com/en-us/power-bi/\"\n  },\n  {\n    id: \"tableau\",\n    level: \"Official\",\n    title: \"Tableau Documentation\",\n    description:\n      \"Official Tableau documentation for building dashboards, visualizations, and connecting to multiple data sources.\",\n    cta: \"Open Docs\",\n    url: \"https://help.tableau.com/\"\n  },\n  {\n    id: \"airflow\",\n    level: \"Official\",\n    title: \"Apache Airflow Documentation\",\n    description:\n      \"Apache Airflow docs for workflow orchestration, DAGs, scheduling, and running ETL pipelines at scale.\",\n    cta: \"Open Docs\",\n    url: \"https://airflow.apache.org/docs/\"\n  },\n  {\n    id: \"dbt\",\n    level: \"Official\",\n    title: \"dbt Documentation\",\n    description:\n      \"dbt (Data Build Tool) official documentation covering data transformations, models, testing, and deployment.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.getdbt.com/\"\n  },\n  {\n    id: \"snowflake\",\n    level: \"Official\",\n    title: \"Snowflake Documentation\",\n    description:\n      \"Snowflake cloud data platform documentation covering SQL, performance tuning, data sharing, and pipelines.\",\n    cta: \"Open Docs\",\n    url: \"https://docs.snowflake.com/\"\n  }\n];\n\nexport default function DocsCards() {\n  return (\n    <section className=\"min-h-screen bg-slate-50 py-12\">\n      <div className=\"max-w-6xl mx-auto px-6\">\n        <header className=\"mb-8\">\n          <h2 className=\"text-3xl sm:text-4xl font-extrabold text-slate-900\">\n            📘 SQL, Databases & BI/ETL — Official Documentation\n          </h2>\n          <p className=\"mt-2 text-slate-600 max-w-2xl\">\n            Explore official documentation resources every SQL developer, data\n            engineer, and BI analyst must know. These cover SQL standards,\n            databases, NoSQL, big data engines, and modern BI/ETL tools.\n          </p>\n        </header>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {docs.map((d) => (\n            <article\n              key={d.id}\n              className=\"group bg-white border border-slate-200 rounded-2xl p-6 shadow-sm hover:shadow-lg transition-transform transform hover:-translate-y-1\"\n              aria-labelledby={`${d.id}-title`}\n            >\n              <div className=\"flex items-start justify-between\">\n                <span className=\"inline-block text-xs font-medium bg-blue-50 text-indigo-700 px-2 py-1 rounded-full\">\n                  {d.level}\n                </span>\n                <a\n                  href={d.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-xs text-slate-400 hover:text-blue-600 transition\"\n                  aria-label={`Open documentation for ${d.title}`}\n                >\n                  🔗 Docs\n                </a>\n              </div>\n\n              <h3\n                id={`${d.id}-title`}\n                className=\"mt-4 text-lg font-semibold text-slate-900 group-hover:text-blue-600\"\n              >\n                {d.title}\n              </h3>\n\n              <p className=\"mt-3 text-sm text-slate-600\">{d.description}</p>\n\n              <div className=\"mt-5 flex items-center justify-between\">\n                <a\n                  href={d.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center gap-2 rounded-md bg-blue-600 text-white px-4 py-2 text-sm font-medium hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-300\"\n                >\n                  {d.cta}\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-4 w-4\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    aria-hidden=\"true\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      d=\"M14 5l7 7m0 0l-7 7m7-7H3\"\n                    />\n                  </svg>\n                </a>\n                <span className=\"text-xs text-slate-400\">Reference</span>\n              </div>\n            </article>\n          ))}\n        </div>\n\n        <footer className=\"mt-10 text-sm text-slate-500\">\n          Tip: Bookmark these resources and revisit often. Mastery in SQL +\n          Databases + BI/ETL tools is the real path to becoming an\n          industry-ready data professional.\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,OAAO;IACX;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA,iDAAiD;IACjD;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;CACD;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC;4BAAG,WAAU;sCAAqD;;;;;;sCAGnE,8OAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;;8BAO/C,8OAAC;oBAAI,WAAU;8BACZ,KAAK,GAAG,CAAC,CAAC,kBACT,8OAAC;4BAEC,WAAU;4BACV,mBAAiB,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;;8CAEhC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDACb,EAAE,KAAK;;;;;;sDAEV,8OAAC;4CACC,MAAM,EAAE,GAAG;4CACX,QAAO;4CACP,KAAI;4CACJ,WAAU;4CACV,cAAY,CAAC,uBAAuB,EAAE,EAAE,KAAK,EAAE;sDAChD;;;;;;;;;;;;8CAKH,8OAAC;oCACC,IAAI,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;oCACnB,WAAU;8CAET,EAAE,KAAK;;;;;;8CAGV,8OAAC;oCAAE,WAAU;8CAA+B,EAAE,WAAW;;;;;;8CAEzD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,MAAM,EAAE,GAAG;4CACX,QAAO;4CACP,KAAI;4CACJ,WAAU;;gDAET,EAAE,GAAG;8DACN,8OAAC;oDACC,OAAM;oDACN,WAAU;oDACV,MAAK;oDACL,SAAQ;oDACR,QAAO;oDACP,aAAa;oDACb,eAAY;8DAEZ,cAAA,8OAAC;wDACC,eAAc;wDACd,gBAAe;wDACf,GAAE;;;;;;;;;;;;;;;;;sDAIR,8OAAC;4CAAK,WAAU;sDAAyB;;;;;;;;;;;;;2BApDtC,EAAE,EAAE;;;;;;;;;;8BA0Df,8OAAC;oBAAO,WAAU;8BAA+B;;;;;;;;;;;;;;;;;AAQzD","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Sql/projects.jsx"],"sourcesContent":["import React from \"react\";\n\nconst projects = [\n  // 🌱 Beginner\n  {\n    id: \"sql-beginner-1\",\n    level: \"Phase 1 — Beginner (Foundations)\",\n    title: \"Library Management System\",\n    description:\n      \"CRUD operations, relational schema, joins. Tables: Books, Members, BorrowedBooks, Authors. Queries: borrowed/returned books, most borrowed author, overdue fines. Builds confidence in joins + relational schema design.\",\n    cta: \"Explore project\",\n    url: \"https://youtu.be/6X2-P9fNVvw?si=heGXspZbgfAmapBb\" // sample DB ref\n  },\n  {\n    id: \"sql-beginner-2\",\n    level: \"Phase 1 — Beginner (Foundations)\",\n    title: \"E-Commerce Orders Database\",\n    description:\n      \"Tables: Customers, Orders, Products, OrderDetails, Payments. Queries: Total revenue, top customers, best-selling products. Teaches analytics with foreign keys + aggregations.\",\n    cta: \"Explore project\",\n    url: \"https://youtu.be/oZRAaWAI4r0?si=ipUSAn7Ot75pWbUv\" // MySQL docs\n  },\n  {\n    id: \"sql-beginner-3\",\n    level: \"Phase 1 — Beginner (Foundations)\",\n    title: \"Student Result Management\",\n    description:\n      \"Tables: Students, Courses, Grades, Instructors. Queries: GPA calculation, top student per subject, pass/fail analysis. Builds GROUP BY + aggregations practice.\",\n    cta: \"Explore project\",\n    url: \"https://youtu.be/Zrx6hS1adQk?si=1We9v0a1n4jwItOC\" // Postgres docs\n  },\n\n  // 🌿 Intermediate\n  {\n    id: \"sql-intermediate-1\",\n    level: \"Phase 2 — Intermediate (Practical Scenarios)\",\n    title: \"Sales & Inventory Dashboard Database\",\n    description:\n      \"Tables: Products, Sales, Suppliers, Inventory. Queries: Monthly sales trends, running totals, stock alerts. Focus on CTEs, window functions, optimization. Mimics BI dashboards.\",\n    cta: \"Explore project\",\n    url: \"https://youtu.be/Qr1Go2gP8fo?si=4RuMTqQ_qpxFAlLk\" // MS SQL Server docs\n  },\n  {\n    id: \"sql-intermediate-2\",\n    level: \"Phase 2 — Intermediate (Practical Scenarios)\",\n    title: \"Hospital / Patient Management System\",\n    description:\n      \"Tables: Patients, Doctors, Appointments, Prescriptions, Billing. Queries: Doctor schedule conflicts, revenue per department, diagnosis analytics. Teaches normalization, constraints, and transactions.\",\n    cta: \"Explore project\",\n    url: \"https://youtu.be/lQ5sjfoTE-4?si=IkOyWF-SBzTZxxMH/\" // MySQL docs\n  },\n  {\n    id: \"sql-intermediate-3\",\n    level: \"Phase 2 — Intermediate (Practical Scenarios)\",\n    title: \"Banking / Finance Transaction Database\",\n    description:\n      \"Tables: Accounts, Customers, Transactions, Loans. Queries: Monthly statements, suspicious transactions, interest calculation. Focus on ACID, stored procedures, isolation levels.\",\n    cta: \"Explore project\",\n    url: \"https://youtu.be/zROvasdXSqM?si=r5FdLeiCQmaoJeeJ\"\n  },\n\n  // 🌲 Advanced\n  {\n    id: \"sql-advanced-1\",\n    level: \"Phase 3 — Advanced (Analytics & Big Data)\",\n    title: \"Movie Streaming Analytics (Netflix-like)\",\n    description:\n      \"Tables: Users, Movies, Subscriptions, WatchHistory, Ratings. Queries: Most watched genre per country, churn prediction signals, avg watch time per user. Teaches partitioning + window functions.\",\n    cta: \"Explore project\",\n    url: \"https://youtu.be/-7cT0651_lw?si=guiQquwlaTWW8pMT\" // BigQuery SQL\n  },\n  {\n    id: \"sql-advanced-2\",\n    level: \"Phase 3 — Advanced (Analytics & Big Data)\",\n    title: \"Data Warehouse (Retail Star Schema)\",\n    description:\n      \"Fact: Sales. Dimensions: Products, Customers, Time, Stores. Queries: Year-over-year growth, customer segmentation, profit by region. Learn ETL + dimensional modeling.\",\n    cta: \"Explore project\",\n    url: \"https://youtu.be/K7C1sWKQU-o?si=MSERqNgaF-cs-Ych\" // Snowflake docs\n  },\n  {\n    id: \"sql-advanced-3\",\n    level: \"Phase 3 — Advanced (Analytics & Big Data)\",\n    title: \"Log Analysis System (Big Data Style)\",\n    description:\n      \"Table: ServerLogs(user_id, action, timestamp, device, location). Queries: Peak traffic, error rates, retention cohorts. Focus: partitioning, indexing, optimization for millions of rows.\",\n    cta: \"Explore project\",\n    url: \"https://www.youtube.com/live/8YvZZPWmhzQ?si=JHkcFpvmZ2NP1WxG\"\n  },\n];\n\nexport default function ProjectCards() {\n  return (\n    <section className=\"min-h-screen bg-slate-50 py-12\">\n      <div className=\"max-w-6xl mx-auto px-6\">\n        <header className=\"mb-8\">\n          <h2 className=\"text-2xl sm:text-4xl font-extrabold text-slate-900\">\n            🏗 SQL Developer Projects Path — Beginner → Industry-Ready\n          </h2>\n          <p className=\"mt-2 text-slate-600 max-w-2xl\">\n            Build these SQL projects step by step to progress from CRUD basics\n            to advanced data analytics & warehouse design.\n          </p>\n        </header>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {projects.map((p) => (\n            <article\n              key={p.id}\n              className=\"group bg-white border border-slate-200 rounded-2xl p-6 shadow-sm hover:shadow-lg transition-transform transform hover:-translate-y-1\"\n              aria-labelledby={`${p.id}-title`}\n            >\n              <div className=\"flex items-start justify-between\">\n                <span className=\"inline-block text-xs font-medium bg-green-50 text-green-700 px-2 py-1 rounded-full\">\n                  {p.level}\n                </span>\n                <a\n                  href={p.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-xs text-slate-400 hover:text-green-600 transition\"\n                  aria-label={`Open docs for ${p.title}`}\n                >\n                  Docs ▶\n                </a>\n              </div>\n\n              <h3\n                id={`${p.id}-title`}\n                className=\"mt-4 text-lg font-semibold text-slate-900 group-hover:text-green-600\"\n              >\n                {p.title}\n              </h3>\n\n              <p className=\"mt-3 text-sm text-slate-600\">{p.description}</p>\n\n              <div className=\"mt-5 flex items-center justify-between\">\n                <a\n                  href={p.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center gap-2 rounded-md bg-green-600 text-white px-4 py-2 text-sm font-medium hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-300\"\n                >\n                  {p.cta}\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-4 w-4\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    aria-hidden=\"true\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      d=\"M14 5l7 7m0 0l-7 7m7-7H3\"\n                    />\n                  </svg>\n                </a>\n\n                <span className=\"text-xs text-slate-400\">~1–4 weeks</span>\n              </div>\n            </article>\n          ))}\n        </div>\n\n        <footer className=\"mt-10 text-sm text-slate-500\">\n          Tip: Don’t just write queries — focus on indexing, optimization, and\n          scalability. These make you truly industry-ready.\n        </footer>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,WAAW;IACf,cAAc;IACd;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK,mDAAmD,gBAAgB;IAC1E;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK,mDAAmD,aAAa;IACvE;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK,mDAAmD,gBAAgB;IAC1E;IAEA,kBAAkB;IAClB;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK,mDAAmD,qBAAqB;IAC/E;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK,oDAAoD,aAAa;IACxE;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;IAEA,cAAc;IACd;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK,mDAAmD,eAAe;IACzE;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK,mDAAmD,iBAAiB;IAC3E;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;QACP,aACE;QACF,KAAK;QACL,KAAK;IACP;CACD;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC;4BAAG,WAAU;sCAAqD;;;;;;sCAGnE,8OAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;;8BAM/C,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,kBACb,8OAAC;4BAEC,WAAU;4BACV,mBAAiB,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;;8CAEhC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDACb,EAAE,KAAK;;;;;;sDAEV,8OAAC;4CACC,MAAM,EAAE,GAAG;4CACX,QAAO;4CACP,KAAI;4CACJ,WAAU;4CACV,cAAY,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE;sDACvC;;;;;;;;;;;;8CAKH,8OAAC;oCACC,IAAI,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC;oCACnB,WAAU;8CAET,EAAE,KAAK;;;;;;8CAGV,8OAAC;oCAAE,WAAU;8CAA+B,EAAE,WAAW;;;;;;8CAEzD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,MAAM,EAAE,GAAG;4CACX,QAAO;4CACP,KAAI;4CACJ,WAAU;;gDAET,EAAE,GAAG;8DACN,8OAAC;oDACC,OAAM;oDACN,WAAU;oDACV,MAAK;oDACL,SAAQ;oDACR,QAAO;oDACP,aAAa;oDACb,eAAY;8DAEZ,cAAA,8OAAC;wDACC,eAAc;wDACd,gBAAe;wDACf,GAAE;;;;;;;;;;;;;;;;;sDAKR,8OAAC;4CAAK,WAAU;sDAAyB;;;;;;;;;;;;;2BArDtC,EAAE,EAAE;;;;;;;;;;8BA2Df,8OAAC;oBAAO,WAAU;8BAA+B;;;;;;;;;;;;;;;;;AAOzD","debugId":null}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Sql/faq.jsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from \"react\";\nimport { ChevronDown, ChevronUp } from \"lucide-react\";\n\nconst faqs = [\n  {\n    question: \"What is SQL and why should I learn it?\",\n    answer:\n      \"SQL (Structured Query Language) is the standard language for managing relational databases. It’s essential for developers, analysts, and data engineers to query, analyze, and manipulate data. Almost every industry uses SQL.\"\n  },\n  {\n    question: \"Which SQL database should I start with?\",\n    answer:\n      \"Start with MySQL or PostgreSQL since they’re open-source and widely used. Once comfortable, you can explore MS SQL Server, Oracle, or cloud databases like Snowflake and BigQuery depending on your career path.\"\n  },\n  {\n    question: \"What’s the difference between SQL and NoSQL?\",\n    answer:\n      \"SQL databases are relational, use structured schema, and support complex joins. NoSQL databases (like MongoDB) are schema-less, good for unstructured data, and scale horizontally. SQL is still the backbone for transactional and analytical systems.\"\n  },\n  {\n    question: \"How do I design a good database schema?\",\n    answer:\n      \"Follow normalization rules (1NF, 2NF, 3NF) to avoid redundancy, define primary/foreign keys, use proper data types, and ensure indexes on frequently queried columns. Start normalized, then denormalize for performance if needed.\"\n  },\n  {\n    question: \"What are indexes and why are they important?\",\n    answer:\n      \"Indexes speed up read queries by creating quick lookup structures. However, they slow down writes (INSERT/UPDATE/DELETE). The key is to balance indexing: only index columns used in filtering, joins, or ordering.\"\n  },\n  {\n    question: \"What’s the difference between INNER JOIN, LEFT JOIN, and RIGHT JOIN?\",\n    answer:\n      \"INNER JOIN returns only matching rows. LEFT JOIN returns all rows from the left table and matches from the right. RIGHT JOIN does the opposite. Understanding joins is crucial for combining data across tables.\"\n  },\n  {\n    question: \"What are ACID properties in databases?\",\n    answer:\n      \"ACID stands for Atomicity, Consistency, Isolation, and Durability. These properties ensure reliability of transactions (like banking). SQL developers must design queries and transactions that respect ACID guarantees.\"\n  },\n  {\n    question: \"How do I optimize slow SQL queries?\",\n    answer:\n      \"Common techniques include: using indexes, avoiding SELECT *, analyzing execution plans, rewriting subqueries with JOIN/CTEs, partitioning large tables, and caching results when possible.\"\n  },\n  {\n    question: \"What’s the role of stored procedures, functions, and triggers?\",\n    answer:\n      \"Stored procedures encapsulate business logic in the database, functions return computed results, and triggers automatically execute logic on data changes. They help centralize logic but should be used carefully to avoid performance issues.\"\n  },\n  {\n    question: \"How can I become industry-ready as an SQL Developer?\",\n    answer:\n      \"1) Master CRUD, joins, and aggregations. 2) Learn indexing and query optimization. 3) Work on real projects (e-commerce, banking, analytics). 4) Understand data warehousing & ETL. 5) Practice with large datasets for performance tuning.\"\n  }\n];\n\nexport default function FAQ() {\n  const [openIndex, setOpenIndex] = useState(null);\n\n  const toggleFAQ = (index) => {\n    setOpenIndex(openIndex === index ? null : index);\n  };\n\n  return (\n    <section className=\"bg-white py-12\">\n      <div className=\"max-w-4xl mx-auto px-6\">\n        <h2 className=\"text-2xl sm:text-4xl font-extrabold text-slate-900 mb-8\">\n          ❓ SQL Developer Roadmap — Frequently Asked Questions\n        </h2>\n        <div className=\"space-y-4\">\n          {faqs.map((faq, index) => (\n            <div\n              key={index}\n              className=\"border border-slate-200 rounded-xl shadow-sm\"\n            >\n              <button\n                className=\"w-full flex items-center justify-between p-4 text-left\"\n                onClick={() => toggleFAQ(index)}\n              >\n                <span className=\"font-medium text-slate-800\">{faq.question}</span>\n                {openIndex === index ? (\n                  <ChevronUp className=\"h-5 w-5 text-slate-500\" />\n                ) : (\n                  <ChevronDown className=\"h-5 w-5 text-slate-500\" />\n                )}\n              </button>\n              {openIndex === index && (\n                <div className=\"px-4 pb-4 text-slate-600 text-sm\">\n                  {faq.answer}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAFA;;;;AAIA,MAAM,OAAO;IACX;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;IACA;QACE,UAAU;QACV,QACE;IACJ;CACD;AAEc,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,YAAY,CAAC;QACjB,aAAa,cAAc,QAAQ,OAAO;IAC5C;IAEA,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA0D;;;;;;8BAGxE,8OAAC;oBAAI,WAAU;8BACZ,KAAK,GAAG,CAAC,CAAC,KAAK,sBACd,8OAAC;4BAEC,WAAU;;8CAEV,8OAAC;oCACC,WAAU;oCACV,SAAS,IAAM,UAAU;;sDAEzB,8OAAC;4CAAK,WAAU;sDAA8B,IAAI,QAAQ;;;;;;wCACzD,cAAc,sBACb,8OAAC,gNAAA,CAAA,YAAS;4CAAC,WAAU;;;;;iEAErB,8OAAC,oNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;;;;;;;gCAG1B,cAAc,uBACb,8OAAC;oCAAI,WAAU;8CACZ,IAAI,MAAM;;;;;;;2BAhBV;;;;;;;;;;;;;;;;;;;;;AAyBnB","debugId":null}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Sql/downloadPdf.jsx"],"sourcesContent":["import React from 'react';\nimport { Document, Page, Text, View, StyleSheet, PDFDownloadLink, pdf } from '@react-pdf/renderer';\nimport { saveAs } from 'file-saver';\n\n// Define styles for the PDF\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    backgroundColor: '#f8fafc',\n    padding: 30,\n    fontFamily: 'Helvetica',\n  },\n  header: {\n    marginBottom: 30,\n    textAlign: 'center',\n    paddingBottom: 20,\n    borderBottomWidth: 2,\n    borderBottomColor: '#3b82f6',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6b7280',\n    fontWeight: 'normal',\n  },\n  phaseContainer: {\n    marginBottom: 25,\n    backgroundColor: '#ffffff',\n    borderRadius: 8,\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#e5e7eb',\n  },\n  phaseHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  phaseNumber: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: '#3b82f6',\n    color: '#ffffff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    lineHeight: 40,\n    marginRight: 15,\n  },\n  phaseTitleContainer: {\n    flex: 1,\n  },\n  phaseTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1f2937',\n    marginBottom: 2,\n  },\n  phaseSubtitle: {\n    fontSize: 12,\n    color: '#6b7280',\n    marginBottom: 2,\n  },\n  phaseDescription: {\n    fontSize: 14,\n    color: '#374151',\n    fontWeight: 'normal',\n  },\n  sectionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 15,\n  },\n  section: {\n    flex: '1 1 45%',\n    backgroundColor: '#f8fafc',\n    borderRadius: 6,\n    padding: 15,\n    borderLeftWidth: 4,\n    borderLeftColor: '#3b82f6',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#3b82f6',\n    marginBottom: 10,\n  },\n  itemsList: {\n    gap: 6,\n  },\n  item: {\n    fontSize: 11,\n    color: '#374151',\n    lineHeight: 1.4,\n    paddingLeft: 12,\n    marginBottom: 4,\n  },\n  itemNumber: {\n    fontWeight: 'bold',\n    color: '#1f2937',\n  },\n  phaseConnector: {\n    alignSelf: 'center',\n    marginVertical: 15,\n    paddingVertical: 8,\n    paddingHorizontal: 20,\n    backgroundColor: '#f3f4f6',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#d1d5db',\n  },\n  connectorText: {\n    fontSize: 12,\n    color: '#6b7280',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  footer: {\n    marginTop: 30,\n    padding: 20,\n    backgroundColor: '#ecfdf5',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#10b981',\n    textAlign: 'center',\n  },\n  footerTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#065f46',\n    marginBottom: 8,\n  },\n  footerText: {\n    fontSize: 14,\n    color: '#047857',\n    lineHeight: 1.5,\n  },\n  pageNumber: {\n    position: 'absolute',\n    fontSize: 10,\n    bottom: 20,\n    right: 30,\n    color: '#6b7280',\n  },\n  watermark: {\n    position: 'absolute',\n    top: 50,\n    right: 30,\n    fontSize: 8,\n    color: '#d1d5db',\n    opacity: 0.5,\n  }\n});\n\n// PDF Document Component\nconst RoadmapPDFDocument = ({ phases }) => (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      {/* Header */}\n      <View style={styles.header}>\n        <Text style={styles.title}>SQL Engineer Roadmap</Text>\n        <Text style={styles.subtitle}>Your Complete Journey from Beginner to Professional</Text>\n      </View>\n\n\n\n      {/* Phases */}\n      {phases.map((phase, index) => (\n        <View key={phase.id} wrap={false}>\n          <View style={styles.phaseContainer}>\n            {/* Phase Header */}\n            <View style={styles.phaseHeader}>\n              <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                {phase.id}\n              </Text>\n              <View style={styles.phaseTitleContainer}>\n                <Text style={styles.phaseTitle}>{phase.title}</Text>\n                <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                <Text style={styles.phaseDescription}>{phase.description}</Text>\n              </View>\n            </View>\n\n            {/* Sections */}\n            <View style={styles.sectionsContainer}>\n              {phase.sections.map((section, sectionIndex) => (\n                <View key={sectionIndex} style={styles.section}>\n                  <Text style={styles.sectionTitle}>{section.title}</Text>\n                  <View style={styles.itemsList}>\n                    {section.items.map((item, itemIndex) => (\n                      <Text key={itemIndex} style={styles.item}>\n                        <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                      </Text>\n                    ))}\n                  </View>\n                </View>\n              ))}\n            </View>\n          </View>\n\n          {/* Phase Connector */}\n          {index < phases.length - 1 && (\n            <View style={styles.phaseConnector}>\n              <Text style={styles.connectorText}>\n                ↓ Next: Phase {phase.id + 1}\n              </Text>\n            </View>\n          )}\n        </View>\n      ))}\n\n\n\n      {/* Page Number */}\n      <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n        `${pageNumber} / ${totalPages}`\n      )} fixed />\n    </Page>\n  </Document>\n);\n\n// Helper function to convert Tailwind colors to hex\nconst getPhaseColor = (tailwindColor) => {\n  const colorMap = {\n    'bg-blue-500': '#3b82f6',\n    'bg-purple-500': '#8b5cf6',\n    'bg-green-500': '#10b981',\n    'bg-orange-500': '#f59e0b',\n    'bg-red-500': '#ef4444',\n  };\n  return colorMap[tailwindColor] || '#3b82f6';\n};\n\n// Main download function\nexport const downloadRoadmapPDF = async (phases) => {\n  try {\n    // Create the PDF blob\n    const blob = await pdf(<RoadmapPDFDocument phases={phases} />).toBlob();\n\n    // Generate filename with current date\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `SQL-Engineer-roadmap-${currentDate}.pdf`;\n\n    // Save the file\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating PDF:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// React Component for PDF Download Link (alternative approach)\nexport const PDFDownloadButton = ({ phases, className = \"\", children = \"Download PDF\" }) => (\n  <PDFDownloadLink\n    document={<RoadmapPDFDocument phases={phases} />}\n    fileName={`SQL-Engineer-roadmap-${new Date().toISOString().split('T')[0]}.pdf`}\n    className={className}\n  >\n    {({ blob, url, loading, error }) => {\n      if (loading) return 'Generating PDF...';\n      if (error) return 'Error generating PDF';\n      return children;\n    }}\n  </PDFDownloadLink>\n  );\n\n// Advanced PDF generation with custom options\nexport const downloadAdvancedRoadmapPDF = async (phases, options = {}) => {\n  const {\n    includeWatermark = true,\n    customTitle = \"SQL Developer Roadmap\",\n    customSubtitle = \"Your Complete Journey from Beginner to Professional\",\n    pageSize = \"A4\",\n    orientation = \"portrait\"\n  } = options;\n\n  try {\n    const AdvancedPDFDocument = () => (\n      <Document>\n        <Page size={pageSize} orientation={orientation} style={styles.page}>\n          {/* Custom Header */}\n          <View style={styles.header}>\n            <Text style={styles.title}>{customTitle}</Text>\n            <Text style={styles.subtitle}>{customSubtitle}</Text>\n          </View>\n\n\n          {/* Content remains the same */}\n          {phases.map((phase, index) => (\n            <View key={phase.id} wrap={false}>\n              <View style={styles.phaseContainer}>\n                <View style={styles.phaseHeader}>\n                  <Text style={[styles.phaseNumber, { backgroundColor: getPhaseColor(phase.color) }]}>\n                    {phase.id}\n                  </Text>\n                  <View style={styles.phaseTitleContainer}>\n                    <Text style={styles.phaseTitle}>{phase.title}</Text>\n                    <Text style={styles.phaseSubtitle}>{phase.subtitle}</Text>\n                    <Text style={styles.phaseDescription}>{phase.description}</Text>\n                  </View>\n                </View>\n\n                <View style={styles.sectionsContainer}>\n                  {phase.sections.map((section, sectionIndex) => (\n                    <View key={sectionIndex} style={styles.section}>\n                      <Text style={styles.sectionTitle}>{section.title}</Text>\n                      <View style={styles.itemsList}>\n                        {section.items.map((item, itemIndex) => (\n                          <Text key={itemIndex} style={styles.item}>\n                            <Text style={styles.itemNumber}>{itemIndex + 1}.</Text> {item}\n                          </Text>\n                        ))}\n                      </View>\n                    </View>\n                  ))}\n                </View>\n              </View>\n\n              {index < phases.length - 1 && (\n                <View style={styles.phaseConnector}>\n                  <Text style={styles.connectorText}>\n                    ↓ Next: Phase {phase.id + 1}\n                  </Text>\n                </View>\n              )}\n            </View>\n          ))}\n\n          <View style={styles.footer}>\n            <Text style={styles.footerTitle}>🎉 Congratulations!</Text>\n            <Text style={styles.footerText}>\n              You've completed the SQL Developer Roadmap and are now ready to take on professional  challenges.\n            </Text>\n          </View>\n\n          <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n            `${pageNumber} / ${totalPages}`\n          )} fixed />\n        </Page>\n      </Document>\n    );\n\n    const blob = await pdf(<AdvancedPDFDocument />).toBlob();\n    const currentDate = new Date().toISOString().split('T')[0];\n    const filename = `${customTitle.toLowerCase().replace(/\\s+/g, '-')}-${currentDate}.pdf`;\n\n    saveAs(blob, filename);\n\n    return { success: true, filename };\n  } catch (error) {\n    console.error('Error generating advanced PDF:', error);\n    return { success: false, error: error.message };\n  }\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1379, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Sql/roadmapData.js"],"sourcesContent":["// roadmapData.js - SQL Mastery Roadmap Data\n\nexport const phases = [\n  {\n    id: 1,\n    title: \"Beginner Foundations (Core SQL)\",\n    subtitle: \"Foundational Level\",\n    description: \"Learn syntax, querying basics, and understanding relational databases\",\n    color: \"bg-green-500\",\n    sections: [\n      {\n        title: \"Introduction to Databases\",\n        items: [\n          \"Database Fundamentals → What is a Database, DBMS vs RDBMS\",\n          \"Database Structure → Tables, rows, columns, schema\",\n          \"Key Concepts → Primary Key, Foreign Key, Constraints\"\n        ]\n      },\n      {\n        title: \"Basic SQL Queries\",\n        items: [\n          \"Core Syntax → SELECT, FROM, WHERE clauses\",\n          \"Filtering Data → AND, OR, BETWEEN, IN, LIKE, IS NULL operators\",\n          \"Sorting Results → ORDER BY for ascending/descending sort\",\n          \"Limiting Results → LIMIT, TOP for result pagination\"\n        ]\n      },\n      {\n        title: \"Aggregations & Grouping\",\n        items: [\n          \"Aggregate Functions → COUNT, SUM, AVG, MIN, MAX\",\n          \"Grouping Data → GROUP BY for categorical aggregation\",\n          \"Filter Groups → HAVING clause for filtered aggregations\"\n        ]\n      },\n      {\n        title: \"Joins (Very Important)\",\n        items: [\n          \"INNER JOIN → Matching records from both tables\",\n          \"Outer Joins → LEFT JOIN, RIGHT JOIN for inclusive results\",\n          \"FULL OUTER JOIN → All records from both tables\",\n          \"CROSS JOIN → Cartesian product of tables\",\n          \"Self Joins → Joining a table to itself\"\n        ]\n      },\n      {\n        title: \"Set Operations\",\n        items: [\n          \"UNION → Combine results removing duplicates\",\n          \"UNION ALL → Combine results keeping duplicates\",\n          \"INTERSECT → Common records between queries\",\n          \"EXCEPT → Records in first query but not second\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 2,\n    title: \"Intermediate SQL (Data Handling)\",\n    subtitle: \"Intermediate Level\",\n    description: \"Advanced querying, data manipulation, schema management\",\n    color: \"bg-blue-500\",\n    sections: [\n      {\n        title: \"Data Manipulation\",\n        items: [\n          \"Insert Operations → INSERT for adding new records\",\n          \"Update Operations → UPDATE for modifying existing data\",\n          \"Delete Operations → DELETE for removing records\",\n          \"Transactions → BEGIN, COMMIT, ROLLBACK for data consistency\",\n          \"Bulk Operations → Bulk Insert for multiple records\"\n        ]\n      },\n      {\n        title: \"Constraints & Data Integrity\",\n        items: [\n          \"Column Constraints → NOT NULL, DEFAULT, UNIQUE\",\n          \"Referential Integrity → Primary & Foreign Keys\",\n          \"CHECK Constraints → Custom validation rules\"\n        ]\n      },\n      {\n        title: \"Views\",\n        items: [\n          \"Simple Views → Virtual tables from queries\",\n          \"Indexed Views → Views with physical storage\",\n          \"Materialized Views → Pre-computed results for performance\"\n        ]\n      },\n      {\n        title: \"Subqueries & CTEs\",\n        items: [\n          \"Scalar Subqueries → Single value subqueries\",\n          \"Correlated Subqueries → Row-by-row dependent queries\",\n          \"Common Table Expressions → WITH clause for readable queries\",\n          \"Recursive CTEs → Self-referencing hierarchical queries\"\n        ]\n      },\n      {\n        title: \"Window Functions (Must Learn)\",\n        items: [\n          \"Ranking Functions → ROW_NUMBER(), RANK(), DENSE_RANK()\",\n          \"Running Calculations → SUM() OVER for cumulative totals\",\n          \"Lead & Lag → LAG(), LEAD() for time-based comparisons\",\n          \"Partitioning → OVER (PARTITION BY ...) for grouped calculations\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 3,\n    title: \"Database Design & Schema Mastery\",\n    subtitle: \"Advanced Level\",\n    description: \"Industry-ready schema design and normalization\",\n    color: \"bg-purple-500\",\n    sections: [\n      {\n        title: \"Normalization\",\n        items: [\n          \"Normal Forms → 1NF, 2NF, 3NF, BCNF, 4NF, 5NF progression\",\n          \"Design Goals → Why normalization matters, avoiding redundancy\",\n          \"Data Integrity → Ensuring consistency across tables\"\n        ]\n      },\n      {\n        title: \"Denormalization\",\n        items: [\n          \"Performance Trade-offs → When to use denormalization\",\n          \"Design Decisions → Balancing normalization vs performance\",\n          \"Use Cases → Read-heavy systems, reporting databases\"\n        ]\n      },\n      {\n        title: \"ER Diagrams\",\n        items: [\n          \"Entity Modeling → Entities, Attributes, Relationships\",\n          \"Cardinality → One-to-One, One-to-Many relationships\",\n          \"Complex Relations → Many-to-Many with junction tables\"\n        ]\n      },\n      {\n        title: \"Indexes\",\n        items: [\n          \"Index Types → Clustered vs Non-Clustered indexes\",\n          \"Composite Indexes → Multi-column index strategies\",\n          \"Covering Indexes → Indexes that contain all query columns\",\n          \"Best Practices → When and how to index effectively\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 4,\n    title: \"Advanced SQL & Optimization\",\n    subtitle: \"Expert Level\",\n    description: \"Production-level query tuning and database performance\",\n    color: \"bg-red-500\",\n    sections: [\n      {\n        title: \"Query Optimization\",\n        items: [\n          \"Execution Plans → Understanding query execution paths\",\n          \"Cost Analysis → Cost-based optimization strategies\",\n          \"Query Refactoring → Reducing nested subqueries\",\n          \"Index Usage → Using indexes properly for performance\"\n        ]\n      },\n      {\n        title: \"Transactions & Concurrency\",\n        items: [\n          \"ACID Properties → Atomicity, Consistency, Isolation, Durability\",\n          \"Isolation Levels → READ UNCOMMITTED, READ COMMITTED, REPEATABLE READ, SERIALIZABLE\",\n          \"Deadlock Management → Deadlocks and how to avoid them\",\n          \"Lock Types → Shared locks, exclusive locks, row-level locking\"\n        ]\n      },\n      {\n        title: \"Stored Procedures & Functions\",\n        items: [\n          \"User-defined Functions → Creating custom UDFs\",\n          \"Stored Procedures → Parameterized stored procedures\",\n          \"Error Handling → Exception handling in stored procedures\",\n          \"Performance → When to use procedures vs inline queries\"\n        ]\n      },\n      {\n        title: \"Triggers\",\n        items: [\n          \"Trigger Types → AFTER INSERT, AFTER UPDATE, AFTER DELETE\",\n          \"Use Cases → Audit trails, data validation, cascading updates\",\n          \"Risks → Performance impact, debugging challenges\"\n        ]\n      },\n      {\n        title: \"Partitioning & Sharding\",\n        items: [\n          \"Partitioning Types → Horizontal vs Vertical partitioning\",\n          \"Table Partitioning → Range, list, hash partitioning strategies\",\n          \"Sharding Concepts → Database scaling across servers\",\n          \"Big Data → Handling large-scale datasets\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 5,\n    title: \"Industry Ready Skills\",\n    subtitle: \"Production Level\",\n    description: \"Work in production systems, integrate with applications\",\n    color: \"bg-orange-500\",\n    sections: [\n      {\n        title: \"SQL in Different Databases\",\n        items: [\n          \"Database Variants → MySQL, PostgreSQL, SQL Server, Oracle differences\",\n          \"PostgreSQL Advanced → JSONB, CTE recursion, full-text search\",\n          \"Database Selection → Choosing the right database for use case\"\n        ]\n      },\n      {\n        title: \"NoSQL & SQL Hybrid Knowledge\",\n        items: [\n          \"NoSQL Comparison → MongoDB vs SQL databases\",\n          \"JSON Support → PostgreSQL JSON queries and operations\",\n          \"Hybrid Approach → When to use SQL vs NoSQL\",\n          \"Polyglot Persistence → Using multiple database types\"\n        ]\n      },\n      {\n        title: \"ETL & Data Engineering\",\n        items: [\n          \"ETL Concepts → Extract, Transform, Load with SQL\",\n          \"Data Pipelines → Using SQL in data pipelines\",\n          \"Python Integration → Pandas + SQLAlchemy for data workflows\",\n          \"Data Quality → Validation and cleansing in SQL\"\n        ]\n      },\n      {\n        title: \"Analytics & BI Tools\",\n        items: [\n          \"BI Integration → SQL in Power BI, Tableau dashboards\",\n          \"Dashboard Optimization → Writing optimized queries for reporting\",\n          \"Time-series Analytics → Temporal queries and trends\",\n          \"KPI Calculations → Business metrics and aggregations\"\n        ]\n      },\n      {\n        title: \"Big Data SQL\",\n        items: [\n          \"Distributed SQL → Spark SQL, HiveQL basics\",\n          \"Data Lakes → Working with partitioned tables\",\n          \"Columnar Formats → Parquet, ORC file formats\",\n          \"Query Federation → Querying across multiple sources\"\n        ]\n      }\n    ]\n  },\n  {\n    id: 6,\n    title: \"Expert / Industry Mastery\",\n    subtitle: \"Mastery Level\",\n    description: \"Master complex real-world use cases\",\n    color: \"bg-gray-800\",\n    sections: [\n      {\n        title: \"Advanced Performance Engineering\",\n        items: [\n          \"Index Tuning → Index tuning advisor, optimization tools\",\n          \"Caching Strategies → Database caching, query result caching\",\n          \"Query Optimization → Optimizing high-traffic queries\",\n          \"Monitoring → Performance monitoring and alerting\"\n        ]\n      },\n      {\n        title: \"Security & Compliance\",\n        items: [\n          \"Access Control → Role-based access control (RBAC)\",\n          \"Row-level Security → Fine-grained data access (RLS)\",\n          \"Data Encryption → Encryption at rest and in transit\",\n          \"Compliance → GDPR, HIPAA, data privacy regulations\"\n        ]\n      },\n      {\n        title: \"DevOps for SQL\",\n        items: [\n          \"Schema Migration → Database migrations with Liquibase, Flyway\",\n          \"CI/CD Pipelines → Automated SQL schema updates\",\n          \"Version Control → Git strategies for database changes\",\n          \"Backup & Recovery → Backup strategies, disaster recovery\"\n        ]\n      },\n      {\n        title: \"Case Studies (Real World)\",\n        items: [\n          \"E-commerce Scale → Handling millions of records in transactions\",\n          \"Financial Systems → Optimizing financial transaction queries\",\n          \"Analytics Architecture → Scalable architecture for analytics\",\n          \"High Availability → Replication, failover strategies\"\n        ]\n      },\n      {\n        title: \"Capstone Projects\",\n        items: [\n          \"Data Warehouse → Design & optimize Star Schema, Snowflake Schema\",\n          \"Reporting Dashboard → Build dashboard using SQL + BI tool\",\n          \"Large Dataset → Optimize queries for 10M+ row dataset\",\n          \"Production System → End-to-end database system design\"\n        ]\n      }\n    ]\n  }\n];"],"names":[],"mappings":"AAAA,4CAA4C;;;;AAErC,MAAM,SAAS;IACpB;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,aAAa;QACb,OAAO;QACP,UAAU;YACR;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;YACH;SACD;IACH;CACD","debugId":null}},
    {"offset": {"line": 1699, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Roadmaps/Sql/page.jsx"],"sourcesContent":["\"use client\"\nimport React, { useState } from 'react';\nimport { Building2, Download, Map, FileText, FolderOpen, HelpCircle, ChevronDown, Menu, X, Loader2,capstoneProjects} from 'lucide-react';\nimport Docs from './docs';\nimport Projects from './projects';\nimport Faq from './faq';\nimport { downloadRoadmapPDF } from './downloadPdf';\nimport { phases } from './roadmapData';\n\nconst SQL = () => {\n  const [activeTab, setActiveTab] = useState('roadmap');\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  // Handle PDF download with loading state\n  const handlePDFDownload = async () => {\n    setIsDownloading(true);\n    try {\n      const result = await downloadRoadmapPDF(phases);\n      if (result.success) {\n        console.log(`PDF downloaded successfully: ${result.filename}`);\n      } else {\n        console.error('PDF download failed:', result.error);\n      }\n    } catch (error) {\n      console.error('PDF download error:', error);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'documentation':\n        return <Docs />;\n      case 'projects':\n        return <Projects />;\n      case 'faq':\n        return <Faq />;\n      default:\n        return (\n          <div className=\"relative\">\n            {/* Timeline */}\n            <div className=\"flex flex-col space-y-8 md:space-y-12\">\n              {phases.map((phase, index) => (\n                <div key={phase.id} className=\"relative\">\n                  {/* Connection Line */}\n                  {index < phases.length - 1 && (\n                    <div className=\"absolute left-1/2 transform -translate-x-1/2 top-full h-8 md:h-12 w-0.5 md:w-1 bg-gray-300 z-10\"></div>\n                  )}\n\n                  {/* Phase Card */}\n                  <div className=\"flex flex-col items-center\">\n                    {/* Phase Header */}\n                    <div className=\"text-center mb-4 md:mb-6 px-4\">\n                      <div className={`inline-block ${phase.color} text-white px-4 md:px-6 py-2 md:py-3 rounded-lg font-semibold text-base md:text-lg mb-2`}>\n                        Phase {phase.id}: {phase.title}\n                      </div>\n                      <p className=\"text-gray-600 text-xs md:text-sm\">{phase.subtitle}</p>\n                      <p className=\"text-gray-800 font-medium mt-1 text-sm md:text-base\">{phase.description}</p>\n                    </div>\n\n                    {/* Phase Content */}\n                    <div className=\"w-full max-w-6xl px-4\">\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4 md:gap-6\">\n                        {phase.sections.map((section, sectionIndex) => (\n                          <div\n                            key={sectionIndex}\n                            className=\"bg-white rounded-lg border-2 border-blue-200 p-4 md:p-6 shadow-sm hover:shadow-md transition-shadow\"\n                          >\n                            <h3 className=\"text-blue-600 font-semibold text-base md:text-lg mb-3 md:mb-4\">\n                              {section.title}\n                            </h3>\n                            <ol className=\"space-y-2\">\n                              {section.items.map((item, itemIndex) => (\n                                <li key={itemIndex} className=\"text-gray-700 text-xs md:text-sm leading-relaxed\">\n                                  <span className=\"font-medium text-gray-900\">{itemIndex + 1}.</span> {item}\n                                </li>\n                              ))}\n                            </ol>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Step Indicators */}\n                    {index < phases.length - 1 && (\n                      <div className=\"mt-6 md:mt-8 flex items-center space-x-2 md:space-x-4\">\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform -rotate-12\">\n                          Phase {phase.id}\n                        </div>\n                        <ChevronDown className=\"text-gray-400\" size={20} />\n                        <div className=\"text-gray-500 font-medium text-xs md:text-sm transform rotate-12\">\n                          Phase {phase.id + 1}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n\n\n\n\n\n\n            {/* Final Message */}\n            <div className=\"text-center mt-8 md:mt-12 mx-4 p-6 md:p-8 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-gray-900 mb-4\">\n                🏆 Final Tips to Become Industry-Ready SQL Engineer\n              </h2>\n              <p className=\"text-gray-700 text-base md:text-lg mb-4\">\n                Congratulations! You've completed the SQL Engineer Mastery Roadmap and are ready to design scalable, robust systems.\n              </p>\n\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 md:px-6 py-4 md:py-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6 md:mb-8\">\n          <div className=\"flex items-center space-x-2 md:space-x-4\">\n            <Building2 className=\"text-blue-600\" size={32} />\n            <h1 className=\"text-xl md:text-3xl font-bold text-gray-900\">\n              SQL<span className=\"text-blue-600\">Mastery Roadmap</span>\n              <span className=\"text-sm md:text-base font-normal text-gray-600 ml-2\">(2025 Edition)</span>\n            </h1>\n          </div>\n\n          {/* Desktop Download Button */}\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"hidden md:flex bg-red-500 hover:bg-red-600 disabled:bg-red-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg items-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n\n          {/* Mobile Menu Button */}\n          <button \n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            className=\"md:hidden bg-blue-500 hover:bg-blue-600 text-white p-2 rounded-lg transition-colors\"\n          >\n            {mobileMenuOpen ? <X size={20} /> : <Menu size={20} />}\n          </button>\n        </div>\n\n        {/* Mobile Download Button */}\n        <div className=\"md:hidden mb-4\">\n          <button \n            onClick={handlePDFDownload}\n            disabled={isDownloading}\n            className=\"w-full bg-red-500 hover:bg-red-600 disabled:bg-red-400 disabled:cursor-not-allowed text-white px-4 py-3 rounded-lg flex items-center justify-center space-x-2 transition-colors\"\n          >\n            {isDownloading ? (\n              <Loader2 size={18} className=\"animate-spin\" />\n            ) : (\n              <Download size={18} />\n            )}\n            <span>{isDownloading ? 'Generating PDF...' : 'Download PDF'}</span>\n          </button>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className={`${mobileMenuOpen ? 'block' : 'hidden'} md:block mb-6 md:mb-8`}>\n          <div className=\"flex flex-col md:flex-row space-y-1 md:space-y-0 md:space-x-1 bg-white p-1 rounded-lg shadow-sm w-full md:w-fit\">\n            <button\n              onClick={() => {\n                setActiveTab('roadmap');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'roadmap'\n                  ? 'bg-blue-600 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <Map size={18} className=\"mr-2\" />\n              Roadmap\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('documentation');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'documentation'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FileText size={18} className=\"mr-2\" />\n              Documentation\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('projects');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'projects'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <FolderOpen size={18} className=\"mr-2\" />\n              Projects\n            </button>\n            <button\n              onClick={() => {\n                setActiveTab('faq');\n                setMobileMenuOpen(false);\n              }}\n              className={`px-4 md:px-6 py-3 md:py-2 rounded-md font-medium transition-colors flex items-center justify-center md:justify-start ${\n                activeTab === 'faq'\n                  ? 'bg-blue-500 text-white'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <HelpCircle size={18} className=\"mr-2\" />\n              FAQ\n            </button>\n          </div>\n        </div>\n\n        {/* Content */}\n        {renderContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default SQL;"],"names":[],"mappings":"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","debugId":null}}]
}