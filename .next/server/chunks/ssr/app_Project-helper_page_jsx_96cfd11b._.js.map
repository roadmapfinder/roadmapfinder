{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/Project-helper/page.jsx"],"sourcesContent":["\n\"use client\";\nimport React, { useState } from \"react\";\nimport {\n  Search,\n  Loader2,\n  CheckCircle,\n  AlertCircle,\n  Brain,\n  Lightbulb,\n  Code,\n  Database,\n  Globe,\n  Smartphone,\n  Cpu,\n  Palette,\n  Copy,\n  Terminal,\n  Clock,\n  AlertTriangle,\n  FileText,\n  ChevronDown,\n  ChevronUp,\n  Play,\n  Package,\n} from \"lucide-react\";\n\nexport default function ProjectGeneratorApp() {\n  const [projectIdea, setProjectIdea] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [copiedText, setCopiedText] = useState(\"\");\n  const [expandedPhases, setExpandedPhases] = useState({});\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!projectIdea.trim()) return;\n\n    setIsLoading(true);\n    setError(\"\");\n    setResult(null);\n\n    try {\n      const response = await fetch(\"/api/generate-project\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ projectIdea }),\n      });\n\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error || \"Failed to generate project\");\n\n      setResult(data);\n      setActiveTab(\"overview\");\n      // Expand first phase by default\n      if (data.roadmap?.length > 0) {\n        setExpandedPhases({ 0: true });\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const copyToClipboard = async (text, identifier) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopiedText(identifier);\n      setTimeout(() => setCopiedText(\"\"), 2000);\n    } catch (err) {\n      console.error(\"Failed to copy text:\", err);\n    }\n  };\n\n  const togglePhase = (index) => {\n    setExpandedPhases(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty?.toLowerCase()) {\n      case 'beginner': return 'text-green-600 bg-green-50';\n      case 'intermediate': return 'text-yellow-600 bg-yellow-50';\n      case 'advanced': return 'text-red-600 bg-red-50';\n      default: return 'text-gray-600 bg-gray-50';\n    }\n  };\n\n  const projectTypes = [\n    { icon: Globe, label: \"Web App\", example: \"E-commerce platform with user authentication\" },\n    { icon: Smartphone, label: \"Mobile App\", example: \"Fitness tracking app with social features\" },\n    { icon: Brain, label: \"AI/ML Project\", example: \"Image recognition system for medical diagnosis\" },\n    { icon: Database, label: \"Backend API\", example: \"RESTful API for inventory management\" },\n    { icon: Palette, label: \"Design System\", example: \"Component library for enterprise applications\" },\n    { icon: Cpu, label: \"Blockchain\", example: \"NFT marketplace with smart contracts\" },\n  ];\n\n  const tabs = [\n    { id: \"overview\", label: \"Overview\", icon: Lightbulb },\n    { id: \"quickstart\", label: \"Quick Start\", icon: Play },\n    { id: \"roadmap\", label: \"Roadmap\", icon: Code },\n    { id: \"tech\", label: \"Tech Stack\", icon: Cpu },\n    { id: \"resources\", label: \"Resources\", icon: Database },\n  ];\n\n  return (\n    <div\n      className=\"min-h-screen bg-gray-50\"\n      style={{ fontFamily: \"'Sora', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\" }}\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12\">\n\n        {/* Header */}\n        <header className=\"text-center mb-10 sm:mb-16\">\n          <div className=\"inline-flex items-center gap-3 mb-4 sm:mb-6\">\n            <div className=\"p-3 bg-blue-600 rounded-xl\">\n              <Brain className=\"w-8 h-8 text-white\" />\n            </div>\n            <h1 className=\"text-3xl sm:text-4xl font-bold text-gray-900\">\n              AI Project Generator\n            </h1>\n          </div>\n          <p className=\"text-base sm:text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed\">\n            Transform your ideas into actionable project plans with comprehensive tech stacks, roadmaps, and resources.\n          </p>\n        </header>\n\n        {/* Project Input Form */}\n        <div className=\"max-w-4xl mx-auto mb-10 sm:mb-12\">\n          <form\n            onSubmit={handleSubmit}\n            className=\"space-y-6\"\n            aria-busy={isLoading}\n          >\n            <div className=\"bg-white rounded-2xl shadow-sm border border-gray-200 p-6 sm:p-8\">\n              <label\n                htmlFor=\"projectIdea\"\n                className=\"block text-lg font-semibold text-gray-900 mb-3 sm:mb-4\"\n              >\n                Describe your project idea\n              </label>\n              <div className=\"relative\">\n                <textarea\n                  id=\"projectIdea\"\n                  aria-label=\"Describe your project idea\"\n                  value={projectIdea}\n                  onChange={(e) => setProjectIdea(e.target.value)}\n                  placeholder=\"e.g., A task management app with AI-powered priority suggestions...\"\n                  className=\"w-full p-3 sm:p-4 border border-gray-300 rounded-xl resize-none focus:ring-2 focus:ring-blue-600 focus:border-transparent transition-all duration-200 text-base sm:text-lg\"\n                  rows={4}\n                  maxLength={1000}\n                  disabled={isLoading}\n                />\n                <div className=\"absolute bottom-3 right-4 text-xs sm:text-sm text-gray-400\">\n                  {projectIdea.length}/1000\n                </div>\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={isLoading || !projectIdea.trim()}\n                className=\"mt-4 sm:mt-6 w-full sm:w-auto px-6 sm:px-8 py-3 bg-blue-600 text-white font-medium rounded-xl hover:bg-blue-700 focus:ring-2 focus:ring-blue-600 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 inline-flex items-center justify-center gap-2 min-h-[44px]\"\n              >\n                {isLoading ? (\n                  <>\n                    <Loader2 className=\"w-5 h-5 animate-spin\" aria-hidden=\"true\" />\n                    Generating Project Plan...\n                  </>\n                ) : (\n                  <>\n                    <Search className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    Generate Project Plan\n                  </>\n                )}\n              </button>\n            </div>\n          </form>\n\n          {/* Project Type Examples */}\n          {!result && (\n            <section className=\"mt-6 sm:mt-8\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-3 sm:mb-4\">\n                Popular project types\n              </h3>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4\">\n                {projectTypes.map((type, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setProjectIdea(type.example)}\n                    className=\"text-left p-4 bg-white rounded-xl border border-gray-200 hover:border-blue-300 hover:shadow-sm transition-all duration-200 group min-h-[44px]\"\n                  >\n                    <div className=\"flex items-center gap-3 mb-1 sm:mb-2\">\n                      <type.icon className=\"w-5 h-5 text-blue-600\" aria-hidden=\"true\" />\n                      <span className=\"font-medium text-gray-900\">{type.label}</span>\n                    </div>\n                    <p className=\"text-sm text-gray-600 group-hover:text-gray-700\">\n                      {type.example}\n                    </p>\n                  </button>\n                ))}\n              </div>\n            </section>\n          )}\n        </div>\n\n        {/* Error State */}\n        {error && (\n          <div\n            className=\"max-w-4xl mx-auto mb-6 sm:mb-8\"\n            role=\"alert\"\n            aria-live=\"polite\"\n          >\n            <div className=\"bg-red-50 border border-red-200 rounded-xl p-4 flex items-center gap-3\">\n              <AlertCircle className=\"w-5 h-5 text-red-600 flex-shrink-0\" aria-hidden=\"true\" />\n              <p className=\"text-red-800\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Results Section */}\n        {result && (\n          <div className=\"max-w-6xl mx-auto\">\n            {/* Success Header */}\n            <div\n              className=\"bg-green-50 border border-green-200 rounded-xl p-4 mb-6 sm:mb-8 flex items-center gap-3\"\n              role=\"status\"\n              aria-live=\"polite\"\n            >\n              <CheckCircle className=\"w-5 h-5 text-green-600 flex-shrink-0\" aria-hidden=\"true\" />\n              <p className=\"text-green-800 font-medium\">\n                Project plan generated successfully! Here's your comprehensive guide.\n              </p>\n            </div>\n\n            {/* Tab Navigation */}\n            <div className=\"bg-white rounded-2xl shadow-sm border border-gray-200 overflow-hidden\">\n              <div className=\"border-b border-gray-200 overflow-x-auto\">\n                <nav\n                  className=\"flex min-w-max sm:min-w-0 sm:flex-wrap\"\n                  role=\"tablist\"\n                  aria-label=\"Project Sections\"\n                >\n                  {tabs.map((tab) => (\n                    <button\n                      key={tab.id}\n                      onClick={() => setActiveTab(tab.id)}\n                      className={`flex items-center gap-2 px-4 sm:px-6 py-3 sm:py-4 text-sm font-medium border-b-2 transition-all duration-200 min-h-[44px] focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 ${\n                        activeTab === tab.id\n                          ? \"border-blue-600 text-blue-600 bg-blue-50\"\n                          : \"border-transparent text-gray-500 hover:text-gray-700 hover:bg-gray-50\"\n                      }`}\n                      role=\"tab\"\n                      aria-selected={activeTab === tab.id}\n                    >\n                      <tab.icon className=\"w-4 h-4\" aria-hidden=\"true\" />\n                      <span>{tab.label}</span>\n                    </button>\n                  ))}\n                </nav>\n              </div>\n\n              {/* Tab Content */}\n              <div className=\"p-6 sm:p-8\">\n                {/* Overview Tab */}\n                {activeTab === \"overview\" && (\n                  <div className=\"space-y-6 sm:space-y-8\">\n                    <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900\">\n                      {result.mindMap?.name || \"Project Overview\"}\n                    </h2>\n                    {result.mindMap?.children && (\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6\">\n                        {result.mindMap.children.map((component, index) => (\n                          <div key={index} className=\"bg-gray-50 rounded-xl p-4 sm:p-6\">\n                            <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                              {component.name}\n                            </h3>\n                            {component.children && (\n                              <ul className=\"space-y-2\">\n                                {component.children.map((subComponent, subIndex) => (\n                                  <li\n                                    key={subIndex}\n                                    className=\"flex items-center gap-2 text-gray-700\"\n                                  >\n                                    <div className=\"w-1.5 h-1.5 bg-blue-600 rounded-full\"></div>\n                                    {subComponent.name}\n                                  </li>\n                                ))}\n                              </ul>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {/* Quick Start Tab */}\n                {activeTab === \"quickstart\" && (\n                  <div className=\"space-y-6 sm:space-y-8\">\n                    <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900\">\n                      Quick Start Guide\n                    </h2>\n                    {result.quickStart && (\n                      <div className=\"space-y-6\">\n                        <div className=\"bg-blue-50 border border-blue-200 rounded-xl p-4 sm:p-6\">\n                          <div className=\"flex items-center gap-2 mb-3\">\n                            <Play className=\"w-5 h-5 text-blue-600\" />\n                            <h3 className=\"text-lg font-semibold text-blue-900\">\n                              Get Started in 5 Minutes\n                            </h3>\n                          </div>\n                          <p className=\"text-blue-800 mb-4\">{result.quickStart.description}</p>\n\n                          <div className=\"bg-gray-900 rounded-lg p-4 font-mono text-sm\">\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <span className=\"text-green-400\">Terminal</span>\n                              <button\n                                onClick={() => copyToClipboard(result.quickStart.commands.join('\\n'), 'quickstart')}\n                                className=\"text-gray-400 hover:text-white transition-colors\"\n                              >\n                                <Copy className=\"w-4 h-4\" />\n                              </button>\n                            </div>\n                            {result.quickStart.commands.map((command, index) => (\n                              <div key={index} className=\"text-white mb-1\">\n                                <span className=\"text-green-400\">$ </span>{command}\n                              </div>\n                            ))}\n                          </div>\n\n                          {result.quickStart.notes && result.quickStart.notes.length > 0 && (\n                            <div className=\"mt-4\">\n                              <h4 className=\"font-medium text-blue-900 mb-2\">Important Notes:</h4>\n                              <ul className=\"space-y-1\">\n                                {result.quickStart.notes.map((note, index) => (\n                                  <li key={index} className=\"text-sm text-blue-800 flex items-start gap-2\">\n                                    <AlertTriangle className=\"w-4 h-4 text-yellow-500 flex-shrink-0 mt-0.5\" />\n                                    {note}\n                                  </li>\n                                ))}\n                              </ul>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {/* Enhanced Roadmap Tab */}\n                {activeTab === \"roadmap\" && (\n                  <div className=\"space-y-6 sm:space-y-8\">\n                    <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900\">\n                      Development Roadmap\n                    </h2>\n                    {result.roadmap?.length > 0 ? (\n                      <div className=\"space-y-6\">\n                        {result.roadmap.map((phase, index) => (\n                          <div key={index} className=\"relative\">\n                            <div className=\"bg-white border border-gray-200 rounded-xl overflow-hidden\">\n                              {/* Phase Header */}\n                              <div \n                                className=\"p-4 sm:p-6 cursor-pointer hover:bg-gray-50 transition-colors\"\n                                onClick={() => togglePhase(index)}\n                              >\n                                <div className=\"flex items-start gap-4\">\n                                  <div className=\"flex-shrink-0\">\n                                    <div className=\"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white font-semibold text-sm\">\n                                      {index + 1}\n                                    </div>\n                                  </div>\n                                  <div className=\"flex-1\">\n                                    <div className=\"flex items-center justify-between\">\n                                      <div className=\"flex items-center gap-3 flex-wrap\">\n                                        <h3 className=\"text-lg font-semibold text-gray-900\">\n                                          {phase.phase}\n                                        </h3>\n                                        {phase.duration && (\n                                          <span className=\"inline-flex items-center gap-1 px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full\">\n                                            <Clock className=\"w-3 h-3\" />\n                                            {phase.duration}\n                                          </span>\n                                        )}\n                                        {phase.difficulty && (\n                                          <span className={`px-2 py-1 text-xs rounded-full ${getDifficultyColor(phase.difficulty)}`}>\n                                            {phase.difficulty}\n                                          </span>\n                                        )}\n                                      </div>\n                                      {expandedPhases[index] ? (\n                                        <ChevronUp className=\"w-5 h-5 text-gray-400\" />\n                                      ) : (\n                                        <ChevronDown className=\"w-5 h-5 text-gray-400\" />\n                                      )}\n                                    </div>\n                                    <p className=\"text-gray-700 mt-2\">{phase.description}</p>\n                                  </div>\n                                </div>\n                              </div>\n\n                              {/* Expanded Phase Content */}\n                              {expandedPhases[index] && (\n                                <div className=\"px-4 sm:px-6 pb-4 sm:pb-6 border-t border-gray-100\">\n                                  {/* Prerequisites */}\n                                  {phase.prerequisites && phase.prerequisites.length > 0 && (\n                                    <div className=\"mb-6\">\n                                      <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center gap-2\">\n                                        <Package className=\"w-4 h-4\" />\n                                        Prerequisites\n                                      </h4>\n                                      <div className=\"flex flex-wrap gap-2\">\n                                        {phase.prerequisites.map((prereq, idx) => (\n                                          <span key={idx} className=\"px-2 py-1 bg-yellow-100 text-yellow-800 text-sm rounded\">\n                                            {prereq}\n                                          </span>\n                                        ))}\n                                      </div>\n                                    </div>\n                                  )}\n\n                                  {/* Steps */}\n                                  {phase.steps && phase.steps.length > 0 && (\n                                    <div className=\"mb-6\">\n                                      <h4 className=\"font-semibold text-gray-900 mb-3\">Steps</h4>\n                                      <div className=\"space-y-4\">\n                                        {phase.steps.map((step, stepIndex) => (\n                                          <div key={stepIndex} className=\"bg-gray-50 rounded-lg p-4\">\n                                            <h5 className=\"font-medium text-gray-900 mb-2\">{step.title}</h5>\n                                            <p className=\"text-gray-700 mb-3\">{step.description}</p>\n\n                                            {step.commands && step.commands.length > 0 && (\n                                              <div className=\"bg-gray-900 rounded-lg p-3 font-mono text-sm\">\n                                                <div className=\"flex items-center justify-between mb-2\">\n                                                  <div className=\"flex items-center gap-2\">\n                                                    <Terminal className=\"w-4 h-4 text-green-400\" />\n                                                    <span className=\"text-green-400\">Terminal</span>\n                                                  </div>\n                                                  <button\n                                                    onClick={() => copyToClipboard(step.commands.join('\\n'), `step-${index}-${stepIndex}`)}\n                                                    className=\"text-gray-400 hover:text-white transition-colors\"\n                                                  >\n                                                    {copiedText === `step-${index}-${stepIndex}` ? (\n                                                      <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                                                    ) : (\n                                                      <Copy className=\"w-4 h-4\" />\n                                                    )}\n                                                  </button>\n                                                </div>\n                                                {step.commands.map((command, cmdIndex) => (\n                                                  <div key={cmdIndex} className=\"text-white mb-1\">\n                                                    <span className=\"text-green-400\">$ </span>{command}\n                                                  </div>\n                                                ))}\n                                              </div>\n                                            )}\n\n                                            {step.code && (\n                                              <div className=\"mt-3\">\n                                                <div className=\"bg-gray-800 rounded-lg p-3\">\n                                                  <div className=\"flex items-center justify-between mb-2\">\n                                                    <div className=\"flex items-center gap-2\">\n                                                      <FileText className=\"w-4 h-4 text-blue-400\" />\n                                                      <span className=\"text-blue-400\">{step.filename || 'Code'}</span>\n                                                    </div>\n                                                    <button\n                                                      onClick={() => copyToClipboard(step.code, `code-${index}-${stepIndex}`)}\n                                                      className=\"text-gray-400 hover:text-white transition-colors\"\n                                                    >\n                                                      {copiedText === `code-${index}-${stepIndex}` ? (\n                                                        <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                                                      ) : (\n                                                        <Copy className=\"w-4 h-4\" />\n                                                      )}\n                                                    </button>\n                                                  </div>\n                                                  <pre className=\"text-white text-sm overflow-x-auto\">\n                                                    <code>{step.code}</code>\n                                                  </pre>\n                                                </div>\n                                              </div>\n                                            )}\n                                          </div>\n                                        ))}\n                                      </div>\n                                    </div>\n                                  )}\n\n                                  {/* Troubleshooting */}\n                                  {phase.troubleshooting && phase.troubleshooting.length > 0 && (\n                                    <div className=\"mb-6\">\n                                      <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center gap-2\">\n                                        <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />\n                                        Troubleshooting\n                                      </h4>\n                                      <ul className=\"space-y-1\">\n                                        {phase.troubleshooting.map((tip, idx) => (\n                                          <li key={idx} className=\"text-sm text-gray-600 flex items-start gap-2\">\n                                            <div className=\"w-1 h-1 bg-yellow-500 rounded-full mt-2 flex-shrink-0\"></div>\n                                            {tip}\n                                          </li>\n                                        ))}\n                                      </ul>\n                                    </div>\n                                  )}\n\n                                  {/* Validation */}\n                                  {phase.validation && phase.validation.length > 0 && (\n                                    <div>\n                                      <h4 className=\"font-semibold text-gray-900 mb-2 flex items-center gap-2\">\n                                        <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                                        Validation Steps\n                                      </h4>\n                                      <ul className=\"space-y-1\">\n                                        {phase.validation.map((check, idx) => (\n                                          <li key={idx} className=\"text-sm text-gray-600 flex items-start gap-2\">\n                                            <CheckCircle className=\"w-3 h-3 text-green-500 mt-0.5 flex-shrink-0\" />\n                                            {check}\n                                          </li>\n                                        ))}\n                                      </ul>\n                                    </div>\n                                  )}\n                                </div>\n                              )}\n                            </div>\n                            {index < result.roadmap.length - 1 && (\n                              <div className=\"absolute left-4 -bottom-3 w-0.5 h-6 bg-gray-300\"></div>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <p className=\"text-gray-500\">No roadmap data available.</p>\n                    )}\n                  </div>\n                )}\n\n                {/* Tech Stack Tab */}\n                {activeTab === \"tech\" && (\n                  <div className=\"space-y-6 sm:space-y-8\">\n                    <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900\">\n                      Technology Stack\n                    </h2>\n                    {result.techStack && (\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\n                        {Object.entries(result.techStack).map(([category, technologies]) => (\n                          <div key={category} className=\"bg-gray-50 rounded-xl p-4 sm:p-6\">\n                            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 capitalize\">\n                              {category.replace(/([A-Z])/g, \" $1\").trim()}\n                            </h3>\n                            <div className=\"space-y-2\">\n                              {Array.isArray(technologies)\n                                ? technologies.map((tech, index) => (\n                                    <div\n                                      key={index}\n                                      className=\"bg-white px-3 py-2 rounded-lg text-sm font-medium text-gray-700\"\n                                    >\n                                      {tech}\n                                    </div>\n                                  ))\n                                : (\n                                  <div className=\"bg-white px-3 py-2 rounded-lg text-sm font-medium text-gray-700\">\n                                    {technologies}\n                                  </div>\n                                )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n\n                    {/* Packages Section */}\n                    {result.packages && (\n                      <div className=\"mt-8\">\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Package Dependencies</h3>\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n                          {Object.entries(result.packages).map(([packageManager, packages]) => (\n                            packages && packages.length > 0 && (\n                              <div key={packageManager} className=\"bg-white border border-gray-200 rounded-xl p-4\">\n                                <h4 className=\"font-semibold text-gray-900 mb-3 capitalize\">{packageManager}</h4>\n                                <div className=\"space-y-2\">\n                                  {packages.map((pkg, index) => (\n                                    <div key={index} className=\"text-sm font-mono text-gray-600 bg-gray-50 px-2 py-1 rounded\">\n                                      {pkg}\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            )\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {/* Resources Tab */}\n                {activeTab === \"resources\" && (\n                  <div className=\"space-y-6 sm:space-y-8\">\n                    <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900\">\n                      Learning Resources\n                    </h2>\n                    {/* Documentation */}\n                    {result.documentation?.length > 0 && (\n                      <section>\n                        <h3 className=\"text-lg sm:text-xl font-semibold text-gray-900 mb-3 sm:mb-4\">\n                          Documentation\n                        </h3>\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                          {result.documentation.map((doc, index) => (\n                            <a\n                              key={index}\n                              href={doc.url}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"block p-4 bg-white border border-gray-200 rounded-xl hover:border-blue-300 hover:shadow-sm transition-all duration-200\"\n                            >\n                              <h4 className=\"font-semibold text-gray-900 mb-1\">{doc.title}</h4>\n                              <p className=\"text-sm text-gray-600\">{doc.description}</p>\n                            </a>\n                          ))}\n                        </div>\n                      </section>\n                    )}\n                    {/* YouTube */}\n                    {result.youtubeResources?.length > 0 && (\n                      <section>\n                        <h3 className=\"text-lg sm:text-xl font-semibold text-gray-900 mb-3 sm:mb-4\">\n                          Video Tutorials\n                        </h3>\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                          {result.youtubeResources.map((video, index) => (\n                            <a\n                              key={index}\n                              href={video.url}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"block p-4 bg-white border border-gray-200 rounded-xl hover:border-blue-300 hover:shadow-sm transition-all duration-200\"\n                            >\n                              <h4 className=\"font-semibold text-gray-900 mb-1\">{video.title}</h4>\n                              <p className=\"text-sm text-blue-600 mb-1\">{video.channel}</p>\n                              <p className=\"text-sm text-gray-600\">{video.description}</p>\n                            </a>\n                          ))}\n                        </div>\n                      </section>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Generate Another Button */}\n            <div className=\"mt-6 sm:mt-8 text-center\">\n              <button\n                onClick={() => {\n                  setResult(null);\n                  setProjectIdea(\"\");\n                  setError(\"\");\n                }}\n                className=\"px-5 sm:px-6 py-3 bg-gray-100 text-gray-700 font-medium rounded-xl hover:bg-gray-200 transition-all duration-200 min-h-[44px]\"\n              >\n                Generate Another Project\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}