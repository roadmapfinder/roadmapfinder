{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/api/generate-project/route.js"],"sourcesContent":["// app/api/generate-project/route.js\nimport axios from 'axios';\nimport { NextResponse } from 'next/server';\n\nexport async function POST(request) {\n  try {\n    const { projectIdea } = await request.json();\n\n    if (!projectIdea || projectIdea.trim().length === 0) {\n      return NextResponse.json({ error: 'Project idea is required' }, { status: 400 });\n    }\n\n    // Validate API key exists\n    if (!process.env.OPENROUTER_API_KEY) {\n      console.error('OPENROUTER_API_KEY is not set');\n      return NextResponse.json({ error: 'API configuration error' }, { status: 500 });\n    }\n\n    console.log('Making request to OpenRouter API for project generation...');\n\n    const prompt = `\nYou are an expert full-stack software architect, AI consultant, and technical project planner.\nA user has described their project idea in natural language:\n\n\"${projectIdea}\"\n\nYour task is to deeply analyze this idea — whether it's a simple utility, a full SaaS platform, an AI-driven application, a blockchain dApp, or a UI/UX design system.\nProvide a comprehensive, language-agnostic project breakdown in structured JSON format.\n\n⚠️ You must:\n\nSupport all popular tech stacks: JavaScript/TypeScript, Python, Java, Dart/Flutter, Swift, Solidity, R, Rust, Go, etc.\n\nInclude recommendations for AI/ML, data analytics, blockchain, and design-oriented projects where relevant\n\nRecommend only modern, well-maintained, and production-ready tools and libraries (2024–2025)\n\nEnsure every step is practical, structured, and developer-actionable\n\nReturn ONLY a valid JSON object (no extra text), using the following format:\n\njson\nCopy\nEdit\n{\n  \"mindMap\": {\n    \"name\": \"Project Name\",\n    \"children\": [\n      {\n        \"name\": \"Major Component 1\",\n        \"children\": [\n          { \"name\": \"Sub-component 1.1\" },\n          { \"name\": \"Sub-component 1.2\" }\n        ]\n      },\n      {\n        \"name\": \"Major Component 2\",\n        \"children\": [\n          { \"name\": \"Sub-component 2.1\" },\n          { \"name\": \"Sub-component 2.2\" }\n        ]\n      }\n    ]\n  },\n  \"roadmap\": [\n    {\n      \"phase\": \"Phase Name\",\n      \"description\": \"What this phase accomplishes\",\n      \"tasks\": [\"Task 1\", \"Task 2\", \"Task 3\"]\n    }\n  ],\n  \"techStack\": {\n    \"frontend\": [\"React\", \"Next.js\", \"Tailwind CSS\"],\n    \"backend\": [\"Node.js\", \"Express\"],\n    \"database\": [\"PostgreSQL\"],\n    \"devops\": [\"Docker\", \"GitHub Actions\"],\n    \"deployment\": [\"Vercel\", \"Railway\"]\n  },\n  \"packages\": {\n    \"npm\": [\"next\", \"react\", \"axios\", \"tailwindcss\"],\n    \"python\": [],\n    \"tools\": [\"VS Code\", \"Postman\", \"Figma\", \"Git\"]\n  },\n  \"documentation\": [\n    {\n      \"title\": \"Next.js Documentation\",\n      \"url\": \"https://nextjs.org/docs\",\n      \"description\": \"Official Next.js guide and API docs\"\n    },\n    {\n      \"title\": \"PostgreSQL Docs\",\n      \"url\": \"https://www.postgresql.org/docs/\",\n      \"description\": \"Official PostgreSQL documentation\"\n    }\n  ],\n  \"youtubeResources\": [\n    {\n      \"title\": \"Build a Full-Stack App with Next.js 13\",\n      \"channel\": \"Traversy Media\",\n      \"url\": \"https://youtube.com/watch?v=example1\",\n      \"description\": \"Walkthrough of building a full-stack app using modern tech\"\n    },\n    {\n      \"title\": \"Complete Guide to Tailwind CSS\",\n      \"channel\": \"The Net Ninja\",\n      \"url\": \"https://youtube.com/watch?v=example2\",\n      \"description\": \"Master Tailwind CSS for frontend development\"\n    }\n  ]\n}`;\n\n    const response = await axios.post(\n      'https://openrouter.ai/api/v1/chat/completions',\n      {\n        model: 'anthropic/claude-3-haiku:beta',\n        messages: [\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        temperature: 0.7,\n        max_tokens: 4000,\n      },\n      {\n        headers: {\n          'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}`,\n          'Content-Type': 'application/json',\n          'HTTP-Referer': process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000',\n          'X-Title': 'RoadmapFinder Project Helper Bot',\n        },\n        timeout: 45000, // 45 second timeout\n      }\n    );\n\n    console.log('OpenRouter API response received for project generation');\n\n    if (!response.data.choices || response.data.choices.length === 0) {\n      return NextResponse.json(\n        { error: 'No response from AI model' },\n        { status: 500 }\n      );\n    }\n\n    const content = response.data.choices[0].message.content;\n\n    // Extract JSON from the response - more robust parsing\n    let jsonMatch = content.match(/\\{[\\s\\S]*\\}/);\n\n    if (!jsonMatch) {\n      // Try to find JSON if it's wrapped in markdown code blocks\n      const codeBlockMatch = content.match(/```(?:json)?\\s*(\\{[\\s\\S]*\\})\\s*```/);\n      if (codeBlockMatch) {\n        jsonMatch = [codeBlockMatch[1]];\n      }\n    }\n\n    if (!jsonMatch) {\n      console.error('No JSON found in AI response:', content);\n      return NextResponse.json(\n        { error: 'Invalid response format from AI service' },\n        { status: 500 }\n      );\n    }\n\n    let projectData;\n    try {\n      projectData = JSON.parse(jsonMatch[0]);\n    } catch (parseError) {\n      console.error('JSON parsing error:', parseError);\n      console.error('Content that failed to parse:', jsonMatch[0]);\n      return NextResponse.json(\n        { error: 'Failed to parse AI response' },\n        { status: 500 }\n      );\n    }\n\n    // Validate the response structure\n    const requiredFields = ['mindMap', 'roadmap', 'techStack', 'packages', 'documentation', 'youtubeResources'];\n    for (const field of requiredFields) {\n      if (!projectData[field]) {\n        console.warn(`Missing field in response: ${field}`);\n        // Set default empty values instead of failing\n        projectData[field] = getDefaultValue(field);\n      }\n    }\n\n    // Enhanced response with metadata (consistent with career route)\n    return NextResponse.json({ \n      ...projectData,\n      metadata: {\n        model: 'anthropic/claude-3.5-sonnet',\n        timestamp: new Date().toISOString(),\n        tokens_used: response.data.usage?.total_tokens || 'N/A'\n      }\n    });\n\n  } catch (error) {\n    console.error('Project generation API error:', error.response?.data || error.message);\n\n    // Enhanced error handling (consistent with career route)\n    if (error.response?.status === 401) {\n      return NextResponse.json(\n        { error: 'Invalid API key configuration' },\n        { status: 500 }\n      );\n    } else if (error.response?.status === 429) {\n      return NextResponse.json(\n        { error: 'API rate limit exceeded. Please try again in a few minutes.' },\n        { status: 500 }\n      );\n    } else if (error.response?.status === 402) {\n      return NextResponse.json(\n        { error: 'API quota exceeded. Please check your OpenRouter credits.' },\n        { status: 500 }\n      );\n    } else if (error.code === 'ECONNABORTED') {\n      return NextResponse.json(\n        { error: 'Request timeout. The AI is taking longer than expected. Please try again.' },\n        { status: 500 }\n      );\n    } else if (error.response?.status >= 500) {\n      return NextResponse.json(\n        { error: 'AI service temporarily unavailable. Please try again later.' },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json(\n      { \n        error: 'Failed to generate project guide',\n        details: process.env.NODE_ENV === 'development' ? error.response?.data?.error || error.message : 'Please try again later'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n// Helper function to provide default values for missing fields\nfunction getDefaultValue(field) {\n  const defaults = {\n    mindMap: { name: \"Project\", children: [] },\n    roadmap: [],\n    techStack: {},\n    packages: { npm: [], tools: [] },\n    documentation: [],\n    youtubeResources: []\n  };\n  return defaults[field] || null;\n}"],"names":[],"mappings":"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","debugId":null}}]
}