[
  {
    "id": 1,
    "title": "Introduction to Python",
    "description": "Master Python fundamentals before diving into Django framework",
    "icon": "Code",
    "gradient": "from-blue-500 to-indigo-600",
    "content": {
      "whatToLearn": [
        "Variables and Data Types",
        "Control Flow (if, for, while)",
        "Functions and Modules",
        "File Handling Operations",
        "Error Handling and Exceptions",
        "List Comprehension",
        "Object-Oriented Programming Basics",
        "Package Management with pip",
        "Virtual Environments",
        "Python Standard Library"
      ],
      "toolsToUse": [
        "Python 3.x",
        "Visual Studio Code",
        "PyCharm Community Edition",
        "Jupyter Notebook",
        "Git & GitHub",
        "pip Package Manager",
        "virtualenv/venv"
      ],
      "bestCourses": {
        "english": [
          "freeCodeCamp – Python Full Course",
          "Corey Schafer – Python Tutorial",
          "Programming with Mosh – Python Course",
          "Automate the Boring Stuff with Python",
          "Python Crash Course by Eric Matthes"
        ],
        "hindi": [
          "Apna College – Python Playlist",
          "CodeWithHarry – Python Tutorial",
          "WsCube Tech – Python Full Course",
          "Thapa Technical – Python Basics",
          "Love Babbar – Python Fundamentals"
        ]
      },
      "docsAndWebsites": [
        "Python Official Documentation",
        "W3Schools Python Tutorial",
        "Real Python Tutorials",
        "Python.org Beginner's Guide",
        "GeeksforGeeks Python"
      ],
      "projectIdeas": [
        "Calculator Application",
        "To-Do CLI Application",
        "File Organizer Script",
        "Weather App using API",
        "Password Generator",
        "Simple Web Scraper",
        "Basic Data Analysis with CSV"
      ],
      "practicePlatforms": [
        "HackerRank Python",
        "Codewars",
        "LeetCode Python Problems",
        "Python.org Practice",
        "Repl.it Python"
      ]
    }
  },
  {
    "id": 2,
    "title": "Django Fundamentals",
    "description": "Learn Django basics, MTV architecture, and core concepts",
    "icon": "Globe",
    "gradient": "from-green-500 to-emerald-600",
    "content": {
      "whatToLearn": [
        "Django Installation & Setup",
        "MTV Architecture (Model-Template-View)",
        "URL Routing and URLconf",
        "Views (Function-based and Class-based)",
        "Templates and Template Language",
        "Static Files Management",
        "Django Admin Panel Basics",
        "Settings Configuration",
        "Django Project Structure",
        "Request-Response Cycle in Django"
      ],
      "toolsToUse": [
        "Django 5.x",
        "SQLite Database",
        "Visual Studio Code",
        "Django Extensions",
        "Browser Developer Tools",
        "Django Debug Toolbar",
        "Postman for API Testing"
      ],
      "bestCourses": {
        "english": [
          "freeCodeCamp – Django Crash Course",
          "Dennis Ivy – Django Tutorial Series",
          "Corey Schafer – Django Tutorial",
          "Programming with Mosh – Django Course",
          "Django Girls Tutorial"
        ],
        "hindi": [
          "CodeWithHarry – Django Series",
          "WsCube Tech – Django Full Course",
          "Thapa Technical – Django Tutorial",
          "Apna College – Django Basics",
          "Love Babbar – Django Development"
        ]
      },
      "docsAndWebsites": [
        "Django Official Documentation",
        "Django Girls Tutorial",
        "Mozilla Django Tutorial",
        "Django Packages",
        "Full Stack Python Django"
      ],
      "projectIdeas": [
        "Personal Blog Website",
        "Weather Dashboard using API",
        "Notes Manager Application",
        "Simple Portfolio Site",
        "Book Review System",
        "Basic CRUD Application",
        "Student Management System"
      ],
      "practicePlatforms": [
        "Django Tutorial Official",
        "Codecademy Django",
        "Real Python Django",
        "Django Practice Projects",
        "GitHub Django Examples"
      ]
    }
  },
  {
    "id": 3,
    "title": "Django Models & Database ORM",
    "description": "Master Django ORM, database relationships, and data management",
    "icon": "Database",
    "gradient": "from-purple-500 to-violet-600",
    "content": {
      "whatToLearn": [
        "Django Models and Fields",
        "Database Migrations",
        "Model Relationships (OneToOne, ForeignKey, ManyToMany)",
        "QuerySets and Database Queries",
        "Model Methods and Properties",
        "Database Indexing",
        "Aggregations and Annotations",
        "Raw SQL Queries",
        "Database Transactions",
        "Model Validation"
      ],
      "toolsToUse": [
        "Django ORM",
        "SQLite / PostgreSQL",
        "DB Browser for SQLite",
        "pgAdmin (for PostgreSQL)",
        "Django Shell",
        "Django Migrations",
        "Database Design Tools"
      ],
      "bestCourses": {
        "english": [
          "Django ORM Mastery Course",
          "Corey Schafer – Django Models",
          "Real Python – Django ORM",
          "Django Database Tutorial",
          "Advanced Django ORM Techniques"
        ],
        "hindi": [
          "WsCube Tech – Django Models",
          "CodeWithHarry – Django ORM",
          "Django Database Hindi Tutorial",
          "Thapa Technical – Django Models",
          "Django ORM Practice Hindi"
        ]
      },
      "docsAndWebsites": [
        "Django Model Documentation",
        "Django ORM Cookbook",
        "Django Database API Reference",
        "PostgreSQL Documentation",
        "Database Design Best Practices"
      ],
      "projectIdeas": [
        "User Management System",
        "Product Catalog with Categories",
        "Task Tracker with Due Dates",
        "Library Management System",
        "E-commerce Product Database",
        "Blog with Tags and Categories",
        "Employee Management System"
      ],
      "practicePlatforms": [
        "Django ORM Exercises",
        "Database Design Practice",
        "SQL to Django ORM Converter",
        "Django Model Practice",
        "Real-world Database Modeling"
      ]
    }
  },
  {
    "id": 4,
    "title": "Django Forms & User Authentication",
    "description": "Implement forms, user authentication, and security features",
    "icon": "Shield",
    "gradient": "from-red-500 to-pink-600",
    "content": {
      "whatToLearn": [
        "Django Forms and ModelForms",
        "Form Validation and Custom Validators",
        "User Registration and Login",
        "Authentication Views and Decorators",
        "Password Management and Reset",
        "User Permissions and Groups",
        "Session Management",
        "Messages Framework",
        "CSRF Protection",
        "Custom User Models"
      ],
      "toolsToUse": [
        "Django Forms",
        "Django Authentication System",
        "Django Messages Framework",
        "Email Backend Configuration",
        "Django Crispy Forms",
        "Bootstrap for Styling",
        "Django Allauth (Optional)"
      ],
      "bestCourses": {
        "english": [
          "Django Authentication Tutorial",
          "Dennis Ivy – Django Auth System",
          "Django Forms Mastery",
          "User Authentication Best Practices",
          "Django Security Tutorial"
        ],
        "hindi": [
          "WsCube Tech – Django Forms & Auth",
          "CodeWithHarry – Django Authentication",
          "Django User System Hindi",
          "Thapa Technical – Django Forms",
          "Django Security Hindi Tutorial"
        ]
      },
      "docsAndWebsites": [
        "Django Authentication Documentation",
        "Django Forms Documentation",
        "Django Security Best Practices",
        "Django Messages Framework",
        "Custom User Model Guide"
      ],
      "projectIdeas": [
        "Login System with Sessions",
        "Profile Management Application",
        "Contact Form with Email",
        "User Registration with Email Verification",
        "Multi-step Form Application",
        "Social Authentication Integration",
        "Admin Dashboard with Permissions"
      ],
      "practicePlatforms": [
        "Django Authentication Practice",
        "Form Validation Exercises",
        "Security Implementation Practice",
        "User Management Projects",
        "Authentication Testing"
      ]
    }
  },
  {
    "id": 5,
    "title": "Advanced Django: REST API & AJAX",
    "description": "Build REST APIs with Django REST Framework and implement AJAX",
    "icon": "Zap",
    "gradient": "from-yellow-500 to-orange-600",
    "content": {
      "whatToLearn": [
        "Django REST Framework (DRF) Setup",
        "Serializers and ModelSerializers",
        "API Views and ViewSets",
        "Authentication and Permissions in DRF",
        "API Documentation with Swagger",
        "AJAX with Django Views",
        "JSON Responses",
        "API Testing and Debugging",
        "CORS Configuration",
        "API Versioning"
      ],
      "toolsToUse": [
        "Django REST Framework",
        "Postman for API Testing",
        "Swagger/OpenAPI",
        "JavaScript Fetch API",
        "Axios for AJAX",
        "DRF Browsable API",
        "JWT Authentication"
      ],
      "bestCourses": {
        "english": [
          "Django REST Framework Tutorial",
          "CodeWithStein – Django REST",
          "REST API Development with Django",
          "Advanced DRF Techniques",
          "Django AJAX Tutorial"
        ],
        "hindi": [
          "WsCube Tech – Django REST Framework",
          "Django API Development Hindi",
          "CodeWithHarry – Django REST API",
          "Django AJAX Implementation Hindi",
          "API Development Tutorial Hindi"
        ]
      },
      "docsAndWebsites": [
        "Django REST Framework Documentation",
        "DRF Tutorial and Quickstart",
        "API Design Best Practices",
        "Django AJAX Documentation",
        "REST API Security Guide"
      ],
      "projectIdeas": [
        "REST API for Blog Application",
        "Real-time Comments with AJAX",
        "API for Mobile App Backend",
        "Task Management API",
        "Social Media API",
        "E-commerce Product API",
        "Real-time Chat API"
      ],
      "practicePlatforms": [
        "DRF Practice Exercises",
        "API Development Challenges",
        "Postman API Testing",
        "AJAX Implementation Practice",
        "REST API Design Practice"
      ]
    }
  },
  {
    "id": 6,
    "title": "Django Deployment & DevOps",
    "description": "Deploy Django applications and learn production best practices",
    "icon": "Server",
    "gradient": "from-cyan-500 to-blue-600",
    "content": {
      "whatToLearn": [
        "Environment Variables and Settings",
        "Static Files and Media Handling",
        "Gunicorn WSGI Server",
        "Nginx Configuration Basics",
        "Database Configuration for Production",
        "Deployment to Heroku/Render/Vercel",
        "Docker Containerization",
        "CI/CD Pipeline Setup",
        "Monitoring and Logging",
        "Security in Production"
      ],
      "toolsToUse": [
        "Git & GitHub",
        "Heroku CLI",
        "Render Platform",
        "Gunicorn",
        "Nginx (Basic)",
        "Docker & Docker Compose",
        "GitHub Actions",
        "Environment Management Tools"
      ],
      "bestCourses": {
        "english": [
          "Django Deployment Tutorial",
          "Corey Schafer – Django Deployment",
          "Docker for Django Applications",
          "Django Production Best Practices",
          "DevOps for Django Developers"
        ],
        "hindi": [
          "WsCube Tech – Django Deployment",
          "Django Production Deployment Hindi",
          "CodeWithHarry – Django Hosting",
          "Django DevOps Tutorial Hindi",
          "Production Django Setup Hindi"
        ]
      },
      "docsAndWebsites": [
        "Django Deployment Checklist",
        "Heroku Django Documentation",
        "Docker Django Guide",
        "Production Django Settings",
        "Django Security Deployment"
      ],
      "projectIdeas": [
        "Deploy Portfolio Site to Heroku",
        "Deploy Django Blog on Render",
        "Dockerized Django Application",
        "CI/CD Pipeline for Django App",
        "Multi-environment Django Setup",
        "Production-ready E-commerce Site",
        "Scalable Django API Deployment"
      ],
      "practicePlatforms": [
        "Heroku",
        "Render",
        "Railway",
        "PythonAnywhere",
        "DigitalOcean",
        "AWS (Basic)",
        "Docker Hub"
      ]
    }
  },
  {
    "id": 7,
    "title": "Real World Projects",
    "description": "Build complete, production-ready Django applications",
    "icon": "Briefcase",
    "gradient": "from-indigo-500 to-purple-600",
    "content": {
      "whatToLearn": [
        "Full-stack Django Application Development",
        "E-commerce Implementation",
        "Content Management System (CMS)",
        "API Integration with Frontend",
        "Payment Gateway Integration",
        "Advanced User Management",
        "Performance Optimization",
        "SEO Implementation",
        "Testing and Quality Assurance",
        "Code Review and Best Practices"
      ],
      "toolsToUse": [
        "Django 5.x",
        "TailwindCSS / Bootstrap",
        "Django REST Framework",
        "React/Vue (Optional)",
        "Payment APIs (Stripe/PayPal)",
        "Django CMS",
        "Django Testing Framework",
        "Performance Monitoring Tools"
      ],
      "bestCourses": {
        "english": [
          "Django E-commerce Course",
          "Dennis Ivy – Advanced Django Projects",
          "Full Stack Django Development",
          "Django CMS Tutorial",
          "Production Django Projects"
        ],
        "hindi": [
          "WsCube Tech – Django E-Commerce",
          "Django Project Series Hindi",
          "CodeWithHarry – Django Projects",
          "Complete Django Application Hindi",
          "Industry-level Django Projects"
        ]
      },
      "docsAndWebsites": [
        "Django Best Practices Guide",
        "E-commerce Implementation Guide",
        "Django CMS Documentation",
        "Payment Integration Documentation",
        "Django Performance Optimization"
      ],
      "projectIdeas": [
        "E-commerce Store with Admin Panel",
        "Job Listing Platform",
        "Portfolio with Blog & CMS",
        "Social Media Platform",
        "Learning Management System",
        "Real Estate Listing Site",
        "Healthcare Management System",
        "Event Management Platform",
        "Online Banking System",
        "Video Streaming Platform Backend"
      ],
      "practicePlatforms": [
        "GitHub for Open Source",
        "Django Project Challenges",
        "Hackathons",
        "Freelance Projects",
        "Contributing to Django Packages",
        "Building SaaS Applications",
        "Client Project Development"
      ]
    }
  },
  {
    "id": 8,
    "title": "Practice & Interview Preparation",
    "description": "Prepare for Django developer interviews and continuous learning",
    "icon": "Target",
    "gradient": "from-rose-500 to-red-600",
    "content": {
      "whatToLearn": [
        "Django Interview Questions",
        "System Design for Django Applications",
        "Code Review and Best Practices",
        "Performance Optimization Techniques",
        "Debugging and Troubleshooting",
        "Django Package Development",
        "Open Source Contribution",
        "Technical Communication",
        "Agile Development with Django",
        "Continuous Learning Strategies"
      ],
      "toolsToUse": [
        "Interview Practice Platforms",
        "Code Review Tools",
        "Performance Profiling Tools",
        "Django Debug Toolbar",
        "Git Advanced Features",
        "Documentation Tools",
        "Testing Frameworks",
        "Monitoring and Analytics"
      ],
      "bestCourses": {
        "english": [
          "Django Interview Preparation",
          "System Design for Web Applications",
          "Django Performance Optimization",
          "Code Review Best Practices",
          "Advanced Django Techniques"
        ],
        "hindi": [
          "Django Interview Questions Hindi",
          "Django Developer Interview Prep",
          "System Design Tutorial Hindi",
          "Django Best Practices Hindi",
          "Professional Django Development"
        ]
      },
      "docsAndWebsites": [
        "Django Interview Questions",
        "System Design Primer",
        "Django Best Practices Guide",
        "Open Source Contribution Guide",
        "Technical Interview Preparation"
      ],
      "projectIdeas": [
        "Clone Popular Websites (Instagram, Twitter)",
        "Build Django Packages",
        "Contribute to Open Source Django Projects",
        "Create Technical Blog about Django",
        "Build Portfolio with Complex Features",
        "Mentoring Junior Developers",
        "Creating Django Tutorials"
      ],
      "practicePlatforms": [
        "LeetCode Python Problems",
        "Codewars Python Challenges",
        "Django Practice Projects",
        "Technical Interview Platforms",
        "Open Source Django Projects",
        "Django Community Forums",
        "Stack Overflow Contributions"
      ]
    }
  }
]