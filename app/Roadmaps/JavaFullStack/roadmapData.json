[
  {
    "id": 1,
    "title": "Computer Science Fundamentals",
    "description": "Essential CS concepts for building strong programming foundation",
    "icon": "BookOpen",
    "gradient": "from-violet-500 to-purple-600",
    "content": {
      "whatToLearn": [
        "How Web Works (HTTP, DNS, SSL, Client/Server Model)",
        "Basic Programming (variables, loops, conditionals, functions)",
        "Data Structures & Algorithms (arrays, strings, stack, queue, linked list, trees, graphs)",
        "Sorting & Searching Algorithms",
        "OOP Concepts in Java (Encapsulation, Abstraction, Inheritance, Polymorphism)",
        "Time & Space Complexity Analysis",
        "Computer Networks Basics",
        "Operating System Concepts"
      ],
      "toolsToUse": [
        "Java Development Kit (JDK)",
        "IntelliJ IDEA / VS Code",
        "Algorithm Visualization Tools",
        "Network Analysis Tools (Wireshark)",
        "Big O Complexity Calculators",
        "Mind Mapping Tools for Concepts"
      ],
      "bestCourses": {
        "english": [
          "Computer Science Fundamentals - Khan Academy",
          "Introduction to Computer Science - Harvard CS50",
          "Data Structures and Algorithms - Princeton University",
          "Computer Networks - Andrew Tanenbaum"
        ],
        "hindi": [
          "Computer Science Basics Hindi - Gate Smashers",
          "Data Structures Hindi - Jenny's Lectures",
          "Computer Networks Hindi - Gate Smashers",
          "Operating Systems Hindi - Gate Smashers"
        ]
      },
      "docsAndWebsites": [
        "GeeksforGeeks CS Fundamentals",
        "Khan Academy Computer Programming",
        "Introduction to Algorithms (CLRS)",
        "Computer Networks - Tanenbaum Book"
      ],
      "projectIdeas": [
        "Algorithm Visualizer Web App",
        "Network Protocol Simulator",
        "Data Structure Implementation Library",
        "Web Request Flow Diagram Tool",
        "Time Complexity Calculator"
      ],
      "practicePlatforms": [
        "HackerRank Problem Solving",
        "LeetCode Easy Problems",
        "GeeksforGeeks Practice",
        "Codewars Fundamentals"
      ]
    }
  },
  {
    "id": 2,
    "title": "Core Java (Backend Foundation)",
    "description": "Master Java programming language and its core features",
    "icon": "Coffee",
    "gradient": "from-orange-500 to-red-600",
    "content": {
      "whatToLearn": [
        "Java Basics (datatypes, operators, loops, conditionals, methods)",
        "Collections Framework (List, Set, Map, Queue, Iterator)",
        "Exception Handling & Custom Exceptions",
        "Multithreading & Concurrency",
        "File Handling & I/O Operations",
        "Java 8+ Features (Streams, Lambda, Functional Interfaces, Optional)",
        "Date/Time API & Modern Java Features",
        "JVM, JDK, JRE, Garbage Collection"
      ],
      "toolsToUse": [
        "Java Development Kit (JDK 17+)",
        "IntelliJ IDEA / Eclipse",
        "Maven / Gradle",
        "Java Profiling Tools",
        "JVM Monitoring Tools",
        "Java Documentation Tools"
      ],
      "bestCourses": {
        "english": [
          "Java Programming Masterclass - Tim Buchalka",
          "Modern Java - Java 8 to 17 Features",
          "Java Concurrency in Practice",
          "Effective Java - Joshua Bloch"
        ],
        "hindi": [
          "Core Java Complete Course - CodeWithHarry",
          "Java Advanced Features Hindi - Durga Sir",
          "Multithreading Java Hindi - Telusko",
          "Java 8 Features Hindi - Java Techie"
        ]
      },
      "docsAndWebsites": [
        "Oracle Java Documentation",
        "Java SE Tutorial",
        "Baeldung Java Tutorials",
        "Java Code Geeks"
      ],
      "projectIdeas": [
        "Multi-threaded File Processing System",
        "Chat Application with Sockets",
        "Banking System with Exception Handling",
        "Employee Management with Collections",
        "Lambda & Stream API Practice Projects"
      ],
      "practicePlatforms": [
        "HackerRank Java",
        "Codewars Java Kata",
        "LeetCode Java Problems",
        "Java Concurrency Exercises"
      ]
    }
  },
  {
    "id": 3,
    "title": "Frontend Development (User Interface)",
    "description": "Build modern, responsive user interfaces with HTML, CSS, and JavaScript",
    "icon": "Monitor",
    "gradient": "from-blue-500 to-cyan-600",
    "content": {
      "whatToLearn": [
        "HTML5 (semantic tags, forms, audio/video, canvas)",
        "CSS3 (flexbox, grid, transitions, animations, media queries)",
        "JavaScript (ES6+, DOM, fetch API, async/await, modules)",
        "React.js (JSX, Components, Props, State, Hooks)",
        "Context API & State Management (Redux/Zustand)",
        "React Router & Navigation",
        "API Integration (Axios/Fetch)",
        "Responsive Design & Mobile-first Approach"
      ],
      "toolsToUse": [
        "VS Code / WebStorm",
        "Node.js & npm",
        "React Developer Tools",
        "Chrome DevTools",
        "Figma / Adobe XD",
        "Postman for API Testing"
      ],
      "bestCourses": {
        "english": [
          "Modern JavaScript Course - Jonas Schmedtmann",
          "React Complete Guide - Maximilian Schwarzm√ºller",
          "CSS Grid & Flexbox - Wes Bos",
          "Frontend Web Development - freeCodeCamp"
        ],
        "hindi": [
          "Complete Web Development - CodeWithHarry",
          "React JS Hindi - Thapa Technical",
          "JavaScript Complete Course - Apna College",
          "CSS & HTML Hindi - Tech Gun"
        ]
      },
      "docsAndWebsites": [
        "MDN Web Docs",
        "React Official Documentation",
        "CSS-Tricks",
        "JavaScript.info"
      ],
      "projectIdeas": [
        "Personal Portfolio Website",
        "E-commerce Frontend (Product Listing, Cart)",
        "Social Media Dashboard",
        "Weather App with API Integration",
        "Task Management Application"
      ],
      "practicePlatforms": [
        "Frontend Mentor",
        "Codepen Challenges",
        "React Practice Projects",
        "CSS Battle"
      ]
    }
  },
  {
    "id": 4,
    "title": "Backend Development with Java",
    "description": "Build robust server-side applications using Spring Boot and microservices",
    "icon": "Server",
    "gradient": "from-green-500 to-emerald-600",
    "content": {
      "whatToLearn": [
        "REST API Development & CRUD Operations",
        "Spring Boot & Auto Configuration",
        "MVC Pattern & Dependency Injection",
        "Spring Data JPA + Hibernate (ORM, relationships)",
        "Spring Security (JWT, OAuth2, Authentication)",
        "Validation & Global Exception Handling",
        "Microservices Architecture with Spring Cloud",
        "API Gateway & Service Discovery (Eureka)"
      ],
      "toolsToUse": [
        "Spring Boot & Spring Tool Suite",
        "Maven / Gradle",
        "Postman / Insomnia",
        "H2 / MySQL Database",
        "Docker for Containerization",
        "Spring Cloud Tools"
      ],
      "bestCourses": {
        "english": [
          "Spring Framework 5 - Chad Darby",
          "Spring Boot Masterclass - Amigoscode",
          "Microservices with Spring Cloud",
          "Spring Security Complete Guide"
        ],
        "hindi": [
          "Spring Boot Complete Course - CodeWithHarry",
          "Spring Framework Hindi - Durga Sir",
          "Microservices Java Hindi - Telusko",
          "REST API Spring Boot Hindi - Java Techie"
        ]
      },
      "docsAndWebsites": [
        "Spring Boot Documentation",
        "Spring Framework Reference",
        "Spring Security Documentation",
        "Microservices Patterns"
      ],
      "projectIdeas": [
        "RESTful API for Library Management",
        "E-commerce Backend with Payment Gateway",
        "Social Media API with Authentication",
        "Microservices-based Order Processing System",
        "Real-time Chat API with WebSockets"
      ],
      "practicePlatforms": [
        "Spring Boot Projects on GitHub",
        "API Development Challenges",
        "Microservices Design Patterns",
        "Backend Coding Interviews"
      ]
    }
  },
  {
    "id": 5,
    "title": "Databases",
    "description": "Master both SQL and NoSQL databases for data persistence",
    "icon": "Database",
    "gradient": "from-purple-500 to-indigo-600",
    "content": {
      "whatToLearn": [
        "MySQL / PostgreSQL (Relational Databases)",
        "SQL Queries (Joins, Subqueries, Indexing, Stored Procedures)",
        "Transactions & ACID Properties",
        "Database Design & Normalization",
        "Query Optimization & Performance Tuning",
        "MongoDB (Documents, Aggregation, Indexes)",
        "Redis (Caching, Pub/Sub, Sessions)",
        "Database Connection Pooling"
      ],
      "toolsToUse": [
        "MySQL Workbench / pgAdmin",
        "MongoDB Compass",
        "Redis CLI",
        "DBeaver (Universal DB Tool)",
        "DataGrip",
        "Database Performance Monitoring Tools"
      ],
      "bestCourses": {
        "english": [
          "Complete SQL Bootcamp - Jose Portilla",
          "MongoDB Complete Guide",
          "Database Design Course - Stanford",
          "Redis In-Memory Database Guide"
        ],
        "hindi": [
          "Complete SQL Course - CodeWithHarry",
          "Database Management Hindi - Gate Smashers",
          "MongoDB Tutorial Hindi - Thapa Technical",
          "Database Design Hindi - Jenny's Lectures"
        ]
      },
      "docsAndWebsites": [
        "MySQL Documentation",
        "PostgreSQL Documentation",
        "MongoDB Manual",
        "Redis Documentation"
      ],
      "projectIdeas": [
        "E-commerce Database Design",
        "Student Information System DB",
        "Inventory Management with Complex Queries",
        "Social Media Database Schema",
        "Analytics Dashboard with Aggregations"
      ],
      "practicePlatforms": [
        "SQLBolt",
        "HackerRank SQL",
        "LeetCode Database Problems",
        "MongoDB University"
      ]
    }
  },
  {
    "id": 6,
    "title": "APIs & Communication",
    "description": "Learn API design, development, and real-time communication",
    "icon": "Link",
    "gradient": "from-teal-500 to-cyan-600",
    "content": {
      "whatToLearn": [
        "REST API Design Principles (CRUD, HATEOAS, Status Codes)",
        "API Documentation & OpenAPI Specification",
        "GraphQL (Queries, Mutations, Subscriptions)",
        "WebSockets for Real-time Communication",
        "Message Brokers (Kafka, RabbitMQ)",
        "Event-Driven Architecture",
        "API Rate Limiting & Throttling",
        "API Security & Best Practices"
      ],
      "toolsToUse": [
        "Postman / Insomnia",
        "Swagger / OpenAPI",
        "GraphQL Playground",
        "Apache Kafka",
        "RabbitMQ",
        "WebSocket Testing Tools"
      ],
      "bestCourses": {
        "english": [
          "RESTful API Design Course",
          "GraphQL Complete Guide",
          "Apache Kafka for Developers",
          "WebSocket Programming Guide"
        ],
        "hindi": [
          "REST API Complete Hindi - Java Techie",
          "GraphQL Tutorial Hindi - Thapa Technical",
          "Apache Kafka Hindi - Tech Primers",
          "WebSocket Java Hindi - Code Decode"
        ]
      },
      "docsAndWebsites": [
        "REST API Tutorial",
        "GraphQL Documentation",
        "Apache Kafka Documentation",
        "WebSocket API Guide"
      ],
      "projectIdeas": [
        "RESTful API for Online Store",
        "GraphQL API for Social Platform",
        "Real-time Chat Application",
        "Event-driven Order Processing System",
        "API Rate Limiting Implementation"
      ],
      "practicePlatforms": [
        "API Design Challenges",
        "GraphQL Practice Exercises",
        "Real-time App Development",
        "Message Queue Implementation"
      ]
    }
  },
  {
    "id": 7,
    "title": "DevOps, Tools & Deployment",
    "description": "Master deployment, containerization, and cloud technologies",
    "icon": "Cloud",
    "gradient": "from-sky-500 to-blue-600",
    "content": {
      "whatToLearn": [
        "Git & GitHub (Version Control, Branching, PRs, Git Flow)",
        "Build Tools (Maven, Gradle) & Project Management",
        "CI/CD Pipelines (GitHub Actions, Jenkins)",
        "Docker (Containerization, Dockerfile, Docker Compose)",
        "Kubernetes (Orchestration, Pods, Services, Deployments)",
        "Cloud Platforms (AWS, Azure, GCP - EC2, S3, RDS, Lambda)",
        "Infrastructure as Code (Terraform basics)",
        "Monitoring & Logging (Prometheus, ELK Stack)"
      ],
      "toolsToUse": [
        "Git & GitHub/GitLab",
        "Docker Desktop",
        "Kubernetes (kubectl)",
        "AWS CLI / Azure CLI",
        "Jenkins / GitHub Actions",
        "Terraform"
      ],
      "bestCourses": {
        "english": [
          "Docker & Kubernetes Complete Guide",
          "AWS Certified Developer Course",
          "DevOps for Developers",
          "CI/CD Pipeline Masterclass"
        ],
        "hindi": [
          "Docker Complete Course Hindi - Technical Suneja",
          "AWS Hindi Tutorial - Abhishek Veeramalla",
          "DevOps Hindi - TechWorld with Nana",
          "Kubernetes Hindi - KodeKloud"
        ]
      },
      "docsAndWebsites": [
        "Docker Documentation",
        "Kubernetes Documentation",
        "AWS Documentation",
        "GitHub Actions Guide"
      ],
      "projectIdeas": [
        "Dockerized Java Application",
        "Kubernetes Deployment of Microservices",
        "CI/CD Pipeline for Spring Boot App",
        "AWS Lambda Function Development",
        "Infrastructure Automation with Terraform"
      ],
      "practicePlatforms": [
        "Docker Hub Projects",
        "AWS Free Tier Practice",
        "Kubernetes Playground",
        "GitHub Actions Workflows"
      ]
    }
  },
  {
    "id": 8,
    "title": "Testing",
    "description": "Implement comprehensive testing strategies for reliable applications",
    "icon": "Shield",
    "gradient": "from-rose-500 to-pink-600",
    "content": {
      "whatToLearn": [
        "Unit Testing with JUnit 5 & Mockito",
        "Integration Testing Strategies",
        "Test-Driven Development (TDD) Approach",
        "API Testing with Postman & REST Assured",
        "Frontend Testing (Jest, React Testing Library)",
        "End-to-End Testing (Selenium, Cypress)",
        "Performance Testing & Load Testing",
        "Test Coverage & Code Quality Analysis"
      ],
      "toolsToUse": [
        "JUnit 5 & Mockito",
        "TestNG",
        "Postman / Thunder Client",
        "Selenium WebDriver",
        "Cypress",
        "JMeter for Load Testing"
      ],
      "bestCourses": {
        "english": [
          "JUnit & Mockito Complete Course",
          "Test-Driven Development in Java",
          "Selenium WebDriver Tutorial",
          "API Testing with REST Assured"
        ],
        "hindi": [
          "JUnit Testing Java Hindi - CodeWithHarry",
          "Selenium Java Hindi - Mukesh otwani",
          "API Testing Hindi - SDET- QA",
          "Software Testing Hindi - Testing World"
        ]
      },
      "docsAndWebsites": [
        "JUnit 5 User Guide",
        "Mockito Documentation",
        "Selenium Documentation",
        "Cypress Documentation"
      ],
      "projectIdeas": [
        "Automated Testing Suite for E-commerce",
        "API Testing Framework",
        "Performance Testing Dashboard",
        "Test Data Management System",
        "Cross-browser Testing Automation"
      ],
      "practicePlatforms": [
        "Test Automation Practice Sites",
        "API Testing Challenges",
        "Selenium Practice Websites",
        "Testing Framework Development"
      ]
    }
  },
  {
    "id": 9,
    "title": "Data Structures & Algorithms",
    "description": "Master DSA concepts essential for technical interviews and problem-solving",
    "icon": "CircuitBoard",
    "gradient": "from-amber-500 to-yellow-600",
    "content": {
      "whatToLearn": [
        "Arrays & Strings Manipulation",
        "Linked Lists (Singly, Doubly, Circular)",
        "Stacks & Queues (Implementation & Applications)",
        "Trees (Binary Trees, BST, AVL, Heap)",
        "Graphs & Graph Algorithms (BFS, DFS, Shortest Path)",
        "Dynamic Programming (Memoization, Tabulation)",
        "Greedy Algorithms & Backtracking",
        "Advanced Data Structures (Trie, Segment Tree)"
      ],
      "toolsToUse": [
        "Java Collections Framework",
        "Algorithm Visualization Tools",
        "Big O Analysis Tools",
        "Competitive Programming IDEs",
        "Graph Drawing Tools",
        "Dynamic Programming Visualizers"
      ],
      "bestCourses": {
        "english": [
          "Algorithms Specialization - Stanford",
          "Data Structures & Algorithms - Princeton",
          "Cracking the Coding Interview",
          "LeetCode Patterns Course"
        ],
        "hindi": [
          "DSA Complete Course - CodeWithHarry",
          "Data Structures Java - Jenny's Lectures",
          "Competitive Programming - Luv",
          "DSA Interview Prep - Striver"
        ]
      },
      "docsAndWebsites": [
        "Introduction to Algorithms (CLRS)",
        "GeeksforGeeks DSA",
        "Algorithm Design Manual",
        "Competitive Programming Handbook"
      ],
      "projectIdeas": [
        "Algorithm Visualizer Web Application",
        "Graph Pathfinding Visualizer",
        "Sorting Algorithm Comparison Tool",
        "Dynamic Programming Problem Solver",
        "Data Structure Library Implementation"
      ],
      "practicePlatforms": [
        "LeetCode",
        "HackerRank",
        "CodeChef",
        "Codeforces",
        "AtCoder"
      ]
    }
  },
  {
    "id": 10,
    "title": "Additional Skills",
    "description": "Advanced concepts for senior-level development and architecture",
    "icon": "Zap",
    "gradient": "from-violet-500 to-purple-600",
    "content": {
      "whatToLearn": [
        "Design Patterns (Singleton, Factory, Observer, Strategy, MVC)",
        "System Design (Scalability, Load Balancing, Caching)",
        "Database Sharding & Replication Strategies",
        "CAP Theorem & Distributed Systems",
        "Security Best Practices (OWASP Top 10, CSRF, XSS, SQL Injection)",
        "CORS & Authentication/Authorization",
        "Performance Optimization Techniques",
        "Code Review & Refactoring Principles"
      ],
      "toolsToUse": [
        "UML Design Tools",
        "System Design Whiteboards",
        "Security Scanning Tools",
        "Performance Profiling Tools",
        "Code Quality Analysis Tools",
        "Load Testing Tools"
      ],
      "bestCourses": {
        "english": [
          "Design Patterns in Java",
          "System Design Interview Course",
          "Web Security Fundamentals",
          "Scalable System Architecture"
        ],
        "hindi": [
          "Design Patterns Java Hindi - Durga Sir",
          "System Design Hindi - Gaurav Sen",
          "Security Best Practices Hindi - Technical Suneja",
          "Scalability Concepts Hindi - Tech Primers"
        ]
      },
      "docsAndWebsites": [
        "Gang of Four Design Patterns",
        "System Design Primer",
        "OWASP Security Guide",
        "High Scalability Blog"
      ],
      "projectIdeas": [
        "Design Pattern Implementation Library",
        "System Design Case Studies",
        "Security Audit Tool",
        "Performance Monitoring Dashboard",
        "Scalable Chat Application Architecture"
      ],
      "practicePlatforms": [
        "System Design Mock Interviews",
        "Security Challenge Platforms",
        "Architecture Design Reviews",
        "Performance Optimization Contests"
      ]
    }
  },
  {
    "id": 11,
    "title": "Projects, Portfolio & Career",
    "description": "Build impressive projects and prepare for job opportunities",
    "icon": "Target",
    "gradient": "from-emerald-500 to-green-600",
    "content": {
      "whatToLearn": [
        "Full-Stack Project Development (Java + React)",
        "System Architecture & Technical Documentation",
        "Git Workflow & Open Source Contributions",
        "Technical Resume Writing & LinkedIn Optimization",
        "Interview Preparation (Technical & Behavioral)",
        "Portfolio Website Development",
        "Freelancing & Client Communication",
        "Networking & Community Building"
      ],
      "toolsToUse": [
        "GitHub Portfolio",
        "LinkedIn Profile",
        "Portfolio Website Builders",
        "Project Documentation Tools",
        "Interview Preparation Platforms",
        "Freelancing Platforms"
      ],
      "bestCourses": {
        "english": [
          "System Design Interview Prep",
          "Cracking the Coding Interview",
          "Technical Resume Writing",
          "Freelancing for Developers"
        ],
        "hindi": [
          "Portfolio Building Hindi - CodeWithHarry",
          "Interview Preparation Hindi - Striver",
          "GitHub Profile Hindi - Apna College",
          "Freelancing Tips Hindi - Tech Career"
        ]
      },
      "docsAndWebsites": [
        "GitHub Profile README Guide",
        "Technical Interview Handbook",
        "System Design Interview Resources",
        "Developer Career Guide"
      ],
      "projectIdeas": [
        "Full-Stack E-commerce Platform (Java + React)",
        "Microservices-based Social Media Application",
        "Real-time Stock Trading Platform",
        "Enterprise Resource Planning (ERP) System",
        "AI-powered Job Recommendation Engine",
        "Online Learning Management System",
        "Banking System with Security Features",
        "Food Delivery Platform with Real-time Tracking"
      ],
      "practicePlatforms": [
        "GitHub for Open Source",
        "LeetCode for Interview Prep",
        "System Design Mock Interviews",
        "Freelancing Project Platforms",
        "Tech Community Forums",
        "Developer Networking Events"
      ]
    }
  }
]