import React from "react";

const projects = [
  // Beginner Projects
  {
    id: "phase1-simple-calculator",
    level: "Beginner (0â€“2 months)",
    title: "Simple Calculator",
    description:
      "Build a console-based calculator supporting addition, subtraction, multiplication, division, and modulus. Focus: Functions, basic I/O, operators. Why: Helps understand C++ syntax, user input, and arithmetic logic.",
    url: "https://www.youtube.com/watch?v=6w-Y9SB4pbA", // Calculator tutorial
  },
  {
    id: "phase1-number-guessing",
    level: "Beginner (0â€“2 months)",
    title: "Number Guessing Game",
    description:
      "User guesses a number randomly generated by the program. Focus: Loops, conditionals, random numbers. Why: Learn control flow and logic. Introduces rand() and basic debugging.",
    url: "https://www.youtube.com/watch?v=-k0o7QjiqXc", // Number guessing game tutorial
  },
  {
    id: "phase1-temperature-converter",
    level: "Beginner (0â€“2 months)",
    title: "Temperature Converter",
    description:
      "Convert temperatures between Celsius and Fahrenheit. Focus: Functions, user input/output. Why: Practice with modular code and function design.",
    url: "https://www.youtube.com/watch?v=fl-zyp16DRM", // Temperature converter tutorial
  },
  {
    id: "phase1-bank-management",
    level: "Beginner (0â€“2 months)",
    title: "Bank Management System",
    description:
      "Users can create accounts, deposit, withdraw, and check balance. Focus: Classes, objects, file handling. Why: Learn OOP concepts, file I/O, and state persistence.",
    url: "https://www.youtube.com/watch?v=uO4rnCkla_0", // Bank management system tutorial
  },

  // Intermediate Projects
  {
    id: "phase2-student-management",
    level: "Intermediate (2â€“6 months)",
    title: "Student Management System",
    description:
      "Manage student records with CRUD operations. Focus: OOP, STL (vector, map), file handling. Why: Practice data storage and retrieval.",
    url: "https://www.youtube.com/watch?v=hLOWtfI5hPg", // Student management system tutorial
  },
  {
    id: "phase2-tic-tac-toe",
    level: "Intermediate (2â€“6 months)",
    title: "Tic-Tac-Toe Game",
    description:
      "Implement a 2-player console game. Focus: Arrays, functions, recursion. Why: Learn 2D arrays, game logic, and decision-making algorithms.",
    url: "https://www.youtube.com/watch?v=ayyh-jum-z0", // Tic-Tac-Toe tutorial
  },
  {
    id: "phase2-library-management",
    level: "Intermediate (2â€“6 months)",
    title: "Library Management System",
    description:
      "Maintain books with IDs, titles, authors. Focus: Classes, inheritance, polymorphism, file I/O. Why: Apply OOP principles and modular code design.",
    url: "https://www.youtube.com/watch?v=e_q7AemBFmM", // Library management tutorial
  },

  // Advanced Projects
  {
    id: "phase3-multithreaded-downloader",
    level: "Advanced (6â€“12 months)",
    title: "Multi-threaded File Downloader",
    description:
      "Download files concurrently using threads. Focus: Threads, synchronization (std::thread, mutex). Why: Learn concurrency and thread safety.",
    url: "https://www.youtube.com/watch?v=KNLkfNBhHJU", // Multithreading tutorial
  },
  {
    id: "phase3-chat-server-client",
    level: "Advanced (6â€“12 months)",
    title: "Mini Chat Server/Client",
    description:
      "Build a TCP client-server chat application. Focus: Sockets, networking, multi-threading. Why: Learn client-server architecture, TCP/UDP protocols, and message passing.",
    url: "https://www.youtube.com/watch?v=Jk6g-VsrldY", // Socket programming tutorial
  },
  {
    id: "phase3-mini-database",
    level: "Advanced (6â€“12 months)",
    title: "Mini Database Engine",
    description:
      "Store, retrieve, update, and delete records. Focus: File I/O, STL, data structures (trees, hash maps). Why: Learn indexing, search algorithms, and efficient data storage.",
    url: "https://www.youtube.com/watch?v=Zc47UrfIunU", // Mini database tutorial
  },
];

export default function Projects() {
  return (
    <section className="bg-gray-50 py-12 min-h-screen">
      <div className="max-w-6xl mx-auto px-6">
        <header className="mb-8 text-center">
          <h2 className="text-3xl font-extrabold text-gray-900">
            ðŸ’» C++ Project Roadmap
          </h2>
          <p className="mt-2 text-gray-600">
            Step from beginner to advanced C++ projects with detailed tutorials in Hindi & English.
          </p>
        </header>

        <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {projects.map((p) => (
            <article
              key={p.id}
              className="group bg-white border border-gray-200 rounded-2xl p-6 shadow-sm hover:shadow-lg hover:-translate-y-1 transition-transform"
              aria-labelledby={`${p.id}-title`}
            >
              <span className="inline-block text-xs font-medium bg-indigo-100 text-indigo-800 px-2 py-1 rounded-full">
                {p.level}
              </span>
              <h3
                id={`${p.id}-title`}
                className="mt-4 text-lg font-semibold text-gray-900 group-hover:text-indigo-600"
              >
                {p.title}
              </h3>
              <p className="mt-2 text-gray-600 text-sm">{p.description}</p>
              <a
                href={p.url}
                target="_blank"
                rel="noopener noreferrer"
                className="mt-4 inline-block text-indigo-600 font-medium hover:underline"
              >
                Watch Tutorial â–¶
              </a>
            </article>
          ))}
        </div>

        <footer className="mt-10 text-sm text-gray-500 text-center">
          Build these projects step by step. Focus on pointers, memory management, file I/O, STL, and data structures. Showcase your top projects in your portfolio.
        </footer>
      </div>
    </section>
  );
}
