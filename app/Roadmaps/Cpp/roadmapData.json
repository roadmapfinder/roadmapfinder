 [
    {
      "id": 1,
      "title": "Introduction to C++ Programming",
      "description": "Foundation of C++ programming language and basic concepts",
      "icon": "Code",
      "gradient": "from-blue-500 to-cyan-500",
      "content": {
        "whatToLearn": [
          "C++ Syntax & Basic Structure",
          "Variables & Data Types",
          "Input/Output Operations (cin, cout)",
          "Operators (Arithmetic, Logical, Bitwise)",
          "Control Flow (if/else, switch, loops)",
          "Functions & Function Overloading",
          "Arrays & Strings",
          "Pointers & References",
          "Dynamic Memory Allocation"
        ],
        "toolsToUse": [
          "Visual Studio Code",
          "Code::Blocks",
          "Dev-C++",
          "CLion (JetBrains)",
          "GCC Compiler",
          "MinGW (Windows)",
          "Online IDEs (Replit, OnlineGDB)",
          "Visual Studio Community"
        ],
        "bestCourses": {
          "english": [
            "C++ Programming Course - freeCodeCamp",
            "C++ Tutorial for Complete Beginners - Udemy",
            "Learn C++ Programming - Codecademy",
            "C++ Fundamentals - Pluralsight",
            "Beginning C++ Programming - Coursera"
          ],
          "hindi": [
            "C++ Complete Course - CodeWithHarry",
            "C++ Programming in Hindi - Apna College",
            "C++ Tutorial Hindi - Jenny's Lectures",
            "Complete C++ Course Hindi - Geeky Shows",
            "C++ Programming Hindi - Tech Gun"
          ]
        },
        "docsAndWebsites": [
          "cppreference.com",
          "C++ Reference - cplusplus.com",
          "Microsoft C++ Documentation",
          "GNU GCC Documentation",
          "ISO C++ Standard Documentation"
        ],
        "projectIdeas": [
          "Simple Calculator",
          "Number Guessing Game",
          "Temperature Converter",
          "Basic Banking System",
          "Student Grade Calculator",
          "Simple Text Editor",
          "Tic-Tac-Toe Game"
        ],
        "practicePlatforms": [
          "HackerRank C++",
          "Codewars",
          "LeetCode (Easy Problems)",
          "GeeksforGeeks Practice",
          "HackerEarth"
        ]
      }
    },
    {
      "id": 2,
      "title": "Object-Oriented Programming in C++",
      "description": "Master OOP concepts and advanced C++ programming paradigms",
      "icon": "Layers",
      "gradient": "from-purple-500 to-pink-500",
      "content": {
        "whatToLearn": [
          "Classes & Objects",
          "Constructors & Destructors",
          "Encapsulation & Data Hiding",
          "Inheritance (Single, Multiple, Multilevel)",
          "Polymorphism (Runtime & Compile-time)",
          "Function Overloading & Overriding",
          "Virtual Functions & Abstract Classes",
          "Friend Functions & Classes",
          "Operator Overloading",
          "Static Members & Functions"
        ],
        "toolsToUse": [
          "UML Diagram Tools",
          "Class Diagram Generators",
          "Visual Studio",
          "Qt Creator",
          "Eclipse CDT",
          "Debuggers (GDB, Visual Studio Debugger)"
        ],
        "bestCourses": {
          "english": [
            "Object Oriented Programming in C++",
            "Advanced C++ Programming - Udemy",
            "C++ OOP Concepts - edX",
            "Intermediate C++ - Coursera",
            "C++ Classes and Objects - Pluralsight"
          ],
          "hindi": [
            "C++ OOP Complete Course - CodeWithHarry",
            "Object Oriented Programming Hindi - Apna College",
            "C++ Classes Hindi - Jenny's Lectures",
            "OOP Concepts Hindi - Geeky Shows",
            "Advanced C++ Hindi - Tech With Tim"
          ]
        },
        "docsAndWebsites": [
          "C++ Classes - cppreference",
          "OOP in C++ - GeeksforGeeks",
          "C++ Inheritance Guide",
          "Polymorphism in C++ - Tutorial",
          "Virtual Functions Documentation"
        ],
        "projectIdeas": [
          "Library Management System",
          "Employee Management System",
          "Bank Account Management",
          "Vehicle Rental System",
          "Hospital Management System",
          "Inventory Management",
          "Simple Game Engine"
        ],
        "practicePlatforms": [
          "LeetCode OOP Problems",
          "HackerRank Object Oriented Programming",
          "CodeChef C++ Practice",
          "InterviewBit C++",
          "GeeksforGeeks OOP Problems"
        ]
      }
    },
    {
      "id": 3,
      "title": "STL - Standard Template Library",
      "description": "Master C++ STL containers, iterators, and algorithms",
      "icon": "Database",
      "gradient": "from-green-500 to-teal-500",
      "content": {
        "whatToLearn": [
          "STL Containers (vector, list, deque, set, map)",
          "Iterators (forward, backward, random access)",
          "STL Algorithms (sort, search, find, transform)",
          "Function Objects & Functors",
          "STL Utility Classes (pair, tuple)",
          "Associative Containers (set, multiset, map, multimap)",
          "Unordered Containers (unordered_set, unordered_map)",
          "STL Strings & String Operations",
          "STL Numeric Algorithms"
        ],
        "toolsToUse": [
          "STL Reference Documentation",
          "STL Visualizers",
          "Performance Profilers",
          "Memory Analyzers",
          "Benchmark Tools",
          "STL Debug Mode"
        ],
        "bestCourses": {
          "english": [
            "C++ STL Complete Guide",
            "Mastering C++ Standard Library",
            "STL Algorithms and Data Structures",
            "Advanced STL Programming",
            "C++ STL Tutorial - GeeksforGeeks"
          ],
          "hindi": [
            "C++ STL Complete Course Hindi - CodeWithHarry",
            "STL in C++ Hindi - Apna College",
            "C++ Standard Library Hindi - Luv",
            "STL Tutorial Hindi - Aditya Verma",
            "C++ STL Hindi - TakeUforward"
          ]
        },
        "docsAndWebsites": [
          "STL Reference - cppreference.com",
          "C++ STL - cplusplus.com",
          "STL Containers Guide",
          "STL Algorithms Reference",
          "Iterator Documentation"
        ],
        "projectIdeas": [
          "Custom STL Container Implementation",
          "Data Structure Visualizer",
          "Algorithm Performance Analyzer",
          "Text Processing Tool using STL",
          "Graph Algorithms using STL",
          "Database Query Engine",
          "File Processing System"
        ],
        "practicePlatforms": [
          "Codeforces STL Problems",
          "AtCoder Beginner Contest",
          "LeetCode Medium Problems",
          "SPOJ Classical Problems",
          "CodeChef STL Practice"
        ]
      }
    },
    {
      "id": 4,
      "title": "Data Structures & Algorithms using C++",
      "description": "Comprehensive DSA concepts with C++ implementation",
      "icon": "Brain",
      "gradient": "from-orange-500 to-red-500",
      "content": {
        "whatToLearn": [
          "Time & Space Complexity (Big O Notation)",
          "Arrays & Dynamic Arrays",
          "Linked Lists (Singly, Doubly, Circular)",
          "Stacks & Queues",
          "Trees (Binary, BST, AVL, Heap)",
          "Graphs (BFS, DFS, Shortest Path)",
          "Sorting Algorithms (Quick, Merge, Heap Sort)",
          "Searching Algorithms (Binary Search, Pattern Matching)",
          "Dynamic Programming",
          "Greedy Algorithms",
          "Backtracking",
          "Divide & Conquer"
        ],
        "toolsToUse": [
          "Visualization Tools (VisuAlgo)",
          "Complexity Analyzers",
          "Profiling Tools",
          "Algorithm Visualizers",
          "Performance Benchmarks",
          "Memory Profilers"
        ],
        "bestCourses": {
          "english": [
            "Data Structures and Algorithms - Coursera",
            "Algorithms Specialization - Stanford",
            "Data Structures & Algorithms in C++",
            "Master the Coding Interview - Udemy",
            "Introduction to Algorithms - MIT"
          ],
          "hindi": [
            "DSA Complete Course - CodeWithHarry",
            "Data Structures Hindi - Apna College",
            "Algorithms Hindi - Aditya Verma",
            "DSA in C++ Hindi - Love Babbar",
            "Complete DSA Hindi - TakeUforward (Striver)"
          ]
        },
        "docsAndWebsites": [
          "Algorithm Design Manual",
          "Introduction to Algorithms (CLRS)",
          "Data Structures - GeeksforGeeks",
          "Algorithm Visualization",
          "Competitive Programming Handbook"
        ],
        "projectIdeas": [
          "Data Structure Visualization Tool",
          "Algorithm Performance Comparator",
          "Graph Algorithm Simulator",
          "Sorting Algorithm Visualizer",
          "Path Finding Visualizer",
          "Expression Evaluator",
          "Memory Management Simulator"
        ],
        "practicePlatforms": [
          "LeetCode",
          "Codeforces",
          "CodeChef",
          "AtCoder",
          "SPOJ",
          "HackerRank",
          "InterviewBit",
          "GeeksforGeeks Practice"
        ]
      }
    },
    {
      "id": 5,
      "title": "Advanced C++ Concepts",
      "description": "Modern C++ features and advanced programming techniques",
      "icon": "Zap",
      "gradient": "from-indigo-500 to-purple-600",
      "content": {
        "whatToLearn": [
          "Templates & Generic Programming",
          "Lambda Expressions & Closures",
          "Smart Pointers (unique_ptr, shared_ptr, weak_ptr)",
          "Move Semantics & Perfect Forwarding",
          "RAII (Resource Acquisition Is Initialization)",
          "Exception Handling & RAII",
          "File I/O & Stream Operations",
          "Multithreading & Concurrency",
          "Regular Expressions",
          "C++11/14/17/20 Features",
          "Memory Management",
          "Design Patterns in C++"
        ],
        "toolsToUse": [
          "Modern C++ Compilers (GCC 9+, Clang)",
          "Static Analysis Tools (Clang-Tidy)",
          "Memory Sanitizers (AddressSanitizer)",
          "Thread Sanitizer",
          "Valgrind",
          "Google Test Framework",
          "Boost Libraries",
          "CMake Build System"
        ],
        "bestCourses": {
          "english": [
            "Modern C++ Programming - Udemy",
            "Advanced C++ Programming Techniques",
            "C++ Concurrency in Action",
            "Effective Modern C++ - Scott Meyers",
            "C++ Templates Complete Guide"
          ],
          "hindi": [
            "Advanced C++ Hindi - CodeWithHarry",
            "Modern C++ Features Hindi - Apna College",
            "C++ Templates Hindi - Jenny's Lectures",
            "Multithreading C++ Hindi - Tech With Tim",
            "Advanced Concepts Hindi - Geeky Shows"
          ]
        },
        "docsAndWebsites": [
          "Modern C++ Guidelines",
          "C++ Core Guidelines",
          "Boost Documentation",
          "C++20 Features Guide",
          "Concurrency Documentation"
        ],
        "projectIdeas": [
          "Multi-threaded Web Server",
          "Custom Memory Allocator",
          "Template-based Math Library",
          "Concurrent Data Structures",
          "File Compression Tool",
          "Network Programming Library",
          "Game Engine Components"
        ],
        "practicePlatforms": [
          "Codeforces (Div 1/2)",
          "TopCoder",
          "AtCoder Regular Contest",
          "Google Code Jam",
          "Meta Hacker Cup"
        ]
      }
    },
    {
      "id": 6,
      "title": "Competitive Programming",
      "description": "Master algorithmic problem solving and competitive coding",
      "icon": "Trophy",
      "gradient": "from-cyan-500 to-blue-600",
      "content": {
        "whatToLearn": [
          "Problem Solving Strategies",
          "Advanced Data Structures (Segment Trees, Fenwick Trees)",
          "Graph Algorithms (Dijkstra, Floyd-Warshall, MST)",
          "String Algorithms (KMP, Z-Algorithm, Suffix Arrays)",
          "Number Theory & Modular Arithmetic",
          "Combinatorics & Probability",
          "Game Theory",
          "Computational Geometry",
          "Network Flow Algorithms",
          "Advanced Dynamic Programming"
        ],
        "toolsToUse": [
          "Competitive Programming IDEs",
          "Code Templates",
          "Fast I/O Libraries",
          "Stress Testing Tools",
          "Time Complexity Analyzers",
          "Contest Environment Setup"
        ],
        "bestCourses": {
          "english": [
            "Competitive Programming Essentials",
            "Algorithms for Competitive Programming",
            "Advanced Data Structures for CP",
            "Mathematical Algorithms",
            "Graph Theory for Competitive Programming"
          ],
          "hindi": [
            "Competitive Programming Hindi - Luv",
            "CP Course Hindi - Priyansh Agarwal",
            "Advanced Algorithms Hindi - Kartik Arora",
            "CP Tutorial Hindi - Codechef",
            "Contest Math Hindi - Unacademy"
          ]
        },
        "docsAndWebsites": [
          "Competitive Programming Handbook",
          "USACO Guide",
          "CP-Algorithms",
          "Codeforces Edu Section",
          "AtCoder Library Documentation"
        ],
        "projectIdeas": [
          "Contest Problem Setter Tool",
          "Algorithm Visualizer for CP",
          "Competitive Programming Judge",
          "Problem Difficulty Predictor",
          "Contest Performance Analyzer",
          "Code Template Generator",
          "Problem Recommender System"
        ],
        "practicePlatforms": [
          "Codeforces",
          "AtCoder",
          "CodeChef",
          "TopCoder",
          "SPOJ",
          "USACO",
          "Google Code Jam",
          "Meta Hacker Cup",
          "IOI Problems"
        ]
      }
    },
    {
      "id": 7,
      "title": "Final Projects & Portfolio",
      "description": "Build real-world projects and create a professional portfolio",
      "icon": "Briefcase",
      "gradient": "from-emerald-500 to-green-600",
      "content": {
        "whatToLearn": [
          "Project Planning & Architecture",
          "Version Control with Git",
          "Code Documentation & Comments",
          "Testing & Test-Driven Development",
          "Build Systems (CMake, Make)",
          "Continuous Integration/Deployment",
          "Open Source Contributions",
          "Technical Writing",
          "Code Review Practices",
          "Software Engineering Principles"
        ],
        "toolsToUse": [
          "Git & GitHub",
          "CMake",
          "Google Test/Catch2",
          "Doxygen (Documentation)",
          "Valgrind (Memory Debugging)",
          "GDB (GNU Debugger)",
          "Docker",
          "Jenkins/GitHub Actions",
          "Code Coverage Tools"
        ],
        "bestCourses": {
          "english": [
            "Software Engineering Fundamentals",
            "Git & GitHub Masterclass",
            "C++ Project Development",
            "Open Source Development",
            "Technical Interview Preparation"
          ],
          "hindi": [
            "Git GitHub Tutorial Hindi - CodeWithHarry",
            "Software Development Hindi - Apna College",
            "Project Building Hindi - TechWorld with Nana",
            "Open Source Hindi - Kunal Kushwaha",
            "Interview Prep Hindi - Love Babbar"
          ]
        },
        "docsAndWebsites": [
          "Git Documentation",
          "CMake Tutorial",
          "Google Test Guide",
          "GitHub Actions Documentation",
          "C++ Project Structure Guide"
        ],
        "projectIdeas": [
          "Custom Database Engine",
          "2D/3D Game Engine",
          "HTTP Web Server",
          "Cryptocurrency Implementation",
          "Operating System Kernel",
          "Compiler/Interpreter",
          "Distributed System Simulator",
          "Machine Learning Library",
          "Network Protocol Implementation",
          "Real-time Chat Application"
        ],
        "practicePlatforms": [
          "GitHub",
          "GitLab",
          "Open Source Projects",
          "Hacktoberfest",
          "Google Summer of Code",
          "Microsoft Student Partner"
        ]
      }
    }
  ]
