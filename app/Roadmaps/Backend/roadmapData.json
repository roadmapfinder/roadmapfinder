[
  {
    "id": 1,
    "title": "Foundations (Absolute Beginner)",
    "description": "Essential foundation concepts for backend development and web architecture",
    "icon": "BookOpen",
    "gradient": "from-gray-500 to-slate-600",
    "content": {
      "whatToLearn": [
        "What is Backend? Role in web/app development",
        "Client vs Server Architecture",
        "HTTP/HTTPS Protocols",
        "DNS, Domain, and Hosting Basics",
        "REST APIs vs GraphQL",
        "Basics of Terminal/Command Line",
        "Request-Response Cycle",
        "Status Codes and Headers",
        "JSON and Data Formats",
        "Basic Networking Concepts"
      ],
      "toolsToUse": [
        "Visual Studio Code",
        "Postman or Thunder Client",
        "Git & GitHub",
        "Browser Dev Tools",
        "Terminal/Command Prompt",
        "cURL for API Testing",
        "Live Server Extension"
      ],
      "bestCourses": {
        "english": [
          "freeCodeCamp – Web Dev for Beginners",
          "Traversy Media – HTTP Crash Course",
          "Net Ninja – Backend Fundamentals",
          "Academind – Backend Basics",
          "Programming with Mosh – Backend Intro"
        ],
        "hindi": [
          "CodeWithHarry – Web Development Course",
          "Apna College – Backend Basics",
          "Thapa Technical – Web Dev Fundamentals",
          "WsCube Tech – Backend Introduction",
          "Love Babbar – Backend Development"
        ]
      },
      "docsAndWebsites": [
        "MDN HTTP Guide",
        "Postman API Documentation",
        "REST API Tutorial",
        "HTTP Status Dogs",
        "JSONPlaceholder for Practice"
      ],
      "projectIdeas": [
        "Simple Hello World API",
        "Mock JSON Server Project",
        "Basic HTTP Status Code Checker",
        "Simple API Documentation Page",
        "Request-Response Logger"
      ],
      "practicePlatforms": [
        "Postman",
        "Thunder Client",
        "JSONPlaceholder",
        "HTTPBin",
        "ReqRes"
      ]
    }
  },
  {
    "id": 2,
    "title": "Programming Language Selection",
    "description": "Choose and master a backend programming language with core concepts",
    "icon": "Code",
    "gradient": "from-orange-500 to-red-500",
    "content": {
      "whatToLearn": [
        "Variables, Loops, and Functions",
        "Data Types and Structures",
        "Arrays/Lists and Objects/Dictionaries",
        "OOP Concepts (Classes, Inheritance)",
        "Error Handling and Exceptions",
        "File Handling and I/O Operations",
        "Package Management",
        "Module Import/Export",
        "Debugging Techniques",
        "Memory Management Basics"
      ],
      "toolsToUse": [
        "Node.js & npm (for JavaScript)",
        "Python & pip (for Python)",
        "JDK & Maven (for Java)",
        "VS Code with Language Extensions",
        "Debugger Tools",
        "Package Managers",
        "REPL Environments"
      ],
      "bestCourses": {
        "english": [
          "freeCodeCamp – Node.js Full Course",
          "freeCodeCamp – Python Backend",
          "Traversy Media – Node.js Crash Course",
          "Programming with Mosh – JavaScript",
          "Corey Schafer – Python Tutorial"
        ],
        "hindi": [
          "Hitesh Choudhary – Node.js Course",
          "CodeWithHarry – Python Course",
          "Thapa Technical – JavaScript Basics",
          "Apna College – Programming Fundamentals",
          "WsCube Tech – Backend Programming"
        ]
      },
      "docsAndWebsites": [
        "Node.js Official Documentation",
        "Python Official Documentation",
        "MDN JavaScript Guide",
        "W3Schools Programming Tutorials",
        "GeeksforGeeks Programming"
      ],
      "projectIdeas": [
        "Calculator Console Application",
        "File System Explorer",
        "Basic Data Processing Script",
        "Simple CLI Tool",
        "Text File Analyzer",
        "JSON Data Processor",
        "Basic Web Scraper"
      ],
      "practicePlatforms": [
        "CodeSandbox",
        "Repl.it",
        "LeetCode (Easy Problems)",
        "HackerRank",
        "Codewars"
      ]
    }
  },
  {
    "id": 3,
    "title": "Databases (SQL & NoSQL)",
    "description": "Master database fundamentals, SQL queries, and NoSQL concepts",
    "icon": "Database",
    "gradient": "from-blue-500 to-cyan-500",
    "content": {
      "whatToLearn": [
        "What is a Database and DBMS?",
        "SQL Fundamentals (SELECT, INSERT, UPDATE, DELETE)",
        "Table Relations and Joins",
        "Indexes and Performance",
        "Constraints and Data Integrity",
        "MongoDB Documents and Collections",
        "NoSQL vs SQL Differences",
        "Query Builders and ORMs",
        "Database Design Principles",
        "ACID Properties"
      ],
      "toolsToUse": [
        "PostgreSQL / MySQL",
        "MongoDB + Compass",
        "Prisma ORM",
        "Sequelize ORM",
        "pgAdmin / phpMyAdmin",
        "MongoDB Atlas",
        "DBeaver",
        "Knex.js Query Builder"
      ],
      "bestCourses": {
        "english": [
          "freeCodeCamp – SQL Tutorial",
          "freeCodeCamp – MongoDB Course",
          "Traversy Media – SQL Crash Course",
          "Net Ninja – MongoDB Tutorial",
          "Academind – Database Fundamentals"
        ],
        "hindi": [
          "Apna College – SQL Course",
          "CodeWithHarry – Database Tutorial",
          "Thapa Technical – MongoDB Hindi",
          "WsCube Tech – SQL Hindi",
          "Love Babbar – Database Concepts"
        ]
      },
      "docsAndWebsites": [
        "PostgreSQL Documentation",
        "MongoDB Documentation",
        "Prisma Documentation",
        "W3Schools SQL Tutorial",
        "MySQL Documentation"
      ],
      "projectIdeas": [
        "Blog Database Schema Design",
        "Expense Tracker Database",
        "E-commerce Product Catalog DB",
        "User Management System DB",
        "Library Management Database",
        "MongoDB CRUD Operations",
        "SQL Query Practice Projects"
      ],
      "practicePlatforms": [
        "SQLBolt",
        "W3Schools SQL Tryit",
        "MongoDB University",
        "HackerRank SQL",
        "LeetCode Database"
      ]
    }
  },
  {
    "id": 4,
    "title": "Backend Framework & API Development",
    "description": "Build RESTful APIs using backend frameworks and learn API best practices",
    "icon": "Server",
    "gradient": "from-green-500 to-teal-500",
    "content": {
      "whatToLearn": [
        "REST API Design Principles",
        "HTTP Methods (GET, POST, PUT, DELETE)",
        "Routing and Controllers",
        "Middleware Functions",
        "API Response Formats (JSON)",
        "Error Handling and Status Codes",
        "CORS and Security Headers",
        "Rate Limiting",
        "API Validation",
        "API Documentation"
      ],
      "toolsToUse": [
        "Express.js (Node.js)",
        "Django/Flask (Python)",
        "Spring Boot (Java)",
        "Postman for Testing",
        "Swagger for Documentation",
        "Joi/Yup for Validation",
        "Morgan for Logging",
        "Express Rate Limit"
      ],
      "bestCourses": {
        "english": [
          "freeCodeCamp – REST API Node.js",
          "Traversy Media – Express.js Course",
          "Net Ninja – Node.js Tutorial",
          "Academind – REST API Guide",
          "Programming with Mosh – Node.js"
        ],
        "hindi": [
          "WsCube Tech – Express.js Tutorial",
          "Thapa Technical – Node.js API",
          "CodeWithHarry – Backend Development",
          "Hitesh Choudhary – API Development",
          "Apna College – REST API Hindi"
        ]
      },
      "docsAndWebsites": [
        "Express.js Documentation",
        "Django Documentation",
        "Flask Documentation",
        "REST API Design Guide",
        "HTTP Status Code Reference"
      ],
      "projectIdeas": [
        "Notes App API",
        "Todo List REST API",
        "User Registration API",
        "Blog Posts CRUD API",
        "Product Catalog API",
        "Weather Data API",
        "Contact Form API"
      ],
      "practicePlatforms": [
        "Postman API Challenges",
        "RapidAPI",
        "Backend Challenges",
        "API Testing Practice",
        "Thunder Client Testing"
      ]
    }
  },
  {
    "id": 5,
    "title": "Authentication & Security",
    "description": "Implement secure authentication systems and learn security best practices",
    "icon": "Shield",
    "gradient": "from-purple-500 to-pink-500",
    "content": {
      "whatToLearn": [
        "JWT (JSON Web Tokens)",
        "Session-based Authentication",
        "Password Hashing (bcrypt)",
        "OAuth Integration (Google, GitHub)",
        "Role-based Access Control",
        "CORS Configuration",
        "XSS and CSRF Prevention",
        "SQL Injection Prevention",
        "Rate Limiting and DDoS Protection",
        "Environment Variables Security"
      ],
      "toolsToUse": [
        "bcrypt.js / argon2",
        "jsonwebtoken",
        "Passport.js",
        "Firebase Auth",
        "Helmet.js",
        "dotenv",
        "express-rate-limit",
        "OAuth Libraries"
      ],
      "bestCourses": {
        "english": [
          "Web Dev Simplified – Auth Series",
          "Traversy Media – JWT Authentication",
          "freeCodeCamp – Authentication Tutorial",
          "Net Ninja – Auth with Node.js",
          "Academind – Security Best Practices"
        ],
        "hindi": [
          "Thapa Technical – JWT Auth",
          "CodeWithHarry – Authentication Hindi",
          "Hitesh Choudhary – Security Tutorial",
          "WsCube Tech – Backend Security",
          "Love Babbar – Auth Implementation"
        ]
      },
      "docsAndWebsites": [
        "JWT.io Documentation",
        "Passport.js Documentation",
        "OWASP Security Guide",
        "bcrypt Documentation",
        "OAuth 2.0 Specification"
      ],
      "projectIdeas": [
        "User Registration/Login System",
        "JWT Authentication API",
        "Google OAuth Integration",
        "Role-based Admin Panel",
        "Password Reset System",
        "Multi-factor Authentication",
        "Social Login Implementation"
      ],
      "practicePlatforms": [
        "Auth0 Learning",
        "Firebase Auth Practice",
        "Security Challenge Sites",
        "OWASP WebGoat",
        "Authentication Testing"
      ]
    }
  },
  {
    "id": 6,
    "title": "Advanced Backend Topics",
    "description": "Master advanced backend concepts including file handling, real-time features, and architecture patterns",
    "icon": "Zap",
    "gradient": "from-indigo-500 to-purple-600",
    "content": {
      "whatToLearn": [
        "File Uploads (Multer/Cloudinary/AWS S3)",
        "Background Jobs and Queues",
        "Email Integration (Nodemailer)",
        "WebSockets and Real-time Communication",
        "GraphQL API Development",
        "Microservices Architecture Basics",
        "Event-driven Architecture",
        "Caching Strategies (Redis)",
        "API Rate Limiting and Monitoring",
        "Performance Optimization"
      ],
      "toolsToUse": [
        "Multer for File Uploads",
        "Bull.js / Agenda for Job Queues",
        "Nodemailer / SendGrid",
        "Socket.IO for WebSockets",
        "Apollo GraphQL",
        "Redis for Caching",
        "Cloudinary / AWS S3",
        "Winston for Logging"
      ],
      "bestCourses": {
        "english": [
          "freeCodeCamp – Advanced Node.js",
          "Traversy Media – GraphQL Course",
          "Net Ninja – Socket.IO Tutorial",
          "Academind – Microservices Guide",
          "Programming with Mosh – Advanced Backend"
        ],
        "hindi": [
          "Hitesh Choudhary – Advanced Backend",
          "Thapa Technical – GraphQL Hindi",
          "CodeWithHarry – Advanced Node.js",
          "WsCube Tech – Real-time Applications",
          "Love Babbar – System Design Basics"
        ]
      },
      "docsAndWebsites": [
        "Socket.IO Documentation",
        "Apollo GraphQL Documentation",
        "Bull Queue Documentation",
        "Redis Documentation",
        "AWS S3 Documentation"
      ],
      "projectIdeas": [
        "Real-time Chat Application",
        "File Upload Service",
        "Email Newsletter System",
        "GraphQL Blog API",
        "Job Queue Processing System",
        "Real-time Notification Service",
        "Image Processing API"
      ],
      "practicePlatforms": [
        "Advanced Backend Challenges",
        "System Design Practice",
        "Real-time App Development",
        "GraphQL Playground",
        "WebSocket Testing Tools"
      ]
    }
  },
  {
    "id": 7,
    "title": "Testing, Performance & DevOps Basics",
    "description": "Learn testing methodologies, performance optimization, and deployment strategies",
    "icon": "TestTube",
    "gradient": "from-yellow-500 to-orange-500",
    "content": {
      "whatToLearn": [
        "Unit Testing (Jest, Mocha)",
        "Integration Testing",
        "API Testing (Supertest)",
        "Test-Driven Development (TDD)",
        "Performance Testing and Monitoring",
        "Docker Containerization Basics",
        "CI/CD Pipeline Setup",
        "Cloud Deployment (AWS, Heroku, Vercel)",
        "Environment Configuration",
        "Load Balancing Concepts"
      ],
      "toolsToUse": [
        "Jest & React Testing Library",
        "Mocha & Chai",
        "Supertest for API Testing",
        "Docker & Docker Compose",
        "GitHub Actions",
        "Heroku CLI",
        "PM2 Process Manager",
        "New Relic / DataDog"
      ],
      "bestCourses": {
        "english": [
          "freeCodeCamp – Testing Node.js",
          "Traversy Media – Docker Crash Course",
          "Net Ninja – Testing Tutorial",
          "Academind – DevOps for Developers",
          "Web Dev Simplified – Testing Guide"
        ],
        "hindi": [
          "CodeWithHarry – Testing Hindi",
          "Thapa Technical – Docker Tutorial",
          "Hitesh Choudhary – DevOps Basics",
          "WsCube Tech – Testing & Deployment",
          "Love Babbar – System Design & DevOps"
        ]
      },
      "docsAndWebsites": [
        "Jest Documentation",
        "Docker Documentation",
        "GitHub Actions Documentation",
        "Heroku Dev Center",
        "AWS Documentation"
      ],
      "projectIdeas": [
        "Fully Tested API with Jest",
        "Dockerized Node.js Application",
        "CI/CD Pipeline Setup",
        "Performance Monitoring Dashboard",
        "Load Testing Implementation",
        "Multi-environment Deployment",
        "Automated Testing Suite"
      ],
      "practicePlatforms": [
        "Docker Hub",
        "GitHub Actions",
        "Heroku",
        "Vercel",
        "Railway",
        "Render",
        "Testing Playgrounds"
      ]
    }
  },
  {
    "id": 8,
    "title": "Full-stack Integration & Real-World Practice",
    "description": "Integrate backend with frontend, build complete applications, and prepare for professional development",
    "icon": "Briefcase",
    "gradient": "from-rose-500 to-pink-600",
    "content": {
      "whatToLearn": [
        "Frontend-Backend Integration",
        "API Design for Frontend Consumption",
        "State Management with APIs",
        "Error Handling in Full-stack Apps",
        "Real-time Features Integration",
        "Mobile App Backend (React Native/Flutter)",
        "Scalability Considerations",
        "Code Review Best Practices",
        "Documentation and API Standards",
        "Interview Preparation Topics"
      ],
      "toolsToUse": [
        "React/Vue/Angular for Frontend",
        "React Native/Flutter for Mobile",
        "Postman for API Documentation",
        "Swagger/OpenAPI",
        "Git Workflows",
        "Code Review Tools",
        "Performance Monitoring",
        "Analytics Integration"
      ],
      "bestCourses": {
        "english": [
          "freeCodeCamp – Full Stack Development",
          "Traversy Media – MERN Stack",
          "Net Ninja – Full Stack Projects",
          "Academind – Complete Web Development",
          "Programming with Mosh – Ultimate Courses"
        ],
        "hindi": [
          "CodeWithHarry – Full Stack Development",
          "Hitesh Choudhary – MERN Stack Project",
          "Thapa Technical – Complete Backend",
          "Love Babbar – Full Stack Interview Prep",
          "WsCube Tech – Industry Projects"
        ]
      },
      "docsAndWebsites": [
        "Full Stack Documentation",
        "API Design Best Practices",
        "System Design Primer",
        "Backend Interview Questions",
        "Open Source Contribution Guide"
      ],
      "projectIdeas": [
        "MERN Stack Blog Platform",
        "E-commerce Backend + Admin Panel",
        "Social Media API with Real-time Features",
        "Learning Management System",
        "Task Management with Team Collaboration",
        "Multi-tenant SaaS Backend",
        "Cryptocurrency Portfolio Tracker",
        "Real-time Collaborative Editor",
        "Video Streaming Platform Backend",
        "IoT Data Collection System"
      ],
      "practicePlatforms": [
        "GitHub for Open Source",
        "DevChallenges.io",
        "Backend Challenges",
        "LeetCode System Design",
        "Frontend Mentor (Full Stack)",
        "Hackathons",
        "Technical Interview Platforms"
      ]
    }
  }
]